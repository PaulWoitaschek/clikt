[{"name":"BASH","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.BASH","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/-b-a-s-h/index.html","searchKeys":["BASH","BASH","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.BASH"]},{"name":"FISH","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.FISH","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/-f-i-s-h/index.html","searchKeys":["FISH","FISH","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.FISH"]},{"name":"abstract class CliktCommand(help: String = \"\", epilog: String = \"\", name: String? = null, val invokeWithoutSubcommand: Boolean = false, val printHelpOnEmptyArgs: Boolean = false, val helpTags: Map<String, String> = emptyMap(), autoCompleteEnvvar: String? = \"\", allowMultipleSubcommands: Boolean = false, treatUnknownOptionsAsArgs: Boolean = false, hidden: Boolean = false) : ParameterHolder","description":"com.github.ajalt.clikt.core.CliktCommand","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/index.html","searchKeys":["CliktCommand","abstract class CliktCommand(help: String = \"\", epilog: String = \"\", name: String? = null, val invokeWithoutSubcommand: Boolean = false, val printHelpOnEmptyArgs: Boolean = false, val helpTags: Map<String, String> = emptyMap(), autoCompleteEnvvar: String? = \"\", allowMultipleSubcommands: Boolean = false, treatUnknownOptionsAsArgs: Boolean = false, hidden: Boolean = false) : ParameterHolder","com.github.ajalt.clikt.core.CliktCommand"]},{"name":"abstract fun <T> prompt(text: String, default: String? = null, hideInput: Boolean = false, requireConfirmation: Boolean = false, confirmationPrompt: String = \"Repeat for confirmation: \", promptSuffix: String = \": \", showDefault: Boolean = true, convert: (String) -> T): T?","description":"com.github.ajalt.clikt.core.ICliktCommand.prompt","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/prompt.html","searchKeys":["prompt","abstract fun <T> prompt(text: String, default: String? = null, hideInput: Boolean = false, requireConfirmation: Boolean = false, confirmationPrompt: String = \"Repeat for confirmation: \", promptSuffix: String = \": \", showDefault: Boolean = true, convert: (String) -> T): T?","com.github.ajalt.clikt.core.ICliktCommand.prompt"]},{"name":"abstract fun aliases(): Map<String, List<String>>","description":"com.github.ajalt.clikt.core.ICliktCommand.aliases","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/aliases.html","searchKeys":["aliases","abstract fun aliases(): Map<String, List<String>>","com.github.ajalt.clikt.core.ICliktCommand.aliases"]},{"name":"abstract fun allHelpParams(): List<HelpFormatter.ParameterHelp>","description":"com.github.ajalt.clikt.core.ICliktCommand.allHelpParams","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/all-help-params.html","searchKeys":["allHelpParams","abstract fun allHelpParams(): List<HelpFormatter.ParameterHelp>","com.github.ajalt.clikt.core.ICliktCommand.allHelpParams"]},{"name":"abstract fun confirm(text: String, default: Boolean = false, abort: Boolean = false, promptSuffix: String = \": \", showDefault: Boolean = true): Boolean?","description":"com.github.ajalt.clikt.core.ICliktCommand.confirm","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/confirm.html","searchKeys":["confirm","abstract fun confirm(text: String, default: Boolean = false, abort: Boolean = false, promptSuffix: String = \": \", showDefault: Boolean = true): Boolean?","com.github.ajalt.clikt.core.ICliktCommand.confirm"]},{"name":"abstract fun createContext(argv: List<String>, parent: Context?, ancestors: List<CliktCommand>)","description":"com.github.ajalt.clikt.core.ICliktCommand.createContext","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/create-context.html","searchKeys":["createContext","abstract fun createContext(argv: List<String>, parent: Context?, ancestors: List<CliktCommand>)","com.github.ajalt.clikt.core.ICliktCommand.createContext"]},{"name":"abstract fun echo()","description":"com.github.ajalt.clikt.core.ICliktCommand.echo","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/echo.html","searchKeys":["echo","abstract fun echo()","com.github.ajalt.clikt.core.ICliktCommand.echo"]},{"name":"abstract fun echo(message: Any?, trailingNewline: Boolean = true, err: Boolean = false, lineSeparator: String = currentContext.console.lineSeparator)","description":"com.github.ajalt.clikt.core.ICliktCommand.echo","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/echo.html","searchKeys":["echo","abstract fun echo(message: Any?, trailingNewline: Boolean = true, err: Boolean = false, lineSeparator: String = currentContext.console.lineSeparator)","com.github.ajalt.clikt.core.ICliktCommand.echo"]},{"name":"abstract fun finalize(context: Context, invocations: List<OptionParser.Invocation>)","description":"com.github.ajalt.clikt.parameters.options.Option.finalize","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/finalize.html","searchKeys":["finalize","abstract fun finalize(context: Context, invocations: List<OptionParser.Invocation>)","com.github.ajalt.clikt.parameters.options.Option.finalize"]},{"name":"abstract fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/finalize.html","searchKeys":["finalize","abstract fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","com.github.ajalt.clikt.parameters.groups.ParameterGroup.finalize"]},{"name":"abstract fun finalize(context: Context, values: List<String>)","description":"com.github.ajalt.clikt.parameters.arguments.Argument.finalize","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/finalize.html","searchKeys":["finalize","abstract fun finalize(context: Context, values: List<String>)","com.github.ajalt.clikt.parameters.arguments.Argument.finalize"]},{"name":"abstract fun formatHelp(prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String = \"\"): String","description":"com.github.ajalt.clikt.output.HelpFormatter.formatHelp","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/format-help.html","searchKeys":["formatHelp","abstract fun formatHelp(prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String = \"\"): String","com.github.ajalt.clikt.output.HelpFormatter.formatHelp"]},{"name":"abstract fun formatUsage(parameters: List<HelpFormatter.ParameterHelp>, programName: String = \"\"): String","description":"com.github.ajalt.clikt.output.HelpFormatter.formatUsage","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/format-usage.html","searchKeys":["formatUsage","abstract fun formatUsage(parameters: List<HelpFormatter.ParameterHelp>, programName: String = \"\"): String","com.github.ajalt.clikt.output.HelpFormatter.formatUsage"]},{"name":"abstract fun generateCompletion()","description":"com.github.ajalt.clikt.core.ICliktCommand.generateCompletion","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/generate-completion.html","searchKeys":["generateCompletion","abstract fun generateCompletion()","com.github.ajalt.clikt.core.ICliktCommand.generateCompletion"]},{"name":"abstract fun getCommandNameWithParents(): String","description":"com.github.ajalt.clikt.core.ICliktCommand.getCommandNameWithParents","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/get-command-name-with-parents.html","searchKeys":["getCommandNameWithParents","abstract fun getCommandNameWithParents(): String","com.github.ajalt.clikt.core.ICliktCommand.getCommandNameWithParents"]},{"name":"abstract fun getFormattedHelp(): String","description":"com.github.ajalt.clikt.core.ICliktCommand.getFormattedHelp","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/get-formatted-help.html","searchKeys":["getFormattedHelp","abstract fun getFormattedHelp(): String","com.github.ajalt.clikt.core.ICliktCommand.getFormattedHelp"]},{"name":"abstract fun getFormattedUsage(): String","description":"com.github.ajalt.clikt.core.ICliktCommand.getFormattedUsage","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/get-formatted-usage.html","searchKeys":["getFormattedUsage","abstract fun getFormattedUsage(): String","com.github.ajalt.clikt.core.ICliktCommand.getFormattedUsage"]},{"name":"abstract fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","description":"com.github.ajalt.clikt.sources.ValueSource.getValues","location":"clikt/com.github.ajalt.clikt.sources/-value-source/get-values.html","searchKeys":["getValues","abstract fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","com.github.ajalt.clikt.sources.ValueSource.getValues"]},{"name":"abstract fun issueMessage(message: String)","description":"com.github.ajalt.clikt.core.ICliktCommand.issueMessage","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/issue-message.html","searchKeys":["issueMessage","abstract fun issueMessage(message: String)","com.github.ajalt.clikt.core.ICliktCommand.issueMessage"]},{"name":"abstract fun main(argv: Array<out String>)","description":"com.github.ajalt.clikt.core.ICliktCommand.main","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/main.html","searchKeys":["main","abstract fun main(argv: Array<out String>)","com.github.ajalt.clikt.core.ICliktCommand.main"]},{"name":"abstract fun main(argv: List<String>)","description":"com.github.ajalt.clikt.core.ICliktCommand.main","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/main.html","searchKeys":["main","abstract fun main(argv: List<String>)","com.github.ajalt.clikt.core.ICliktCommand.main"]},{"name":"abstract fun metavar(context: Context): String?","description":"com.github.ajalt.clikt.parameters.options.Option.metavar","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/metavar.html","searchKeys":["metavar","abstract fun metavar(context: Context): String?","com.github.ajalt.clikt.parameters.options.Option.metavar"]},{"name":"abstract fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Argument?","description":"com.github.ajalt.clikt.parameters.arguments.Argument.parameterHelp","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/parameter-help.html","searchKeys":["parameterHelp","abstract fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Argument?","com.github.ajalt.clikt.parameters.arguments.Argument.parameterHelp"]},{"name":"abstract fun parse(argv: Array<String>, parentContext: Context? = null)","description":"com.github.ajalt.clikt.core.ICliktCommand.parse","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/parse.html","searchKeys":["parse","abstract fun parse(argv: Array<String>, parentContext: Context? = null)","com.github.ajalt.clikt.core.ICliktCommand.parse"]},{"name":"abstract fun parse(argv: List<String>, parentContext: Context? = null)","description":"com.github.ajalt.clikt.core.ICliktCommand.parse","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/parse.html","searchKeys":["parse","abstract fun parse(argv: List<String>, parentContext: Context? = null)","com.github.ajalt.clikt.core.ICliktCommand.parse"]},{"name":"abstract fun parseLongOpt(option: Option, name: String, argv: List<String>, index: Int, explicitValue: String?): OptionParser.ParseResult","description":"com.github.ajalt.clikt.parsers.OptionParser.parseLongOpt","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/parse-long-opt.html","searchKeys":["parseLongOpt","abstract fun parseLongOpt(option: Option, name: String, argv: List<String>, index: Int, explicitValue: String?): OptionParser.ParseResult","com.github.ajalt.clikt.parsers.OptionParser.parseLongOpt"]},{"name":"abstract fun parseShortOpt(option: Option, name: String, argv: List<String>, index: Int, optionIndex: Int): OptionParser.ParseResult","description":"com.github.ajalt.clikt.parsers.OptionParser.parseShortOpt","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/parse-short-opt.html","searchKeys":["parseShortOpt","abstract fun parseShortOpt(option: Option, name: String, argv: List<String>, index: Int, optionIndex: Int): OptionParser.ParseResult","com.github.ajalt.clikt.parsers.OptionParser.parseShortOpt"]},{"name":"abstract fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.arguments.Argument.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/post-validate.html","searchKeys":["postValidate","abstract fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.arguments.Argument.postValidate"]},{"name":"abstract fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/post-validate.html","searchKeys":["postValidate","abstract fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.ParameterGroup.postValidate"]},{"name":"abstract fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.options.Option.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/post-validate.html","searchKeys":["postValidate","abstract fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.options.Option.postValidate"]},{"name":"abstract fun print(text: String, error: Boolean)","description":"com.github.ajalt.clikt.output.CliktConsole.print","location":"clikt/com.github.ajalt.clikt.output/-clikt-console/print.html","searchKeys":["print","abstract fun print(text: String, error: Boolean)","com.github.ajalt.clikt.output.CliktConsole.print"]},{"name":"abstract fun prompt(text: String, default: String? = null, hideInput: Boolean = false, requireConfirmation: Boolean = false, confirmationPrompt: String = \"Repeat for confirmation: \", promptSuffix: String = \": \", showDefault: Boolean = true): String?","description":"com.github.ajalt.clikt.core.ICliktCommand.prompt","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/prompt.html","searchKeys":["prompt","abstract fun prompt(text: String, default: String? = null, hideInput: Boolean = false, requireConfirmation: Boolean = false, confirmationPrompt: String = \"Repeat for confirmation: \", promptSuffix: String = \": \", showDefault: Boolean = true): String?","com.github.ajalt.clikt.core.ICliktCommand.prompt"]},{"name":"abstract fun promptForLine(prompt: String, hideInput: Boolean): String?","description":"com.github.ajalt.clikt.output.CliktConsole.promptForLine","location":"clikt/com.github.ajalt.clikt.output/-clikt-console/prompt-for-line.html","searchKeys":["promptForLine","abstract fun promptForLine(prompt: String, hideInput: Boolean): String?","com.github.ajalt.clikt.output.CliktConsole.promptForLine"]},{"name":"abstract fun registerArgument(argument: Argument)","description":"com.github.ajalt.clikt.core.ICliktCommand.registerArgument","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/register-argument.html","searchKeys":["registerArgument","abstract fun registerArgument(argument: Argument)","com.github.ajalt.clikt.core.ICliktCommand.registerArgument"]},{"name":"abstract fun registerOption(option: GroupableOption)","description":"com.github.ajalt.clikt.core.ParameterHolder.registerOption","location":"clikt/com.github.ajalt.clikt.core/-parameter-holder/register-option.html","searchKeys":["registerOption","abstract fun registerOption(option: GroupableOption)","com.github.ajalt.clikt.core.ParameterHolder.registerOption"]},{"name":"abstract fun registerOption(option: Option)","description":"com.github.ajalt.clikt.core.ICliktCommand.registerOption","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/register-option.html","searchKeys":["registerOption","abstract fun registerOption(option: Option)","com.github.ajalt.clikt.core.ICliktCommand.registerOption"]},{"name":"abstract fun registerOptionGroup(group: ParameterGroup)","description":"com.github.ajalt.clikt.core.ICliktCommand.registerOptionGroup","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/register-option-group.html","searchKeys":["registerOptionGroup","abstract fun registerOptionGroup(group: ParameterGroup)","com.github.ajalt.clikt.core.ICliktCommand.registerOptionGroup"]},{"name":"abstract fun registeredArguments(): List<Argument>","description":"com.github.ajalt.clikt.core.ICliktCommand.registeredArguments","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/registered-arguments.html","searchKeys":["registeredArguments","abstract fun registeredArguments(): List<Argument>","com.github.ajalt.clikt.core.ICliktCommand.registeredArguments"]},{"name":"abstract fun registeredOptionNames(): MutableSet<String>","description":"com.github.ajalt.clikt.core.ICliktCommand.registeredOptionNames","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/registered-option-names.html","searchKeys":["registeredOptionNames","abstract fun registeredOptionNames(): MutableSet<String>","com.github.ajalt.clikt.core.ICliktCommand.registeredOptionNames"]},{"name":"abstract fun registeredOptions(): List<Option>","description":"com.github.ajalt.clikt.core.ICliktCommand.registeredOptions","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/registered-options.html","searchKeys":["registeredOptions","abstract fun registeredOptions(): List<Option>","com.github.ajalt.clikt.core.ICliktCommand.registeredOptions"]},{"name":"abstract fun registeredParameterGroups(): List<ParameterGroup>","description":"com.github.ajalt.clikt.core.ICliktCommand.registeredParameterGroups","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/registered-parameter-groups.html","searchKeys":["registeredParameterGroups","abstract fun registeredParameterGroups(): List<ParameterGroup>","com.github.ajalt.clikt.core.ICliktCommand.registeredParameterGroups"]},{"name":"abstract fun registeredSubcommandNames(): List<String>","description":"com.github.ajalt.clikt.core.ICliktCommand.registeredSubcommandNames","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/registered-subcommand-names.html","searchKeys":["registeredSubcommandNames","abstract fun registeredSubcommandNames(): List<String>","com.github.ajalt.clikt.core.ICliktCommand.registeredSubcommandNames"]},{"name":"abstract fun registeredSubcommands(): List<CliktCommand>","description":"com.github.ajalt.clikt.core.ICliktCommand.registeredSubcommands","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/registered-subcommands.html","searchKeys":["registeredSubcommands","abstract fun registeredSubcommands(): List<CliktCommand>","com.github.ajalt.clikt.core.ICliktCommand.registeredSubcommands"]},{"name":"abstract fun run()","description":"com.github.ajalt.clikt.core.CliktCommand.run","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/run.html","searchKeys":["run","abstract fun run()","com.github.ajalt.clikt.core.CliktCommand.run"]},{"name":"abstract fun run()","description":"com.github.ajalt.clikt.core.ICliktCommand.run","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/run.html","searchKeys":["run","abstract fun run()","com.github.ajalt.clikt.core.ICliktCommand.run"]},{"name":"abstract fun shortHelp(): String","description":"com.github.ajalt.clikt.core.ICliktCommand.shortHelp","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/short-help.html","searchKeys":["shortHelp","abstract fun shortHelp(): String","com.github.ajalt.clikt.core.ICliktCommand.shortHelp"]},{"name":"abstract operator fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, T>","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-delegate/provide-delegate.html","searchKeys":["provideDelegate","abstract operator fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, T>","com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate.provideDelegate"]},{"name":"abstract operator fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, T>","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroupDelegate.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group-delegate/provide-delegate.html","searchKeys":["provideDelegate","abstract operator fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, T>","com.github.ajalt.clikt.parameters.groups.ParameterGroupDelegate.provideDelegate"]},{"name":"abstract operator fun provideDelegate(thisRef: ParameterHolder, prop: KProperty<*>): ReadOnlyProperty<ParameterHolder, T>","description":"com.github.ajalt.clikt.parameters.options.OptionDelegate.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-delegate/provide-delegate.html","searchKeys":["provideDelegate","abstract operator fun provideDelegate(thisRef: ParameterHolder, prop: KProperty<*>): ReadOnlyProperty<ParameterHolder, T>","com.github.ajalt.clikt.parameters.options.OptionDelegate.provideDelegate"]},{"name":"abstract override fun registerOption(option: GroupableOption)","description":"com.github.ajalt.clikt.core.ICliktCommand.registerOption","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/register-option.html","searchKeys":["registerOption","abstract override fun registerOption(option: GroupableOption)","com.github.ajalt.clikt.core.ICliktCommand.registerOption"]},{"name":"abstract override var groupName: String?","description":"com.github.ajalt.clikt.core.GroupableOption.groupName","location":"clikt/com.github.ajalt.clikt.core/-groupable-option/group-name.html","searchKeys":["groupName","abstract override var groupName: String?","com.github.ajalt.clikt.core.GroupableOption.groupName"]},{"name":"abstract val argumentHelp: String","description":"com.github.ajalt.clikt.parameters.arguments.Argument.argumentHelp","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/argument-help.html","searchKeys":["argumentHelp","abstract val argumentHelp: String","com.github.ajalt.clikt.parameters.arguments.Argument.argumentHelp"]},{"name":"abstract val commandHelp: String","description":"com.github.ajalt.clikt.core.ICliktCommand.commandHelp","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/command-help.html","searchKeys":["commandHelp","abstract val commandHelp: String","com.github.ajalt.clikt.core.ICliktCommand.commandHelp"]},{"name":"abstract val commandHelpEpilog: String","description":"com.github.ajalt.clikt.core.ICliktCommand.commandHelpEpilog","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/command-help-epilog.html","searchKeys":["commandHelpEpilog","abstract val commandHelpEpilog: String","com.github.ajalt.clikt.core.ICliktCommand.commandHelpEpilog"]},{"name":"abstract val commandName: String","description":"com.github.ajalt.clikt.core.ICliktCommand.commandName","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/command-name.html","searchKeys":["commandName","abstract val commandName: String","com.github.ajalt.clikt.core.ICliktCommand.commandName"]},{"name":"abstract val currentContext: Context","description":"com.github.ajalt.clikt.core.ICliktCommand.currentContext","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/current-context.html","searchKeys":["currentContext","abstract val currentContext: Context","com.github.ajalt.clikt.core.ICliktCommand.currentContext"]},{"name":"abstract val groupHelp: String?","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/group-help.html","searchKeys":["groupHelp","abstract val groupHelp: String?","com.github.ajalt.clikt.parameters.groups.ParameterGroup.groupHelp"]},{"name":"abstract val groupName: String?","description":"com.github.ajalt.clikt.core.StaticallyGroupedOption.groupName","location":"clikt/com.github.ajalt.clikt.core/-statically-grouped-option/group-name.html","searchKeys":["groupName","abstract val groupName: String?","com.github.ajalt.clikt.core.StaticallyGroupedOption.groupName"]},{"name":"abstract val groupName: String?","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/group-name.html","searchKeys":["groupName","abstract val groupName: String?","com.github.ajalt.clikt.parameters.groups.ParameterGroup.groupName"]},{"name":"abstract val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.core.ICliktCommand.helpTags","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/help-tags.html","searchKeys":["helpTags","abstract val helpTags: Map<String, String>","com.github.ajalt.clikt.core.ICliktCommand.helpTags"]},{"name":"abstract val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.parameters.arguments.Argument.helpTags","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/help-tags.html","searchKeys":["helpTags","abstract val helpTags: Map<String, String>","com.github.ajalt.clikt.parameters.arguments.Argument.helpTags"]},{"name":"abstract val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.parameters.options.Option.helpTags","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/help-tags.html","searchKeys":["helpTags","abstract val helpTags: Map<String, String>","com.github.ajalt.clikt.parameters.options.Option.helpTags"]},{"name":"abstract val hidden: Boolean","description":"com.github.ajalt.clikt.parameters.options.Option.hidden","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/hidden.html","searchKeys":["hidden","abstract val hidden: Boolean","com.github.ajalt.clikt.parameters.options.Option.hidden"]},{"name":"abstract val invokeWithoutSubcommand: Boolean","description":"com.github.ajalt.clikt.core.ICliktCommand.invokeWithoutSubcommand","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/invoke-without-subcommand.html","searchKeys":["invokeWithoutSubcommand","abstract val invokeWithoutSubcommand: Boolean","com.github.ajalt.clikt.core.ICliktCommand.invokeWithoutSubcommand"]},{"name":"abstract val lineSeparator: String","description":"com.github.ajalt.clikt.output.CliktConsole.lineSeparator","location":"clikt/com.github.ajalt.clikt.output/-clikt-console/line-separator.html","searchKeys":["lineSeparator","abstract val lineSeparator: String","com.github.ajalt.clikt.output.CliktConsole.lineSeparator"]},{"name":"abstract val messages: List<String>","description":"com.github.ajalt.clikt.core.ICliktCommand.messages","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/messages.html","searchKeys":["messages","abstract val messages: List<String>","com.github.ajalt.clikt.core.ICliktCommand.messages"]},{"name":"abstract val name: String","description":"com.github.ajalt.clikt.parameters.arguments.Argument.name","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/name.html","searchKeys":["name","abstract val name: String","com.github.ajalt.clikt.parameters.arguments.Argument.name"]},{"name":"abstract val names: Set<String>","description":"com.github.ajalt.clikt.parameters.options.Option.names","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/names.html","searchKeys":["names","abstract val names: Set<String>","com.github.ajalt.clikt.parameters.options.Option.names"]},{"name":"abstract val nvalues: Int","description":"com.github.ajalt.clikt.parameters.arguments.Argument.nvalues","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/nvalues.html","searchKeys":["nvalues","abstract val nvalues: Int","com.github.ajalt.clikt.parameters.arguments.Argument.nvalues"]},{"name":"abstract val nvalues: Int","description":"com.github.ajalt.clikt.parameters.options.Option.nvalues","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/nvalues.html","searchKeys":["nvalues","abstract val nvalues: Int","com.github.ajalt.clikt.parameters.options.Option.nvalues"]},{"name":"abstract val optionHelp: String","description":"com.github.ajalt.clikt.parameters.options.Option.optionHelp","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/option-help.html","searchKeys":["optionHelp","abstract val optionHelp: String","com.github.ajalt.clikt.parameters.options.Option.optionHelp"]},{"name":"abstract val parser: OptionParser","description":"com.github.ajalt.clikt.parameters.options.Option.parser","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/parser.html","searchKeys":["parser","abstract val parser: OptionParser","com.github.ajalt.clikt.parameters.options.Option.parser"]},{"name":"abstract val printHelpOnEmptyArgs: Boolean","description":"com.github.ajalt.clikt.core.ICliktCommand.printHelpOnEmptyArgs","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/print-help-on-empty-args.html","searchKeys":["printHelpOnEmptyArgs","abstract val printHelpOnEmptyArgs: Boolean","com.github.ajalt.clikt.core.ICliktCommand.printHelpOnEmptyArgs"]},{"name":"abstract val required: Boolean","description":"com.github.ajalt.clikt.parameters.arguments.Argument.required","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/required.html","searchKeys":["required","abstract val required: Boolean","com.github.ajalt.clikt.parameters.arguments.Argument.required"]},{"name":"abstract val secondaryNames: Set<String>","description":"com.github.ajalt.clikt.parameters.options.Option.secondaryNames","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/secondary-names.html","searchKeys":["secondaryNames","abstract val secondaryNames: Set<String>","com.github.ajalt.clikt.parameters.options.Option.secondaryNames"]},{"name":"abstract val value: T","description":"com.github.ajalt.clikt.parameters.options.OptionDelegate.value","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-delegate/value.html","searchKeys":["value","abstract val value: T","com.github.ajalt.clikt.parameters.options.OptionDelegate.value"]},{"name":"abstract val valueSourceKey: String?","description":"com.github.ajalt.clikt.parameters.options.Option.valueSourceKey","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/value-source-key.html","searchKeys":["valueSourceKey","abstract val valueSourceKey: String?","com.github.ajalt.clikt.parameters.options.Option.valueSourceKey"]},{"name":"abstract var parameterGroup: ParameterGroup?","description":"com.github.ajalt.clikt.core.GroupableOption.parameterGroup","location":"clikt/com.github.ajalt.clikt.core/-groupable-option/parameter-group.html","searchKeys":["parameterGroup","abstract var parameterGroup: ParameterGroup?","com.github.ajalt.clikt.core.GroupableOption.parameterGroup"]},{"name":"annotation class ParameterHolderDsl","description":"com.github.ajalt.clikt.core.ParameterHolderDsl","location":"clikt/com.github.ajalt.clikt.core/-parameter-holder-dsl/index.html","searchKeys":["ParameterHolderDsl","annotation class ParameterHolderDsl","com.github.ajalt.clikt.core.ParameterHolderDsl"]},{"name":"class Abort(val error: Boolean = true) : RuntimeException","description":"com.github.ajalt.clikt.core.Abort","location":"clikt/com.github.ajalt.clikt.core/-abort/index.html","searchKeys":["Abort","class Abort(val error: Boolean = true) : RuntimeException","com.github.ajalt.clikt.core.Abort"]},{"name":"class ArgumentTransformContext(val argument: Argument, val context: Context) : Argument","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/index.html","searchKeys":["ArgumentTransformContext","class ArgumentTransformContext(val argument: Argument, val context: Context) : Argument","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext"]},{"name":"class BadParameterValue : UsageError","description":"com.github.ajalt.clikt.core.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/index.html","searchKeys":["BadParameterValue","class BadParameterValue : UsageError","com.github.ajalt.clikt.core.BadParameterValue"]},{"name":"class Builder(command: CliktCommand, parent: Context? = null)","description":"com.github.ajalt.clikt.core.Context.Builder","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/index.html","searchKeys":["Builder","class Builder(command: CliktCommand, parent: Context? = null)","com.github.ajalt.clikt.core.Context.Builder"]},{"name":"class ChainedValueSource(val sources: List<ValueSource>) : ValueSource","description":"com.github.ajalt.clikt.sources.ChainedValueSource","location":"clikt/com.github.ajalt.clikt.sources/-chained-value-source/index.html","searchKeys":["ChainedValueSource","class ChainedValueSource(val sources: List<ValueSource>) : ValueSource","com.github.ajalt.clikt.sources.ChainedValueSource"]},{"name":"class ChoiceGroup<GroupT : OptionGroup, OutT> : ParameterGroupDelegate<OutT> ","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/index.html","searchKeys":["ChoiceGroup","class ChoiceGroup<GroupT : OptionGroup, OutT> : ParameterGroupDelegate<OutT> ","com.github.ajalt.clikt.parameters.groups.ChoiceGroup"]},{"name":"class CoOccurringOptionGroup<GroupT : OptionGroup, OutT> : ParameterGroupDelegate<OutT> ","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/index.html","searchKeys":["CoOccurringOptionGroup","class CoOccurringOptionGroup<GroupT : OptionGroup, OutT> : ParameterGroupDelegate<OutT> ","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup"]},{"name":"class CompletionCommand(help: String = \"Generate a tab-complete script for the given shell\", epilog: String = \"\", name: String = \"generate-completion\") : CliktCommand","description":"com.github.ajalt.clikt.completion.CompletionCommand","location":"clikt/com.github.ajalt.clikt.completion/-completion-command/index.html","searchKeys":["CompletionCommand","class CompletionCommand(help: String = \"Generate a tab-complete script for the given shell\", epilog: String = \"\", name: String = \"generate-completion\") : CliktCommand","com.github.ajalt.clikt.completion.CompletionCommand"]},{"name":"class Context constructor(val parent: Context?, val command: CliktCommand, val allowInterspersedArgs: Boolean, val autoEnvvarPrefix: String?, val printExtraMessages: Boolean, val helpOptionNames: Set<String>, val helpFormatter: HelpFormatter, val tokenTransformer: Context.(String) -> String, val console: CliktConsole, val expandArgumentFiles: Boolean, val readEnvvarBeforeValueSource: Boolean, val valueSource: ValueSource?, val correctionSuggestor: TypoSuggestor, val localization: Localization, val readEnvvar: (String) -> String? = ::readEnvvar, val originalArgv: List<String> = emptyList())","description":"com.github.ajalt.clikt.core.Context","location":"clikt/com.github.ajalt.clikt.core/-context/index.html","searchKeys":["Context","class Context constructor(val parent: Context?, val command: CliktCommand, val allowInterspersedArgs: Boolean, val autoEnvvarPrefix: String?, val printExtraMessages: Boolean, val helpOptionNames: Set<String>, val helpFormatter: HelpFormatter, val tokenTransformer: Context.(String) -> String, val console: CliktConsole, val expandArgumentFiles: Boolean, val readEnvvarBeforeValueSource: Boolean, val valueSource: ValueSource?, val correctionSuggestor: TypoSuggestor, val localization: Localization, val readEnvvar: (String) -> String? = ::readEnvvar, val originalArgv: List<String> = emptyList())","com.github.ajalt.clikt.core.Context"]},{"name":"class EagerOption(val names: Set<String>, val nvalues: Int, val optionHelp: String, val hidden: Boolean, val helpTags: Map<String, String>, val groupName: String?, callback: OptionTransformContext.() -> Unit) : StaticallyGroupedOption","description":"com.github.ajalt.clikt.parameters.options.EagerOption","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/index.html","searchKeys":["EagerOption","class EagerOption(val names: Set<String>, val nvalues: Int, val optionHelp: String, val hidden: Boolean, val helpTags: Map<String, String>, val groupName: String?, callback: OptionTransformContext.() -> Unit) : StaticallyGroupedOption","com.github.ajalt.clikt.parameters.options.EagerOption"]},{"name":"class FileNotFound(filename: String, var context: Context? = null) : UsageError","description":"com.github.ajalt.clikt.core.FileNotFound","location":"clikt/com.github.ajalt.clikt.core/-file-not-found/index.html","searchKeys":["FileNotFound","class FileNotFound(filename: String, var context: Context? = null) : UsageError","com.github.ajalt.clikt.core.FileNotFound"]},{"name":"class FlagOption<T> : OptionDelegate<T> ","description":"com.github.ajalt.clikt.parameters.options.FlagOption","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/index.html","searchKeys":["FlagOption","class FlagOption<T> : OptionDelegate<T> ","com.github.ajalt.clikt.parameters.options.FlagOption"]},{"name":"class IncorrectArgumentValueCount(var argument: Argument, var context: Context? = null) : UsageError","description":"com.github.ajalt.clikt.core.IncorrectArgumentValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-argument-value-count/index.html","searchKeys":["IncorrectArgumentValueCount","class IncorrectArgumentValueCount(var argument: Argument, var context: Context? = null) : UsageError","com.github.ajalt.clikt.core.IncorrectArgumentValueCount"]},{"name":"class IncorrectOptionValueCount(var option: Option, givenName: String, var context: Context? = null) : UsageError","description":"com.github.ajalt.clikt.core.IncorrectOptionValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-option-value-count/index.html","searchKeys":["IncorrectOptionValueCount","class IncorrectOptionValueCount(var option: Option, givenName: String, var context: Context? = null) : UsageError","com.github.ajalt.clikt.core.IncorrectOptionValueCount"]},{"name":"class InteractiveCliktConsole(console: Console) : CliktConsole","description":"com.github.ajalt.clikt.output.InteractiveCliktConsole","location":"clikt/com.github.ajalt.clikt.output/-interactive-clikt-console/index.html","searchKeys":["InteractiveCliktConsole","class InteractiveCliktConsole(console: Console) : CliktConsole","com.github.ajalt.clikt.output.InteractiveCliktConsole"]},{"name":"class InvalidFileFormat(filename: String, message: String, lineno: Int? = null, var context: Context? = null) : UsageError","description":"com.github.ajalt.clikt.core.InvalidFileFormat","location":"clikt/com.github.ajalt.clikt.core/-invalid-file-format/index.html","searchKeys":["InvalidFileFormat","class InvalidFileFormat(filename: String, message: String, lineno: Int? = null, var context: Context? = null) : UsageError","com.github.ajalt.clikt.core.InvalidFileFormat"]},{"name":"class MapValueSource(values: Map<String, String>, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")) : ValueSource","description":"com.github.ajalt.clikt.sources.MapValueSource","location":"clikt/com.github.ajalt.clikt.sources/-map-value-source/index.html","searchKeys":["MapValueSource","class MapValueSource(values: Map<String, String>, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")) : ValueSource","com.github.ajalt.clikt.sources.MapValueSource"]},{"name":"class MissingArgument(var argument: Argument, var context: Context? = null) : UsageError","description":"com.github.ajalt.clikt.core.MissingArgument","location":"clikt/com.github.ajalt.clikt.core/-missing-argument/index.html","searchKeys":["MissingArgument","class MissingArgument(var argument: Argument, var context: Context? = null) : UsageError","com.github.ajalt.clikt.core.MissingArgument"]},{"name":"class MissingOption(var option: Option, var context: Context? = null) : UsageError","description":"com.github.ajalt.clikt.core.MissingOption","location":"clikt/com.github.ajalt.clikt.core/-missing-option/index.html","searchKeys":["MissingOption","class MissingOption(var option: Option, var context: Context? = null) : UsageError","com.github.ajalt.clikt.core.MissingOption"]},{"name":"class MutuallyExclusiveGroupException(names: List<String>, var context: Context? = null) : UsageError","description":"com.github.ajalt.clikt.core.MutuallyExclusiveGroupException","location":"clikt/com.github.ajalt.clikt.core/-mutually-exclusive-group-exception/index.html","searchKeys":["MutuallyExclusiveGroupException","class MutuallyExclusiveGroupException(names: List<String>, var context: Context? = null) : UsageError","com.github.ajalt.clikt.core.MutuallyExclusiveGroupException"]},{"name":"class MutuallyExclusiveOptionTransformContext(val context: Context)","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-option-transform-context/index.html","searchKeys":["MutuallyExclusiveOptionTransformContext","class MutuallyExclusiveOptionTransformContext(val context: Context)","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext"]},{"name":"class MutuallyExclusiveOptions<OptT : Any, OutT> : ParameterGroupDelegate<OutT> ","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/index.html","searchKeys":["MutuallyExclusiveOptions","class MutuallyExclusiveOptions<OptT : Any, OutT> : ParameterGroupDelegate<OutT> ","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions"]},{"name":"class NoSuchOption(givenName: String, possibilities: List<String> = emptyList(), var context: Context? = null) : NoSuchParameter","description":"com.github.ajalt.clikt.core.NoSuchOption","location":"clikt/com.github.ajalt.clikt.core/-no-such-option/index.html","searchKeys":["NoSuchOption","class NoSuchOption(givenName: String, possibilities: List<String> = emptyList(), var context: Context? = null) : NoSuchParameter","com.github.ajalt.clikt.core.NoSuchOption"]},{"name":"class NoSuchSubcommand(givenName: String, possibilities: List<String> = emptyList(), var context: Context? = null) : NoSuchParameter","description":"com.github.ajalt.clikt.core.NoSuchSubcommand","location":"clikt/com.github.ajalt.clikt.core/-no-such-subcommand/index.html","searchKeys":["NoSuchSubcommand","class NoSuchSubcommand(givenName: String, possibilities: List<String> = emptyList(), var context: Context? = null) : NoSuchParameter","com.github.ajalt.clikt.core.NoSuchSubcommand"]},{"name":"class NonInteractiveCliktConsole : CliktConsole","description":"com.github.ajalt.clikt.output.NonInteractiveCliktConsole","location":"clikt/com.github.ajalt.clikt.output/-non-interactive-clikt-console/index.html","searchKeys":["NonInteractiveCliktConsole","class NonInteractiveCliktConsole : CliktConsole","com.github.ajalt.clikt.output.NonInteractiveCliktConsole"]},{"name":"class OptionCallTransformContext(val name: String, val option: Option, val context: Context) : Option","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/index.html","searchKeys":["OptionCallTransformContext","class OptionCallTransformContext(val name: String, val option: Option, val context: Context) : Option","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext"]},{"name":"class OptionTransformContext(val option: Option, val context: Context) : Option","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/index.html","searchKeys":["OptionTransformContext","class OptionTransformContext(val option: Option, val context: Context) : Option","com.github.ajalt.clikt.parameters.options.OptionTransformContext"]},{"name":"class OptionWithValues<AllT, EachT, ValueT> : OptionDelegate<AllT> , GroupableOption","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/index.html","searchKeys":["OptionWithValues","class OptionWithValues<AllT, EachT, ValueT> : OptionDelegate<AllT> , GroupableOption","com.github.ajalt.clikt.parameters.options.OptionWithValues"]},{"name":"class PrintCompletionMessage(message: String, val forceUnixLineEndings: Boolean) : PrintMessage","description":"com.github.ajalt.clikt.core.PrintCompletionMessage","location":"clikt/com.github.ajalt.clikt.core/-print-completion-message/index.html","searchKeys":["PrintCompletionMessage","class PrintCompletionMessage(message: String, val forceUnixLineEndings: Boolean) : PrintMessage","com.github.ajalt.clikt.core.PrintCompletionMessage"]},{"name":"class PrintHelpMessage(val command: CliktCommand, val error: Boolean = false) : CliktError","description":"com.github.ajalt.clikt.core.PrintHelpMessage","location":"clikt/com.github.ajalt.clikt.core/-print-help-message/index.html","searchKeys":["PrintHelpMessage","class PrintHelpMessage(val command: CliktCommand, val error: Boolean = false) : CliktError","com.github.ajalt.clikt.core.PrintHelpMessage"]},{"name":"class ProcessedArgument<AllT, ValueT> : ArgumentDelegate<AllT> ","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/index.html","searchKeys":["ProcessedArgument","class ProcessedArgument<AllT, ValueT> : ArgumentDelegate<AllT> ","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument"]},{"name":"class ProgramResult(val statusCode: Int) : CliktError","description":"com.github.ajalt.clikt.core.ProgramResult","location":"clikt/com.github.ajalt.clikt.core/-program-result/index.html","searchKeys":["ProgramResult","class ProgramResult(val statusCode: Int) : CliktError","com.github.ajalt.clikt.core.ProgramResult"]},{"name":"const val DEFAULT: String","description":"com.github.ajalt.clikt.output.HelpFormatter.Tags.DEFAULT","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-tags/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","const val DEFAULT: String","com.github.ajalt.clikt.output.HelpFormatter.Tags.DEFAULT"]},{"name":"const val MAX_ENVVAR_SIZE: UInt","description":"com.github.ajalt.clikt.mpp.MAX_ENVVAR_SIZE","location":"clikt/com.github.ajalt.clikt.mpp/-m-a-x_-e-n-v-v-a-r_-s-i-z-e.html","searchKeys":["MAX_ENVVAR_SIZE","const val MAX_ENVVAR_SIZE: UInt","com.github.ajalt.clikt.mpp.MAX_ENVVAR_SIZE"]},{"name":"const val REQUIRED: String","description":"com.github.ajalt.clikt.output.HelpFormatter.Tags.REQUIRED","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-tags/-r-e-q-u-i-r-e-d.html","searchKeys":["REQUIRED","const val REQUIRED: String","com.github.ajalt.clikt.output.HelpFormatter.Tags.REQUIRED"]},{"name":"data class Argument(val name: String, val help: String, val required: Boolean, val repeatable: Boolean, val tags: Map<String, String>) : HelpFormatter.ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/index.html","searchKeys":["Argument","data class Argument(val name: String, val help: String, val required: Boolean, val repeatable: Boolean, val tags: Map<String, String>) : HelpFormatter.ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument"]},{"name":"data class Custom(val generator: (CompletionCandidates.Custom.ShellType) -> String?) : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/index.html","searchKeys":["Custom","data class Custom(val generator: (CompletionCandidates.Custom.ShellType) -> String?) : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Custom"]},{"name":"data class Fixed(val candidates: Set<String>) : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Fixed","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-fixed/index.html","searchKeys":["Fixed","data class Fixed(val candidates: Set<String>) : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Fixed"]},{"name":"data class Group(val name: String, val help: String) : HelpFormatter.ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-group/index.html","searchKeys":["Group","data class Group(val name: String, val help: String) : HelpFormatter.ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group"]},{"name":"data class Invocation(val name: String, val values: List<String>)","description":"com.github.ajalt.clikt.parsers.OptionParser.Invocation","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/-invocation/index.html","searchKeys":["Invocation","data class Invocation(val name: String, val values: List<String>)","com.github.ajalt.clikt.parsers.OptionParser.Invocation"]},{"name":"data class Invocation(val values: List<String>)","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/index.html","searchKeys":["Invocation","data class Invocation(val values: List<String>)","com.github.ajalt.clikt.sources.ValueSource.Invocation"]},{"name":"data class Option(val names: Set<String>, val secondaryNames: Set<String>, val metavar: String?, val help: String, val nvalues: Int, val tags: Map<String, String>, val groupName: String?) : HelpFormatter.ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/index.html","searchKeys":["Option","data class Option(val names: Set<String>, val secondaryNames: Set<String>, val metavar: String?, val help: String, val nvalues: Int, val tags: Map<String, String>, val groupName: String?) : HelpFormatter.ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option"]},{"name":"data class ParseResult(val consumedCount: Int, val invocation: OptionParser.Invocation)","description":"com.github.ajalt.clikt.parsers.OptionParser.ParseResult","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/-parse-result/index.html","searchKeys":["ParseResult","data class ParseResult(val consumedCount: Int, val invocation: OptionParser.Invocation)","com.github.ajalt.clikt.parsers.OptionParser.ParseResult"]},{"name":"data class Subcommand(val name: String, val help: String, val tags: Map<String, String>) : HelpFormatter.ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/index.html","searchKeys":["Subcommand","data class Subcommand(val name: String, val help: String, val tags: Map<String, String>) : HelpFormatter.ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand"]},{"name":"data class ValueWithDefault<out T>(val explicit: T?, val default: T)","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/index.html","searchKeys":["ValueWithDefault","data class ValueWithDefault<out T>(val explicit: T?, val default: T)","com.github.ajalt.clikt.parameters.options.ValueWithDefault"]},{"name":"enum ShellType : Enum<CompletionCandidates.Custom.ShellType> ","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/index.html","searchKeys":["ShellType","enum ShellType : Enum<CompletionCandidates.Custom.ShellType> ","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType"]},{"name":"expect fun defaultCliktConsole(): CliktConsole","description":"com.github.ajalt.clikt.output.defaultCliktConsole","location":"clikt/com.github.ajalt.clikt.output/default-clikt-console.html","searchKeys":["defaultCliktConsole","expect fun defaultCliktConsole(): CliktConsole","com.github.ajalt.clikt.output.defaultCliktConsole"]},{"name":"fun <A, B, EachT, ValueT> OptionWithValues<List<Pair<A, B>>, EachT, ValueT>.toMap(): OptionWithValues<Map<A, B>, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.toMap","location":"clikt/com.github.ajalt.clikt.parameters.options/to-map.html","searchKeys":["toMap","fun <A, B, EachT, ValueT> OptionWithValues<List<Pair<A, B>>, EachT, ValueT>.toMap(): OptionWithValues<Map<A, B>, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.toMap"]},{"name":"fun <AllInT, ValueT, AllOutT> ProcessedArgument<AllInT, ValueT>.transformAll(nvalues: Int? = null, required: Boolean? = null, transform: ArgCallsTransformer<AllOutT, ValueT>): ProcessedArgument<AllOutT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.arguments/transform-all.html","searchKeys":["transformAll","fun <AllInT, ValueT, AllOutT> ProcessedArgument<AllInT, ValueT>.transformAll(nvalues: Int? = null, required: Boolean? = null, transform: ArgCallsTransformer<AllOutT, ValueT>): ProcessedArgument<AllOutT, ValueT>","com.github.ajalt.clikt.parameters.arguments.transformAll"]},{"name":"fun <AllInT, ValueT, AllOutT> ProcessedArgument<AllInT, ValueT>.transformAll(nvalues: Int?, required: Boolean?, defaultForHelp: String?, transform: ArgCallsTransformer<AllOutT, ValueT>): ProcessedArgument<AllOutT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.arguments/transform-all.html","searchKeys":["transformAll","fun <AllInT, ValueT, AllOutT> ProcessedArgument<AllInT, ValueT>.transformAll(nvalues: Int?, required: Boolean?, defaultForHelp: String?, transform: ArgCallsTransformer<AllOutT, ValueT>): ProcessedArgument<AllOutT, ValueT>","com.github.ajalt.clikt.parameters.arguments.transformAll"]},{"name":"fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.validate(validator: OptionValidator<AllT>): OptionDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.options.validate","location":"clikt/com.github.ajalt.clikt.parameters.options/validate.html","searchKeys":["validate","fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.validate(validator: OptionValidator<AllT>): OptionDelegate<AllT>","com.github.ajalt.clikt.parameters.options.validate"]},{"name":"fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.optional(): ProcessedArgument<AllT?, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.optional","location":"clikt/com.github.ajalt.clikt.parameters.arguments/optional.html","searchKeys":["optional","fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.optional(): ProcessedArgument<AllT?, ValueT>","com.github.ajalt.clikt.parameters.arguments.optional"]},{"name":"fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.validate(validator: ArgValidator<AllT>): ArgumentDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.arguments.validate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/validate.html","searchKeys":["validate","fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.validate(validator: ArgValidator<AllT>): ArgumentDelegate<AllT>","com.github.ajalt.clikt.parameters.arguments.validate"]},{"name":"fun <AllT : Any, ValueT> ProcessedArgument<AllT?, ValueT>.validate(validator: ArgValidator<AllT>): ArgumentDelegate<AllT?>","description":"com.github.ajalt.clikt.parameters.arguments.validate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/validate.html","searchKeys":["validate","fun <AllT : Any, ValueT> ProcessedArgument<AllT?, ValueT>.validate(validator: ArgValidator<AllT>): ArgumentDelegate<AllT?>","com.github.ajalt.clikt.parameters.arguments.validate"]},{"name":"fun <AllT, EachT : Any, ValueT> NullableOption<EachT, ValueT>.transformAll(defaultForHelp: String? = this.helpTags[HelpFormatter.Tags.DEFAULT], showAsRequired: Boolean = HelpFormatter.Tags.REQUIRED in this.helpTags, transform: CallsTransformer<EachT, AllT>): OptionWithValues<AllT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.options/transform-all.html","searchKeys":["transformAll","fun <AllT, EachT : Any, ValueT> NullableOption<EachT, ValueT>.transformAll(defaultForHelp: String? = this.helpTags[HelpFormatter.Tags.DEFAULT], showAsRequired: Boolean = HelpFormatter.Tags.REQUIRED in this.helpTags, transform: CallsTransformer<EachT, AllT>): OptionWithValues<AllT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.transformAll"]},{"name":"fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.deprecated(message: String? = \"\", tagName: String? = \"deprecated\", tagValue: String = \"\", error: Boolean = false): OptionDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.options.deprecated","location":"clikt/com.github.ajalt.clikt.parameters.options/deprecated.html","searchKeys":["deprecated","fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.deprecated(message: String? = \"\", tagName: String? = \"deprecated\", tagValue: String = \"\", error: Boolean = false): OptionDelegate<AllT>","com.github.ajalt.clikt.parameters.options.deprecated"]},{"name":"fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.help(help: String): OptionWithValues<AllT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.help","location":"clikt/com.github.ajalt.clikt.parameters.options/help.html","searchKeys":["help","fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.help(help: String): OptionWithValues<AllT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.help"]},{"name":"fun <AllT, EachT, ValueT> copy(transformValue: ValueTransformer<ValueT>, transformEach: ArgsTransformer<ValueT, EachT>, transformAll: CallsTransformer<EachT, AllT>, validator: OptionValidator<AllT>, names: Set<String> = this.names, metavarWithDefault: ValueWithDefault<Context.() -> String?> = this.metavarWithDefault, nvalues: Int = this.nvalues, help: String = this.optionHelp, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, valueSourceKey: String? = this.valueSourceKey, envvar: String? = this.envvar, valueSplit: Regex? = this.valueSplit, parser: OptionWithValuesParser = this.parser, completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates> = this.completionCandidatesWithDefault): OptionWithValues<AllT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.copy","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/copy.html","searchKeys":["copy","fun <AllT, EachT, ValueT> copy(transformValue: ValueTransformer<ValueT>, transformEach: ArgsTransformer<ValueT, EachT>, transformAll: CallsTransformer<EachT, AllT>, validator: OptionValidator<AllT>, names: Set<String> = this.names, metavarWithDefault: ValueWithDefault<Context.() -> String?> = this.metavarWithDefault, nvalues: Int = this.nvalues, help: String = this.optionHelp, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, valueSourceKey: String? = this.valueSourceKey, envvar: String? = this.envvar, valueSplit: Regex? = this.valueSplit, parser: OptionWithValuesParser = this.parser, completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates> = this.completionCandidatesWithDefault): OptionWithValues<AllT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.copy"]},{"name":"fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.help(help: String): ProcessedArgument<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.help","location":"clikt/com.github.ajalt.clikt.parameters.arguments/help.html","searchKeys":["help","fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.help(help: String): ProcessedArgument<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.help"]},{"name":"fun <AllT, ValueT> copy(transformValue: ArgValueTransformer<ValueT>, transformAll: ArgCallsTransformer<AllT, ValueT>, validator: ArgValidator<AllT>, name: String = this.name, nvalues: Int = this.nvalues, required: Boolean = this.required, help: String = this.argumentHelp, helpTags: Map<String, String> = this.helpTags, completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates> = this.completionCandidatesWithDefault): ProcessedArgument<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.copy","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/copy.html","searchKeys":["copy","fun <AllT, ValueT> copy(transformValue: ArgValueTransformer<ValueT>, transformAll: ArgCallsTransformer<AllT, ValueT>, validator: ArgValidator<AllT>, name: String = this.name, nvalues: Int = this.nvalues, required: Boolean = this.required, help: String = this.argumentHelp, helpTags: Map<String, String> = this.helpTags, completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates> = this.completionCandidatesWithDefault): ProcessedArgument<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.copy"]},{"name":"fun <EachInT : Any, EachOutT : Any, ValueT> NullableOption<EachInT, ValueT>.transformValues(nvalues: Int, transform: ArgsTransformer<ValueT, EachOutT>): NullableOption<EachOutT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.transformValues","location":"clikt/com.github.ajalt.clikt.parameters.options/transform-values.html","searchKeys":["transformValues","fun <EachInT : Any, EachOutT : Any, ValueT> NullableOption<EachInT, ValueT>.transformValues(nvalues: Int, transform: ArgsTransformer<ValueT, EachOutT>): NullableOption<EachOutT, ValueT>","com.github.ajalt.clikt.parameters.options.transformValues"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.default(value: EachT, defaultForHelp: String = value.toString()): OptionWithValues<EachT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.default","location":"clikt/com.github.ajalt.clikt.parameters.options/default.html","searchKeys":["default","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.default(value: EachT, defaultForHelp: String = value.toString()): OptionWithValues<EachT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.default"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.multiple(default: List<EachT> = emptyList(), required: Boolean = false): OptionWithValues<List<EachT>, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.multiple","location":"clikt/com.github.ajalt.clikt.parameters.options/multiple.html","searchKeys":["multiple","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.multiple(default: List<EachT> = emptyList(), required: Boolean = false): OptionWithValues<List<EachT>, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.multiple"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.pair(): NullableOption<Pair<ValueT, ValueT>, ValueT>","description":"com.github.ajalt.clikt.parameters.options.pair","location":"clikt/com.github.ajalt.clikt.parameters.options/pair.html","searchKeys":["pair","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.pair(): NullableOption<Pair<ValueT, ValueT>, ValueT>","com.github.ajalt.clikt.parameters.options.pair"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.required(): OptionWithValues<EachT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.required","location":"clikt/com.github.ajalt.clikt.parameters.options/required.html","searchKeys":["required","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.required(): OptionWithValues<EachT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.required"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.split(delimiter: String): OptionWithValues<List<ValueT>?, List<ValueT>, ValueT>","description":"com.github.ajalt.clikt.parameters.options.split","location":"clikt/com.github.ajalt.clikt.parameters.options/split.html","searchKeys":["split","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.split(delimiter: String): OptionWithValues<List<ValueT>?, List<ValueT>, ValueT>","com.github.ajalt.clikt.parameters.options.split"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.split(regex: Regex): OptionWithValues<List<ValueT>?, List<ValueT>, ValueT>","description":"com.github.ajalt.clikt.parameters.options.split","location":"clikt/com.github.ajalt.clikt.parameters.options/split.html","searchKeys":["split","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.split(regex: Regex): OptionWithValues<List<ValueT>?, List<ValueT>, ValueT>","com.github.ajalt.clikt.parameters.options.split"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.triple(): NullableOption<Triple<ValueT, ValueT, ValueT>, ValueT>","description":"com.github.ajalt.clikt.parameters.options.triple","location":"clikt/com.github.ajalt.clikt.parameters.options/triple.html","searchKeys":["triple","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.triple(): NullableOption<Triple<ValueT, ValueT, ValueT>, ValueT>","com.github.ajalt.clikt.parameters.options.triple"]},{"name":"fun <OptT : Any, OutT> MutuallyExclusiveOptions<OptT, OutT>.help(name: String, help: String): MutuallyExclusiveOptions<OptT, OutT>","description":"com.github.ajalt.clikt.parameters.groups.help","location":"clikt/com.github.ajalt.clikt.parameters.groups/help.html","searchKeys":["help","fun <OptT : Any, OutT> MutuallyExclusiveOptions<OptT, OutT>.help(name: String, help: String): MutuallyExclusiveOptions<OptT, OutT>","com.github.ajalt.clikt.parameters.groups.help"]},{"name":"fun <T : Any> FlagOption<T>.validate(validator: OptionValidator<T>): OptionDelegate<T>","description":"com.github.ajalt.clikt.parameters.options.validate","location":"clikt/com.github.ajalt.clikt.parameters.options/validate.html","searchKeys":["validate","fun <T : Any> FlagOption<T>.validate(validator: OptionValidator<T>): OptionDelegate<T>","com.github.ajalt.clikt.parameters.options.validate"]},{"name":"fun <T : Any> FlagOption<T?>.default(value: T, defaultForHelp: String = value.toString()): FlagOption<T>","description":"com.github.ajalt.clikt.parameters.options.default","location":"clikt/com.github.ajalt.clikt.parameters.options/default.html","searchKeys":["default","fun <T : Any> FlagOption<T?>.default(value: T, defaultForHelp: String = value.toString()): FlagOption<T>","com.github.ajalt.clikt.parameters.options.default"]},{"name":"fun <T : Any> FlagOption<T?>.required(): FlagOption<T>","description":"com.github.ajalt.clikt.parameters.options.required","location":"clikt/com.github.ajalt.clikt.parameters.options/required.html","searchKeys":["required","fun <T : Any> FlagOption<T?>.required(): FlagOption<T>","com.github.ajalt.clikt.parameters.options.required"]},{"name":"fun <T : Any> MutuallyExclusiveOptions<T, T?>.default(value: T): MutuallyExclusiveOptions<T, T>","description":"com.github.ajalt.clikt.parameters.groups.default","location":"clikt/com.github.ajalt.clikt.parameters.groups/default.html","searchKeys":["default","fun <T : Any> MutuallyExclusiveOptions<T, T?>.default(value: T): MutuallyExclusiveOptions<T, T>","com.github.ajalt.clikt.parameters.groups.default"]},{"name":"fun <T : Any> MutuallyExclusiveOptions<T, T?>.required(): MutuallyExclusiveOptions<T, T>","description":"com.github.ajalt.clikt.parameters.groups.required","location":"clikt/com.github.ajalt.clikt.parameters.groups/required.html","searchKeys":["required","fun <T : Any> MutuallyExclusiveOptions<T, T?>.required(): MutuallyExclusiveOptions<T, T>","com.github.ajalt.clikt.parameters.groups.required"]},{"name":"fun <T : Any> MutuallyExclusiveOptions<T, T?>.single(): MutuallyExclusiveOptions<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.single","location":"clikt/com.github.ajalt.clikt.parameters.groups/single.html","searchKeys":["single","fun <T : Any> MutuallyExclusiveOptions<T, T?>.single(): MutuallyExclusiveOptions<T, T?>","com.github.ajalt.clikt.parameters.groups.single"]},{"name":"fun <T : Any> NullableOption<T, T>.prompt(text: String? = null, default: String? = null, hideInput: Boolean = false, requireConfirmation: Boolean = false, confirmationPrompt: String = \"Repeat for confirmation: \", promptSuffix: String = \": \", showDefault: Boolean = true): OptionWithValues<T, T, T>","description":"com.github.ajalt.clikt.parameters.options.prompt","location":"clikt/com.github.ajalt.clikt.parameters.options/prompt.html","searchKeys":["prompt","fun <T : Any> NullableOption<T, T>.prompt(text: String? = null, default: String? = null, hideInput: Boolean = false, requireConfirmation: Boolean = false, confirmationPrompt: String = \"Repeat for confirmation: \", promptSuffix: String = \": \", showDefault: Boolean = true): OptionWithValues<T, T, T>","com.github.ajalt.clikt.parameters.options.prompt"]},{"name":"fun <T : Any> ParameterHolder.mutuallyExclusiveOptions(option1: OptionDelegate<out T?>, option2: OptionDelegate<out T?>, vararg options: OptionDelegate<out T?>, name: String? = null, help: String? = null): MutuallyExclusiveOptions<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.mutuallyExclusiveOptions","location":"clikt/com.github.ajalt.clikt.parameters.groups/mutually-exclusive-options.html","searchKeys":["mutuallyExclusiveOptions","fun <T : Any> ParameterHolder.mutuallyExclusiveOptions(option1: OptionDelegate<out T?>, option2: OptionDelegate<out T?>, vararg options: OptionDelegate<out T?>, name: String? = null, help: String? = null): MutuallyExclusiveOptions<T, T?>","com.github.ajalt.clikt.parameters.groups.mutuallyExclusiveOptions"]},{"name":"fun <T : Any> ProcessedArgument<List<T>, T>.unique(): ProcessedArgument<Set<T>, T>","description":"com.github.ajalt.clikt.parameters.arguments.unique","location":"clikt/com.github.ajalt.clikt.parameters.arguments/unique.html","searchKeys":["unique","fun <T : Any> ProcessedArgument<List<T>, T>.unique(): ProcessedArgument<Set<T>, T>","com.github.ajalt.clikt.parameters.arguments.unique"]},{"name":"fun <T : Any> ProcessedArgument<T, T>.default(value: T, defaultForHelp: String = value.toString()): ArgumentDelegate<T>","description":"com.github.ajalt.clikt.parameters.arguments.default","location":"clikt/com.github.ajalt.clikt.parameters.arguments/default.html","searchKeys":["default","fun <T : Any> ProcessedArgument<T, T>.default(value: T, defaultForHelp: String = value.toString()): ArgumentDelegate<T>","com.github.ajalt.clikt.parameters.arguments.default"]},{"name":"fun <T : Any> ProcessedArgument<T, T>.multiple(required: Boolean = false, default: List<T> = emptyList()): ProcessedArgument<List<T>, T>","description":"com.github.ajalt.clikt.parameters.arguments.multiple","location":"clikt/com.github.ajalt.clikt.parameters.arguments/multiple.html","searchKeys":["multiple","fun <T : Any> ProcessedArgument<T, T>.multiple(required: Boolean = false, default: List<T> = emptyList()): ProcessedArgument<List<T>, T>","com.github.ajalt.clikt.parameters.arguments.multiple"]},{"name":"fun <T : Any> ProcessedArgument<T, T>.pair(): ProcessedArgument<Pair<T, T>, T>","description":"com.github.ajalt.clikt.parameters.arguments.pair","location":"clikt/com.github.ajalt.clikt.parameters.arguments/pair.html","searchKeys":["pair","fun <T : Any> ProcessedArgument<T, T>.pair(): ProcessedArgument<Pair<T, T>, T>","com.github.ajalt.clikt.parameters.arguments.pair"]},{"name":"fun <T : Any> ProcessedArgument<T, T>.triple(): ProcessedArgument<Triple<T, T, T>, T>","description":"com.github.ajalt.clikt.parameters.arguments.triple","location":"clikt/com.github.ajalt.clikt.parameters.arguments/triple.html","searchKeys":["triple","fun <T : Any> ProcessedArgument<T, T>.triple(): ProcessedArgument<Triple<T, T, T>, T>","com.github.ajalt.clikt.parameters.arguments.triple"]},{"name":"fun <T : Any> RawArgument.choice(choices: Map<String, T>, ignoreCase: Boolean = false): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun <T : Any> RawArgument.choice(choices: Map<String, T>, ignoreCase: Boolean = false): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun <T : Any> RawArgument.choice(vararg choices: Pair<String, T>, ignoreCase: Boolean = false): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun <T : Any> RawArgument.choice(vararg choices: Pair<String, T>, ignoreCase: Boolean = false): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun <T : Any> RawOption.choice(choices: Map<String, T>, metavar: String = mvar(choices.keys), ignoreCase: Boolean = false): NullableOption<T, T>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun <T : Any> RawOption.choice(choices: Map<String, T>, metavar: String = mvar(choices.keys), ignoreCase: Boolean = false): NullableOption<T, T>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun <T : Any> RawOption.choice(vararg choices: Pair<String, T>, metavar: String = mvar(choices.map { it.first }), ignoreCase: Boolean = false): NullableOption<T, T>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun <T : Any> RawOption.choice(vararg choices: Pair<String, T>, metavar: String = mvar(choices.map { it.first }), ignoreCase: Boolean = false): NullableOption<T, T>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun <T : Any> RawOption.switch(choices: Map<String, T>): FlagOption<T?>","description":"com.github.ajalt.clikt.parameters.options.switch","location":"clikt/com.github.ajalt.clikt.parameters.options/switch.html","searchKeys":["switch","fun <T : Any> RawOption.switch(choices: Map<String, T>): FlagOption<T?>","com.github.ajalt.clikt.parameters.options.switch"]},{"name":"fun <T : Any> RawOption.switch(vararg choices: Pair<String, T>): FlagOption<T?>","description":"com.github.ajalt.clikt.parameters.options.switch","location":"clikt/com.github.ajalt.clikt.parameters.options/switch.html","searchKeys":["switch","fun <T : Any> RawOption.switch(vararg choices: Pair<String, T>): FlagOption<T?>","com.github.ajalt.clikt.parameters.options.switch"]},{"name":"fun <T : CliktCommand> T.completionOption(vararg names: String = arrayOf(\"--generate-completion\"), help: String = \"\", hidden: Boolean = false): T","description":"com.github.ajalt.clikt.completion.completionOption","location":"clikt/com.github.ajalt.clikt.completion/completion-option.html","searchKeys":["completionOption","fun <T : CliktCommand> T.completionOption(vararg names: String = arrayOf(\"--generate-completion\"), help: String = \"\", hidden: Boolean = false): T","com.github.ajalt.clikt.completion.completionOption"]},{"name":"fun <T : CliktCommand> T.context(block: Context.Builder.() -> Unit): T","description":"com.github.ajalt.clikt.core.context","location":"clikt/com.github.ajalt.clikt.core/context.html","searchKeys":["context","fun <T : CliktCommand> T.context(block: Context.Builder.() -> Unit): T","com.github.ajalt.clikt.core.context"]},{"name":"fun <T : CliktCommand> T.eagerOption(name: String, vararg additionalNames: String, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, action: OptionTransformContext.() -> Unit): T","description":"com.github.ajalt.clikt.parameters.options.eagerOption","location":"clikt/com.github.ajalt.clikt.parameters.options/eager-option.html","searchKeys":["eagerOption","fun <T : CliktCommand> T.eagerOption(name: String, vararg additionalNames: String, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, action: OptionTransformContext.() -> Unit): T","com.github.ajalt.clikt.parameters.options.eagerOption"]},{"name":"fun <T : CliktCommand> T.eagerOption(names: Collection<String>, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, action: OptionTransformContext.() -> Unit): T","description":"com.github.ajalt.clikt.parameters.options.eagerOption","location":"clikt/com.github.ajalt.clikt.parameters.options/eager-option.html","searchKeys":["eagerOption","fun <T : CliktCommand> T.eagerOption(names: Collection<String>, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, action: OptionTransformContext.() -> Unit): T","com.github.ajalt.clikt.parameters.options.eagerOption"]},{"name":"fun <T : CliktCommand> T.subcommands(commands: Iterable<CliktCommand>): T","description":"com.github.ajalt.clikt.core.subcommands","location":"clikt/com.github.ajalt.clikt.core/subcommands.html","searchKeys":["subcommands","fun <T : CliktCommand> T.subcommands(commands: Iterable<CliktCommand>): T","com.github.ajalt.clikt.core.subcommands"]},{"name":"fun <T : CliktCommand> T.subcommands(vararg commands: CliktCommand): T","description":"com.github.ajalt.clikt.core.subcommands","location":"clikt/com.github.ajalt.clikt.core/subcommands.html","searchKeys":["subcommands","fun <T : CliktCommand> T.subcommands(vararg commands: CliktCommand): T","com.github.ajalt.clikt.core.subcommands"]},{"name":"fun <T : Comparable<T>> OptionWithValues<T?, T, T>.restrictTo(min: T? = null, max: T? = null, clamp: Boolean = false): OptionWithValues<T?, T, T>","description":"com.github.ajalt.clikt.parameters.types.restrictTo","location":"clikt/com.github.ajalt.clikt.parameters.types/restrict-to.html","searchKeys":["restrictTo","fun <T : Comparable<T>> OptionWithValues<T?, T, T>.restrictTo(min: T? = null, max: T? = null, clamp: Boolean = false): OptionWithValues<T?, T, T>","com.github.ajalt.clikt.parameters.types.restrictTo"]},{"name":"fun <T : Comparable<T>> OptionWithValues<T?, T, T>.restrictTo(range: ClosedRange<T>, clamp: Boolean = false): OptionWithValues<T?, T, T>","description":"com.github.ajalt.clikt.parameters.types.restrictTo","location":"clikt/com.github.ajalt.clikt.parameters.types/restrict-to.html","searchKeys":["restrictTo","fun <T : Comparable<T>> OptionWithValues<T?, T, T>.restrictTo(range: ClosedRange<T>, clamp: Boolean = false): OptionWithValues<T?, T, T>","com.github.ajalt.clikt.parameters.types.restrictTo"]},{"name":"fun <T : Comparable<T>> ProcessedArgument<T, T>.restrictTo(min: T? = null, max: T? = null, clamp: Boolean = false): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.restrictTo","location":"clikt/com.github.ajalt.clikt.parameters.types/restrict-to.html","searchKeys":["restrictTo","fun <T : Comparable<T>> ProcessedArgument<T, T>.restrictTo(min: T? = null, max: T? = null, clamp: Boolean = false): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.restrictTo"]},{"name":"fun <T : Comparable<T>> ProcessedArgument<T, T>.restrictTo(range: ClosedRange<T>, clamp: Boolean = false): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.restrictTo","location":"clikt/com.github.ajalt.clikt.parameters.types/restrict-to.html","searchKeys":["restrictTo","fun <T : Comparable<T>> ProcessedArgument<T, T>.restrictTo(range: ClosedRange<T>, clamp: Boolean = false): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.restrictTo"]},{"name":"fun <T : OptionGroup> ChoiceGroup<T, T?>.defaultByName(name: String): ChoiceGroup<T, T>","description":"com.github.ajalt.clikt.parameters.groups.defaultByName","location":"clikt/com.github.ajalt.clikt.parameters.groups/default-by-name.html","searchKeys":["defaultByName","fun <T : OptionGroup> ChoiceGroup<T, T?>.defaultByName(name: String): ChoiceGroup<T, T>","com.github.ajalt.clikt.parameters.groups.defaultByName"]},{"name":"fun <T : OptionGroup> ChoiceGroup<T, T?>.required(): ChoiceGroup<T, T>","description":"com.github.ajalt.clikt.parameters.groups.required","location":"clikt/com.github.ajalt.clikt.parameters.groups/required.html","searchKeys":["required","fun <T : OptionGroup> ChoiceGroup<T, T?>.required(): ChoiceGroup<T, T>","com.github.ajalt.clikt.parameters.groups.required"]},{"name":"fun <T : OptionGroup> RawOption.groupChoice(choices: Map<String, T>): ChoiceGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.groupChoice","location":"clikt/com.github.ajalt.clikt.parameters.groups/group-choice.html","searchKeys":["groupChoice","fun <T : OptionGroup> RawOption.groupChoice(choices: Map<String, T>): ChoiceGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.groupChoice"]},{"name":"fun <T : OptionGroup> RawOption.groupChoice(vararg choices: Pair<String, T>): ChoiceGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.groupChoice","location":"clikt/com.github.ajalt.clikt.parameters.groups/group-choice.html","searchKeys":["groupChoice","fun <T : OptionGroup> RawOption.groupChoice(vararg choices: Pair<String, T>): ChoiceGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.groupChoice"]},{"name":"fun <T : OptionGroup> RawOption.groupSwitch(choices: Map<String, T>): ChoiceGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.groupSwitch","location":"clikt/com.github.ajalt.clikt.parameters.groups/group-switch.html","searchKeys":["groupSwitch","fun <T : OptionGroup> RawOption.groupSwitch(choices: Map<String, T>): ChoiceGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.groupSwitch"]},{"name":"fun <T : OptionGroup> RawOption.groupSwitch(vararg choices: Pair<String, T>): ChoiceGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.groupSwitch","location":"clikt/com.github.ajalt.clikt.parameters.groups/group-switch.html","searchKeys":["groupSwitch","fun <T : OptionGroup> RawOption.groupSwitch(vararg choices: Pair<String, T>): ChoiceGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.groupSwitch"]},{"name":"fun <T : OptionGroup> T.cooccurring(): CoOccurringOptionGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.cooccurring","location":"clikt/com.github.ajalt.clikt.parameters.groups/cooccurring.html","searchKeys":["cooccurring","fun <T : OptionGroup> T.cooccurring(): CoOccurringOptionGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.cooccurring"]},{"name":"fun <T, EachT, ValueT> OptionWithValues<List<T>, EachT, ValueT>.unique(): OptionWithValues<Set<T>, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.unique","location":"clikt/com.github.ajalt.clikt.parameters.options/unique.html","searchKeys":["unique","fun <T, EachT, ValueT> OptionWithValues<List<T>, EachT, ValueT>.unique(): OptionWithValues<Set<T>, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.unique"]},{"name":"fun <T> FlagOption<T>.deprecated(message: String? = \"\", tagName: String? = \"deprecated\", tagValue: String = \"\", error: Boolean = false): OptionDelegate<T>","description":"com.github.ajalt.clikt.parameters.options.deprecated","location":"clikt/com.github.ajalt.clikt.parameters.options/deprecated.html","searchKeys":["deprecated","fun <T> FlagOption<T>.deprecated(message: String? = \"\", tagName: String? = \"deprecated\", tagValue: String = \"\", error: Boolean = false): OptionDelegate<T>","com.github.ajalt.clikt.parameters.options.deprecated"]},{"name":"fun <T> FlagOption<T>.help(help: String): FlagOption<T>","description":"com.github.ajalt.clikt.parameters.options.help","location":"clikt/com.github.ajalt.clikt.parameters.options/help.html","searchKeys":["help","fun <T> FlagOption<T>.help(help: String): FlagOption<T>","com.github.ajalt.clikt.parameters.options.help"]},{"name":"fun <T> ValueWithDefault<T>.withDefault(default: T): ValueWithDefault<T>","description":"com.github.ajalt.clikt.parameters.options.withDefault","location":"clikt/com.github.ajalt.clikt.parameters.options/with-default.html","searchKeys":["withDefault","fun <T> ValueWithDefault<T>.withDefault(default: T): ValueWithDefault<T>","com.github.ajalt.clikt.parameters.options.withDefault"]},{"name":"fun <T> ValueWithDefault<T>.withExplicit(explicit: T): ValueWithDefault<T>","description":"com.github.ajalt.clikt.parameters.options.withExplicit","location":"clikt/com.github.ajalt.clikt.parameters.options/with-explicit.html","searchKeys":["withExplicit","fun <T> ValueWithDefault<T>.withExplicit(explicit: T): ValueWithDefault<T>","com.github.ajalt.clikt.parameters.options.withExplicit"]},{"name":"fun <T> copy(transform: CoOccurringOptionGroupTransform<GroupT, T>): CoOccurringOptionGroup<GroupT, T>","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.copy","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/copy.html","searchKeys":["copy","fun <T> copy(transform: CoOccurringOptionGroupTransform<GroupT, T>): CoOccurringOptionGroup<GroupT, T>","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.copy"]},{"name":"fun <T> copy(transformAll: MutuallyExclusiveOptionsTransform<OptT, T>): MutuallyExclusiveOptions<OptT, T>","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.copy","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/copy.html","searchKeys":["copy","fun <T> copy(transformAll: MutuallyExclusiveOptionsTransform<OptT, T>): MutuallyExclusiveOptions<OptT, T>","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.copy"]},{"name":"fun <T> copy(transformEnvvar: OptionTransformContext.(String) -> T, transformAll: CallsTransformer<String, T>, validator: OptionValidator<T>, names: Set<String> = this.names, secondaryNames: Set<String> = this.secondaryNames, help: String = this.optionHelp, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, valueSourceKey: String? = this.valueSourceKey, envvar: String? = this.envvar): FlagOption<T>","description":"com.github.ajalt.clikt.parameters.options.FlagOption.copy","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/copy.html","searchKeys":["copy","fun <T> copy(transformEnvvar: OptionTransformContext.(String) -> T, transformAll: CallsTransformer<String, T>, validator: OptionValidator<T>, names: Set<String> = this.names, secondaryNames: Set<String> = this.secondaryNames, help: String = this.optionHelp, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, valueSourceKey: String? = this.valueSourceKey, envvar: String? = this.envvar): FlagOption<T>","com.github.ajalt.clikt.parameters.options.FlagOption.copy"]},{"name":"fun <out T> ValueWithDefault(explicit: T?, default: T)","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault.ValueWithDefault","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/-value-with-default.html","searchKeys":["ValueWithDefault","fun <out T> ValueWithDefault(explicit: T?, default: T)","com.github.ajalt.clikt.parameters.options.ValueWithDefault.ValueWithDefault"]},{"name":"fun Abort(error: Boolean = true)","description":"com.github.ajalt.clikt.core.Abort.Abort","location":"clikt/com.github.ajalt.clikt.core/-abort/-abort.html","searchKeys":["Abort","fun Abort(error: Boolean = true)","com.github.ajalt.clikt.core.Abort.Abort"]},{"name":"fun Argument(name: String, help: String, required: Boolean, repeatable: Boolean, tags: Map<String, String>)","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.Argument","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/-argument.html","searchKeys":["Argument","fun Argument(name: String, help: String, required: Boolean, repeatable: Boolean, tags: Map<String, String>)","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.Argument"]},{"name":"fun ArgumentTransformContext(argument: Argument, context: Context)","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.ArgumentTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/-argument-transform-context.html","searchKeys":["ArgumentTransformContext","fun ArgumentTransformContext(argument: Argument, context: Context)","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.ArgumentTransformContext"]},{"name":"fun BadParameterValue(text: String, argument: Argument, context: Context? = null)","description":"com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/-bad-parameter-value.html","searchKeys":["BadParameterValue","fun BadParameterValue(text: String, argument: Argument, context: Context? = null)","com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue"]},{"name":"fun BadParameterValue(text: String, context: Context? = null)","description":"com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/-bad-parameter-value.html","searchKeys":["BadParameterValue","fun BadParameterValue(text: String, context: Context? = null)","com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue"]},{"name":"fun BadParameterValue(text: String, option: Option, context: Context? = null)","description":"com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/-bad-parameter-value.html","searchKeys":["BadParameterValue","fun BadParameterValue(text: String, option: Option, context: Context? = null)","com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue"]},{"name":"fun BadParameterValue(text: String, paramName: String, context: Context? = null)","description":"com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/-bad-parameter-value.html","searchKeys":["BadParameterValue","fun BadParameterValue(text: String, paramName: String, context: Context? = null)","com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue"]},{"name":"fun Builder(command: CliktCommand, parent: Context? = null)","description":"com.github.ajalt.clikt.core.Context.Builder.Builder","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/-builder.html","searchKeys":["Builder","fun Builder(command: CliktCommand, parent: Context? = null)","com.github.ajalt.clikt.core.Context.Builder.Builder"]},{"name":"fun ChainedValueSource(sources: List<ValueSource>)","description":"com.github.ajalt.clikt.sources.ChainedValueSource.ChainedValueSource","location":"clikt/com.github.ajalt.clikt.sources/-chained-value-source/-chained-value-source.html","searchKeys":["ChainedValueSource","fun ChainedValueSource(sources: List<ValueSource>)","com.github.ajalt.clikt.sources.ChainedValueSource.ChainedValueSource"]},{"name":"fun CliktCommand(help: String = \"\", epilog: String = \"\", name: String? = null, invokeWithoutSubcommand: Boolean = false, printHelpOnEmptyArgs: Boolean = false, helpTags: Map<String, String> = emptyMap(), autoCompleteEnvvar: String? = \"\", allowMultipleSubcommands: Boolean = false, treatUnknownOptionsAsArgs: Boolean = false, hidden: Boolean = false)","description":"com.github.ajalt.clikt.core.CliktCommand.CliktCommand","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/-clikt-command.html","searchKeys":["CliktCommand","fun CliktCommand(help: String = \"\", epilog: String = \"\", name: String? = null, invokeWithoutSubcommand: Boolean = false, printHelpOnEmptyArgs: Boolean = false, helpTags: Map<String, String> = emptyMap(), autoCompleteEnvvar: String? = \"\", allowMultipleSubcommands: Boolean = false, treatUnknownOptionsAsArgs: Boolean = false, hidden: Boolean = false)","com.github.ajalt.clikt.core.CliktCommand.CliktCommand"]},{"name":"fun CliktCommand.argument(name: String = \"\", help: String = \"\", helpTags: Map<String, String> = emptyMap(), completionCandidates: CompletionCandidates? = null): RawArgument","description":"com.github.ajalt.clikt.parameters.arguments.argument","location":"clikt/com.github.ajalt.clikt.parameters.arguments/argument.html","searchKeys":["argument","fun CliktCommand.argument(name: String = \"\", help: String = \"\", helpTags: Map<String, String> = emptyMap(), completionCandidates: CompletionCandidates? = null): RawArgument","com.github.ajalt.clikt.parameters.arguments.argument"]},{"name":"fun CliktError(message: String? = null, cause: Exception? = null)","description":"com.github.ajalt.clikt.core.CliktError.CliktError","location":"clikt/com.github.ajalt.clikt.core/-clikt-error/-clikt-error.html","searchKeys":["CliktError","fun CliktError(message: String? = null, cause: Exception? = null)","com.github.ajalt.clikt.core.CliktError.CliktError"]},{"name":"fun CliktHelpFormatter(localization: Localization = defaultLocalization, indent: String = \"  \", width: Int? = null, maxWidth: Int = 78, maxColWidth: Int? = null, colSpacing: Int = 2, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","description":"com.github.ajalt.clikt.output.CliktHelpFormatter.CliktHelpFormatter","location":"clikt/com.github.ajalt.clikt.output/-clikt-help-formatter/-clikt-help-formatter.html","searchKeys":["CliktHelpFormatter","fun CliktHelpFormatter(localization: Localization = defaultLocalization, indent: String = \"  \", width: Int? = null, maxWidth: Int = 78, maxColWidth: Int? = null, colSpacing: Int = 2, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","com.github.ajalt.clikt.output.CliktHelpFormatter.CliktHelpFormatter"]},{"name":"fun CompletionCommand(help: String = \"Generate a tab-complete script for the given shell\", epilog: String = \"\", name: String = \"generate-completion\")","description":"com.github.ajalt.clikt.completion.CompletionCommand.CompletionCommand","location":"clikt/com.github.ajalt.clikt.completion/-completion-command/-completion-command.html","searchKeys":["CompletionCommand","fun CompletionCommand(help: String = \"Generate a tab-complete script for the given shell\", epilog: String = \"\", name: String = \"generate-completion\")","com.github.ajalt.clikt.completion.CompletionCommand.CompletionCommand"]},{"name":"fun Context(parent: Context?, command: CliktCommand, allowInterspersedArgs: Boolean, autoEnvvarPrefix: String?, printExtraMessages: Boolean, helpOptionNames: Set<String>, helpFormatter: HelpFormatter, tokenTransformer: Context.(String) -> String, console: CliktConsole, expandArgumentFiles: Boolean, readEnvvarBeforeValueSource: Boolean, valueSource: ValueSource?, correctionSuggestor: TypoSuggestor, localization: Localization, readEnvvar: (String) -> String? = ::readEnvvar, originalArgv: List<String> = emptyList())","description":"com.github.ajalt.clikt.core.Context.Context","location":"clikt/com.github.ajalt.clikt.core/-context/-context.html","searchKeys":["Context","fun Context(parent: Context?, command: CliktCommand, allowInterspersedArgs: Boolean, autoEnvvarPrefix: String?, printExtraMessages: Boolean, helpOptionNames: Set<String>, helpFormatter: HelpFormatter, tokenTransformer: Context.(String) -> String, console: CliktConsole, expandArgumentFiles: Boolean, readEnvvarBeforeValueSource: Boolean, valueSource: ValueSource?, correctionSuggestor: TypoSuggestor, localization: Localization, readEnvvar: (String) -> String? = ::readEnvvar, originalArgv: List<String> = emptyList())","com.github.ajalt.clikt.core.Context.Context"]},{"name":"fun Custom(generator: (CompletionCandidates.Custom.ShellType) -> String?)","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Custom","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-custom.html","searchKeys":["Custom","fun Custom(generator: (CompletionCandidates.Custom.ShellType) -> String?)","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Custom"]},{"name":"fun EagerOption(names: Set<String>, nvalues: Int, optionHelp: String, hidden: Boolean, helpTags: Map<String, String>, groupName: String?, callback: OptionTransformContext.() -> Unit)","description":"com.github.ajalt.clikt.parameters.options.EagerOption.EagerOption","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/-eager-option.html","searchKeys":["EagerOption","fun EagerOption(names: Set<String>, nvalues: Int, optionHelp: String, hidden: Boolean, helpTags: Map<String, String>, groupName: String?, callback: OptionTransformContext.() -> Unit)","com.github.ajalt.clikt.parameters.options.EagerOption.EagerOption"]},{"name":"fun EagerOption(vararg names: String, nvalues: Int = 0, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, callback: OptionTransformContext.() -> Unit)","description":"com.github.ajalt.clikt.parameters.options.EagerOption.EagerOption","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/-eager-option.html","searchKeys":["EagerOption","fun EagerOption(vararg names: String, nvalues: Int = 0, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, callback: OptionTransformContext.() -> Unit)","com.github.ajalt.clikt.parameters.options.EagerOption.EagerOption"]},{"name":"fun FileNotFound(filename: String, context: Context? = null)","description":"com.github.ajalt.clikt.core.FileNotFound.FileNotFound","location":"clikt/com.github.ajalt.clikt.core/-file-not-found/-file-not-found.html","searchKeys":["FileNotFound","fun FileNotFound(filename: String, context: Context? = null)","com.github.ajalt.clikt.core.FileNotFound.FileNotFound"]},{"name":"fun Fixed(candidates: Set<String>)","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.Fixed","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-fixed/-fixed.html","searchKeys":["Fixed","fun Fixed(candidates: Set<String>)","com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.Fixed"]},{"name":"fun Fixed(vararg candidates: String)","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.Fixed","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-fixed/-fixed.html","searchKeys":["Fixed","fun Fixed(vararg candidates: String)","com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.Fixed"]},{"name":"fun Group(name: String, help: String)","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.Group","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-group/-group.html","searchKeys":["Group","fun Group(name: String, help: String)","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.Group"]},{"name":"fun IncorrectArgumentValueCount(argument: Argument, context: Context? = null)","description":"com.github.ajalt.clikt.core.IncorrectArgumentValueCount.IncorrectArgumentValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-argument-value-count/-incorrect-argument-value-count.html","searchKeys":["IncorrectArgumentValueCount","fun IncorrectArgumentValueCount(argument: Argument, context: Context? = null)","com.github.ajalt.clikt.core.IncorrectArgumentValueCount.IncorrectArgumentValueCount"]},{"name":"fun IncorrectOptionValueCount(option: Option, givenName: String, context: Context? = null)","description":"com.github.ajalt.clikt.core.IncorrectOptionValueCount.IncorrectOptionValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-option-value-count/-incorrect-option-value-count.html","searchKeys":["IncorrectOptionValueCount","fun IncorrectOptionValueCount(option: Option, givenName: String, context: Context? = null)","com.github.ajalt.clikt.core.IncorrectOptionValueCount.IncorrectOptionValueCount"]},{"name":"fun InteractiveCliktConsole(console: Console)","description":"com.github.ajalt.clikt.output.InteractiveCliktConsole.InteractiveCliktConsole","location":"clikt/com.github.ajalt.clikt.output/-interactive-clikt-console/-interactive-clikt-console.html","searchKeys":["InteractiveCliktConsole","fun InteractiveCliktConsole(console: Console)","com.github.ajalt.clikt.output.InteractiveCliktConsole.InteractiveCliktConsole"]},{"name":"fun InvalidFileFormat(filename: String, message: String, lineno: Int? = null, context: Context? = null)","description":"com.github.ajalt.clikt.core.InvalidFileFormat.InvalidFileFormat","location":"clikt/com.github.ajalt.clikt.core/-invalid-file-format/-invalid-file-format.html","searchKeys":["InvalidFileFormat","fun InvalidFileFormat(filename: String, message: String, lineno: Int? = null, context: Context? = null)","com.github.ajalt.clikt.core.InvalidFileFormat.InvalidFileFormat"]},{"name":"fun Invocation(name: String, values: List<String>)","description":"com.github.ajalt.clikt.parsers.OptionParser.Invocation.Invocation","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/-invocation/-invocation.html","searchKeys":["Invocation","fun Invocation(name: String, values: List<String>)","com.github.ajalt.clikt.parsers.OptionParser.Invocation.Invocation"]},{"name":"fun Invocation(values: List<String>)","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.Invocation","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/-invocation.html","searchKeys":["Invocation","fun Invocation(values: List<String>)","com.github.ajalt.clikt.sources.ValueSource.Invocation.Invocation"]},{"name":"fun MapValueSource(values: Map<String, String>, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\"))","description":"com.github.ajalt.clikt.sources.MapValueSource.MapValueSource","location":"clikt/com.github.ajalt.clikt.sources/-map-value-source/-map-value-source.html","searchKeys":["MapValueSource","fun MapValueSource(values: Map<String, String>, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\"))","com.github.ajalt.clikt.sources.MapValueSource.MapValueSource"]},{"name":"fun MissingArgument(argument: Argument, context: Context? = null)","description":"com.github.ajalt.clikt.core.MissingArgument.MissingArgument","location":"clikt/com.github.ajalt.clikt.core/-missing-argument/-missing-argument.html","searchKeys":["MissingArgument","fun MissingArgument(argument: Argument, context: Context? = null)","com.github.ajalt.clikt.core.MissingArgument.MissingArgument"]},{"name":"fun MissingOption(option: Option, context: Context? = null)","description":"com.github.ajalt.clikt.core.MissingOption.MissingOption","location":"clikt/com.github.ajalt.clikt.core/-missing-option/-missing-option.html","searchKeys":["MissingOption","fun MissingOption(option: Option, context: Context? = null)","com.github.ajalt.clikt.core.MissingOption.MissingOption"]},{"name":"fun MutuallyExclusiveGroupException(names: List<String>, context: Context? = null)","description":"com.github.ajalt.clikt.core.MutuallyExclusiveGroupException.MutuallyExclusiveGroupException","location":"clikt/com.github.ajalt.clikt.core/-mutually-exclusive-group-exception/-mutually-exclusive-group-exception.html","searchKeys":["MutuallyExclusiveGroupException","fun MutuallyExclusiveGroupException(names: List<String>, context: Context? = null)","com.github.ajalt.clikt.core.MutuallyExclusiveGroupException.MutuallyExclusiveGroupException"]},{"name":"fun MutuallyExclusiveOptionTransformContext(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext.MutuallyExclusiveOptionTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-option-transform-context/-mutually-exclusive-option-transform-context.html","searchKeys":["MutuallyExclusiveOptionTransformContext","fun MutuallyExclusiveOptionTransformContext(context: Context)","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext.MutuallyExclusiveOptionTransformContext"]},{"name":"fun NoOpCliktCommand(help: String = \"\", epilog: String = \"\", name: String? = null, invokeWithoutSubcommand: Boolean = false, printHelpOnEmptyArgs: Boolean = false, helpTags: Map<String, String> = emptyMap(), autoCompleteEnvvar: String? = \"\", allowMultipleSubcommands: Boolean = false, hidden: Boolean = false)","description":"com.github.ajalt.clikt.core.NoOpCliktCommand.NoOpCliktCommand","location":"clikt/com.github.ajalt.clikt.core/-no-op-clikt-command/-no-op-clikt-command.html","searchKeys":["NoOpCliktCommand","fun NoOpCliktCommand(help: String = \"\", epilog: String = \"\", name: String? = null, invokeWithoutSubcommand: Boolean = false, printHelpOnEmptyArgs: Boolean = false, helpTags: Map<String, String> = emptyMap(), autoCompleteEnvvar: String? = \"\", allowMultipleSubcommands: Boolean = false, hidden: Boolean = false)","com.github.ajalt.clikt.core.NoOpCliktCommand.NoOpCliktCommand"]},{"name":"fun NoSuchOption(givenName: String, possibilities: List<String> = emptyList(), context: Context? = null)","description":"com.github.ajalt.clikt.core.NoSuchOption.NoSuchOption","location":"clikt/com.github.ajalt.clikt.core/-no-such-option/-no-such-option.html","searchKeys":["NoSuchOption","fun NoSuchOption(givenName: String, possibilities: List<String> = emptyList(), context: Context? = null)","com.github.ajalt.clikt.core.NoSuchOption.NoSuchOption"]},{"name":"fun NoSuchSubcommand(givenName: String, possibilities: List<String> = emptyList(), context: Context? = null)","description":"com.github.ajalt.clikt.core.NoSuchSubcommand.NoSuchSubcommand","location":"clikt/com.github.ajalt.clikt.core/-no-such-subcommand/-no-such-subcommand.html","searchKeys":["NoSuchSubcommand","fun NoSuchSubcommand(givenName: String, possibilities: List<String> = emptyList(), context: Context? = null)","com.github.ajalt.clikt.core.NoSuchSubcommand.NoSuchSubcommand"]},{"name":"fun NonInteractiveCliktConsole()","description":"com.github.ajalt.clikt.output.NonInteractiveCliktConsole.NonInteractiveCliktConsole","location":"clikt/com.github.ajalt.clikt.output/-non-interactive-clikt-console/-non-interactive-clikt-console.html","searchKeys":["NonInteractiveCliktConsole","fun NonInteractiveCliktConsole()","com.github.ajalt.clikt.output.NonInteractiveCliktConsole.NonInteractiveCliktConsole"]},{"name":"fun NullableOption<InputStream, InputStream>.defaultStdin(): OptionWithValues<InputStream, InputStream, InputStream>","description":"com.github.ajalt.clikt.parameters.types.defaultStdin","location":"clikt/com.github.ajalt.clikt.parameters.types/default-stdin.html","searchKeys":["defaultStdin","fun NullableOption<InputStream, InputStream>.defaultStdin(): OptionWithValues<InputStream, InputStream, InputStream>","com.github.ajalt.clikt.parameters.types.defaultStdin"]},{"name":"fun NullableOption<OutputStream, OutputStream>.defaultStdout(): OptionWithValues<OutputStream, OutputStream, OutputStream>","description":"com.github.ajalt.clikt.parameters.types.defaultStdout","location":"clikt/com.github.ajalt.clikt.parameters.types/default-stdout.html","searchKeys":["defaultStdout","fun NullableOption<OutputStream, OutputStream>.defaultStdout(): OptionWithValues<OutputStream, OutputStream, OutputStream>","com.github.ajalt.clikt.parameters.types.defaultStdout"]},{"name":"fun Option(names: Set<String>, secondaryNames: Set<String>, metavar: String?, help: String, nvalues: Int, tags: Map<String, String>, groupName: String?)","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.Option","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/-option.html","searchKeys":["Option","fun Option(names: Set<String>, secondaryNames: Set<String>, metavar: String?, help: String, nvalues: Int, tags: Map<String, String>, groupName: String?)","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.Option"]},{"name":"fun OptionCallTransformContext(name: String, option: Option, context: Context)","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.OptionCallTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/-option-call-transform-context.html","searchKeys":["OptionCallTransformContext","fun OptionCallTransformContext(name: String, option: Option, context: Context)","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.OptionCallTransformContext"]},{"name":"fun OptionGroup(name: String? = null, help: String? = null)","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.OptionGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/-option-group.html","searchKeys":["OptionGroup","fun OptionGroup(name: String? = null, help: String? = null)","com.github.ajalt.clikt.parameters.groups.OptionGroup.OptionGroup"]},{"name":"fun OptionTransformContext(option: Option, context: Context)","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.OptionTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/-option-transform-context.html","searchKeys":["OptionTransformContext","fun OptionTransformContext(option: Option, context: Context)","com.github.ajalt.clikt.parameters.options.OptionTransformContext.OptionTransformContext"]},{"name":"fun ParameterHolder.option(vararg names: String, help: String = \"\", metavar: String? = null, hidden: Boolean = false, envvar: String? = null, helpTags: Map<String, String> = emptyMap(), completionCandidates: CompletionCandidates? = null, valueSourceKey: String? = null): RawOption","description":"com.github.ajalt.clikt.parameters.options.option","location":"clikt/com.github.ajalt.clikt.parameters.options/option.html","searchKeys":["option","fun ParameterHolder.option(vararg names: String, help: String = \"\", metavar: String? = null, hidden: Boolean = false, envvar: String? = null, helpTags: Map<String, String> = emptyMap(), completionCandidates: CompletionCandidates? = null, valueSourceKey: String? = null): RawOption","com.github.ajalt.clikt.parameters.options.option"]},{"name":"fun ParseResult(consumedCount: Int, invocation: OptionParser.Invocation)","description":"com.github.ajalt.clikt.parsers.OptionParser.ParseResult.ParseResult","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/-parse-result/-parse-result.html","searchKeys":["ParseResult","fun ParseResult(consumedCount: Int, invocation: OptionParser.Invocation)","com.github.ajalt.clikt.parsers.OptionParser.ParseResult.ParseResult"]},{"name":"fun ParseResult(consumedCount: Int, name: String, values: List<String>)","description":"com.github.ajalt.clikt.parsers.OptionParser.ParseResult.ParseResult","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/-parse-result/-parse-result.html","searchKeys":["ParseResult","fun ParseResult(consumedCount: Int, name: String, values: List<String>)","com.github.ajalt.clikt.parsers.OptionParser.ParseResult.ParseResult"]},{"name":"fun PrintCompletionMessage(message: String, forceUnixLineEndings: Boolean)","description":"com.github.ajalt.clikt.core.PrintCompletionMessage.PrintCompletionMessage","location":"clikt/com.github.ajalt.clikt.core/-print-completion-message/-print-completion-message.html","searchKeys":["PrintCompletionMessage","fun PrintCompletionMessage(message: String, forceUnixLineEndings: Boolean)","com.github.ajalt.clikt.core.PrintCompletionMessage.PrintCompletionMessage"]},{"name":"fun PrintHelpMessage(command: CliktCommand, error: Boolean = false)","description":"com.github.ajalt.clikt.core.PrintHelpMessage.PrintHelpMessage","location":"clikt/com.github.ajalt.clikt.core/-print-help-message/-print-help-message.html","searchKeys":["PrintHelpMessage","fun PrintHelpMessage(command: CliktCommand, error: Boolean = false)","com.github.ajalt.clikt.core.PrintHelpMessage.PrintHelpMessage"]},{"name":"fun PrintMessage(message: String, error: Boolean = false)","description":"com.github.ajalt.clikt.core.PrintMessage.PrintMessage","location":"clikt/com.github.ajalt.clikt.core/-print-message/-print-message.html","searchKeys":["PrintMessage","fun PrintMessage(message: String, error: Boolean = false)","com.github.ajalt.clikt.core.PrintMessage.PrintMessage"]},{"name":"fun ProcessedArgument<InputStream, InputStream>.defaultStdin(): ArgumentDelegate<InputStream>","description":"com.github.ajalt.clikt.parameters.types.defaultStdin","location":"clikt/com.github.ajalt.clikt.parameters.types/default-stdin.html","searchKeys":["defaultStdin","fun ProcessedArgument<InputStream, InputStream>.defaultStdin(): ArgumentDelegate<InputStream>","com.github.ajalt.clikt.parameters.types.defaultStdin"]},{"name":"fun ProcessedArgument<OutputStream, OutputStream>.defaultStdout(): ArgumentDelegate<OutputStream>","description":"com.github.ajalt.clikt.parameters.types.defaultStdout","location":"clikt/com.github.ajalt.clikt.parameters.types/default-stdout.html","searchKeys":["defaultStdout","fun ProcessedArgument<OutputStream, OutputStream>.defaultStdout(): ArgumentDelegate<OutputStream>","com.github.ajalt.clikt.parameters.types.defaultStdout"]},{"name":"fun ProgramResult(statusCode: Int)","description":"com.github.ajalt.clikt.core.ProgramResult.ProgramResult","location":"clikt/com.github.ajalt.clikt.core/-program-result/-program-result.html","searchKeys":["ProgramResult","fun ProgramResult(statusCode: Int)","com.github.ajalt.clikt.core.ProgramResult.ProgramResult"]},{"name":"fun RawArgument.choice(vararg choices: String, ignoreCase: Boolean = false): ProcessedArgument<String, String>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun RawArgument.choice(vararg choices: String, ignoreCase: Boolean = false): ProcessedArgument<String, String>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun RawArgument.double(): ProcessedArgument<Double, Double>","description":"com.github.ajalt.clikt.parameters.types.double","location":"clikt/com.github.ajalt.clikt.parameters.types/double.html","searchKeys":["double","fun RawArgument.double(): ProcessedArgument<Double, Double>","com.github.ajalt.clikt.parameters.types.double"]},{"name":"fun RawArgument.file(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true): ProcessedArgument<File, File>","description":"com.github.ajalt.clikt.parameters.types.file","location":"clikt/com.github.ajalt.clikt.parameters.types/file.html","searchKeys":["file","fun RawArgument.file(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true): ProcessedArgument<File, File>","com.github.ajalt.clikt.parameters.types.file"]},{"name":"fun RawArgument.float(): ProcessedArgument<Float, Float>","description":"com.github.ajalt.clikt.parameters.types.float","location":"clikt/com.github.ajalt.clikt.parameters.types/float.html","searchKeys":["float","fun RawArgument.float(): ProcessedArgument<Float, Float>","com.github.ajalt.clikt.parameters.types.float"]},{"name":"fun RawArgument.inputStream(fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<InputStream, InputStream>","description":"com.github.ajalt.clikt.parameters.types.inputStream","location":"clikt/com.github.ajalt.clikt.parameters.types/input-stream.html","searchKeys":["inputStream","fun RawArgument.inputStream(fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<InputStream, InputStream>","com.github.ajalt.clikt.parameters.types.inputStream"]},{"name":"fun RawArgument.int(): ProcessedArgument<Int, Int>","description":"com.github.ajalt.clikt.parameters.types.int","location":"clikt/com.github.ajalt.clikt.parameters.types/int.html","searchKeys":["int","fun RawArgument.int(): ProcessedArgument<Int, Int>","com.github.ajalt.clikt.parameters.types.int"]},{"name":"fun RawArgument.long(): ProcessedArgument<Long, Long>","description":"com.github.ajalt.clikt.parameters.types.long","location":"clikt/com.github.ajalt.clikt.parameters.types/long.html","searchKeys":["long","fun RawArgument.long(): ProcessedArgument<Long, Long>","com.github.ajalt.clikt.parameters.types.long"]},{"name":"fun RawArgument.outputStream(createIfNotExist: Boolean = true, truncateExisting: Boolean = false, fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<OutputStream, OutputStream>","description":"com.github.ajalt.clikt.parameters.types.outputStream","location":"clikt/com.github.ajalt.clikt.parameters.types/output-stream.html","searchKeys":["outputStream","fun RawArgument.outputStream(createIfNotExist: Boolean = true, truncateExisting: Boolean = false, fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<OutputStream, OutputStream>","com.github.ajalt.clikt.parameters.types.outputStream"]},{"name":"fun RawArgument.path(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true, fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<Path, Path>","description":"com.github.ajalt.clikt.parameters.types.path","location":"clikt/com.github.ajalt.clikt.parameters.types/path.html","searchKeys":["path","fun RawArgument.path(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true, fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<Path, Path>","com.github.ajalt.clikt.parameters.types.path"]},{"name":"fun RawOption.associate(delimiter: String = \"=\"): OptionWithValues<Map<String, String>, Pair<String, String>, Pair<String, String>>","description":"com.github.ajalt.clikt.parameters.options.associate","location":"clikt/com.github.ajalt.clikt.parameters.options/associate.html","searchKeys":["associate","fun RawOption.associate(delimiter: String = \"=\"): OptionWithValues<Map<String, String>, Pair<String, String>, Pair<String, String>>","com.github.ajalt.clikt.parameters.options.associate"]},{"name":"fun RawOption.choice(vararg choices: String, metavar: String = mvar(choices.asIterable()), ignoreCase: Boolean = false): NullableOption<String, String>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun RawOption.choice(vararg choices: String, metavar: String = mvar(choices.asIterable()), ignoreCase: Boolean = false): NullableOption<String, String>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun RawOption.counted(): FlagOption<Int>","description":"com.github.ajalt.clikt.parameters.options.counted","location":"clikt/com.github.ajalt.clikt.parameters.options/counted.html","searchKeys":["counted","fun RawOption.counted(): FlagOption<Int>","com.github.ajalt.clikt.parameters.options.counted"]},{"name":"fun RawOption.double(): OptionWithValues<Double?, Double, Double>","description":"com.github.ajalt.clikt.parameters.types.double","location":"clikt/com.github.ajalt.clikt.parameters.types/double.html","searchKeys":["double","fun RawOption.double(): OptionWithValues<Double?, Double, Double>","com.github.ajalt.clikt.parameters.types.double"]},{"name":"fun RawOption.file(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true): NullableOption<File, File>","description":"com.github.ajalt.clikt.parameters.types.file","location":"clikt/com.github.ajalt.clikt.parameters.types/file.html","searchKeys":["file","fun RawOption.file(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true): NullableOption<File, File>","com.github.ajalt.clikt.parameters.types.file"]},{"name":"fun RawOption.flag(vararg secondaryNames: String, default: Boolean = false, defaultForHelp: String = \"\"): FlagOption<Boolean>","description":"com.github.ajalt.clikt.parameters.options.flag","location":"clikt/com.github.ajalt.clikt.parameters.options/flag.html","searchKeys":["flag","fun RawOption.flag(vararg secondaryNames: String, default: Boolean = false, defaultForHelp: String = \"\"): FlagOption<Boolean>","com.github.ajalt.clikt.parameters.options.flag"]},{"name":"fun RawOption.float(): OptionWithValues<Float?, Float, Float>","description":"com.github.ajalt.clikt.parameters.types.float","location":"clikt/com.github.ajalt.clikt.parameters.types/float.html","searchKeys":["float","fun RawOption.float(): OptionWithValues<Float?, Float, Float>","com.github.ajalt.clikt.parameters.types.float"]},{"name":"fun RawOption.inputStream(fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<InputStream, InputStream>","description":"com.github.ajalt.clikt.parameters.types.inputStream","location":"clikt/com.github.ajalt.clikt.parameters.types/input-stream.html","searchKeys":["inputStream","fun RawOption.inputStream(fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<InputStream, InputStream>","com.github.ajalt.clikt.parameters.types.inputStream"]},{"name":"fun RawOption.int(): OptionWithValues<Int?, Int, Int>","description":"com.github.ajalt.clikt.parameters.types.int","location":"clikt/com.github.ajalt.clikt.parameters.types/int.html","searchKeys":["int","fun RawOption.int(): OptionWithValues<Int?, Int, Int>","com.github.ajalt.clikt.parameters.types.int"]},{"name":"fun RawOption.long(): OptionWithValues<Long?, Long, Long>","description":"com.github.ajalt.clikt.parameters.types.long","location":"clikt/com.github.ajalt.clikt.parameters.types/long.html","searchKeys":["long","fun RawOption.long(): OptionWithValues<Long?, Long, Long>","com.github.ajalt.clikt.parameters.types.long"]},{"name":"fun RawOption.outputStream(createIfNotExist: Boolean = true, truncateExisting: Boolean = false, fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<OutputStream, OutputStream>","description":"com.github.ajalt.clikt.parameters.types.outputStream","location":"clikt/com.github.ajalt.clikt.parameters.types/output-stream.html","searchKeys":["outputStream","fun RawOption.outputStream(createIfNotExist: Boolean = true, truncateExisting: Boolean = false, fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<OutputStream, OutputStream>","com.github.ajalt.clikt.parameters.types.outputStream"]},{"name":"fun RawOption.path(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true, fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<Path, Path>","description":"com.github.ajalt.clikt.parameters.types.path","location":"clikt/com.github.ajalt.clikt.parameters.types/path.html","searchKeys":["path","fun RawOption.path(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true, fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<Path, Path>","com.github.ajalt.clikt.parameters.types.path"]},{"name":"fun RawOption.splitPair(delimiter: String = \"=\"): NullableOption<Pair<String, String>, Pair<String, String>>","description":"com.github.ajalt.clikt.parameters.options.splitPair","location":"clikt/com.github.ajalt.clikt.parameters.options/split-pair.html","searchKeys":["splitPair","fun RawOption.splitPair(delimiter: String = \"=\"): NullableOption<Pair<String, String>, Pair<String, String>>","com.github.ajalt.clikt.parameters.options.splitPair"]},{"name":"fun Subcommand(name: String, help: String, tags: Map<String, String>)","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.Subcommand","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/-subcommand.html","searchKeys":["Subcommand","fun Subcommand(name: String, help: String, tags: Map<String, String>)","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.Subcommand"]},{"name":"fun UsageError(text: String, argument: Argument, context: Context? = null, statusCode: Int = 1)","description":"com.github.ajalt.clikt.core.UsageError.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/-usage-error.html","searchKeys":["UsageError","fun UsageError(text: String, argument: Argument, context: Context? = null, statusCode: Int = 1)","com.github.ajalt.clikt.core.UsageError.UsageError"]},{"name":"fun UsageError(text: String, option: Option, context: Context? = null, statusCode: Int = 1)","description":"com.github.ajalt.clikt.core.UsageError.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/-usage-error.html","searchKeys":["UsageError","fun UsageError(text: String, option: Option, context: Context? = null, statusCode: Int = 1)","com.github.ajalt.clikt.core.UsageError.UsageError"]},{"name":"fun UsageError(text: String, paramName: String? = null, context: Context? = null, statusCode: Int = 1)","description":"com.github.ajalt.clikt.core.UsageError.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/-usage-error.html","searchKeys":["UsageError","fun UsageError(text: String, paramName: String? = null, context: Context? = null, statusCode: Int = 1)","com.github.ajalt.clikt.core.UsageError.UsageError"]},{"name":"fun build(command: CliktCommand, parent: Context? = null, block: Context.Builder.() -> Unit): Context","description":"com.github.ajalt.clikt.core.Context.Companion.build","location":"clikt/com.github.ajalt.clikt.core/-context/-companion/build.html","searchKeys":["build","fun build(command: CliktCommand, parent: Context? = null, block: Context.Builder.() -> Unit): Context","com.github.ajalt.clikt.core.Context.Companion.build"]},{"name":"fun commandNameWithParents(): List<String>","description":"com.github.ajalt.clikt.core.Context.commandNameWithParents","location":"clikt/com.github.ajalt.clikt.core/-context/command-name-with-parents.html","searchKeys":["commandNameWithParents","fun commandNameWithParents(): List<String>","com.github.ajalt.clikt.core.Context.commandNameWithParents"]},{"name":"fun copy(validator: ArgValidator<AllT> = this.transformValidator, name: String = this.name, nvalues: Int = this.nvalues, required: Boolean = this.required, help: String = this.argumentHelp, helpTags: Map<String, String> = this.helpTags, completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates> = this.completionCandidatesWithDefault): ProcessedArgument<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.copy","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/copy.html","searchKeys":["copy","fun copy(validator: ArgValidator<AllT> = this.transformValidator, name: String = this.name, nvalues: Int = this.nvalues, required: Boolean = this.required, help: String = this.argumentHelp, helpTags: Map<String, String> = this.helpTags, completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates> = this.completionCandidatesWithDefault): ProcessedArgument<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.copy"]},{"name":"fun copy(validator: OptionValidator<AllT> = this.transformValidator, names: Set<String> = this.names, metavarWithDefault: ValueWithDefault<Context.() -> String?> = this.metavarWithDefault, nvalues: Int = this.nvalues, help: String = this.optionHelp, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, envvar: String? = this.envvar, valueSourceKey: String? = this.valueSourceKey, valueSplit: Regex? = this.valueSplit, parser: OptionWithValuesParser = this.parser, completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates> = this.completionCandidatesWithDefault): OptionWithValues<AllT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.copy","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/copy.html","searchKeys":["copy","fun copy(validator: OptionValidator<AllT> = this.transformValidator, names: Set<String> = this.names, metavarWithDefault: ValueWithDefault<Context.() -> String?> = this.metavarWithDefault, nvalues: Int = this.nvalues, help: String = this.optionHelp, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, envvar: String? = this.envvar, valueSourceKey: String? = this.valueSourceKey, valueSplit: Regex? = this.valueSplit, parser: OptionWithValuesParser = this.parser, completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates> = this.completionCandidatesWithDefault): OptionWithValues<AllT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.copy"]},{"name":"fun copy(validator: OptionValidator<T> = this.validator, names: Set<String> = this.names, secondaryNames: Set<String> = this.secondaryNames, help: String = this.optionHelp, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, valueSourceKey: String? = this.valueSourceKey, envvar: String? = this.envvar): FlagOption<T>","description":"com.github.ajalt.clikt.parameters.options.FlagOption.copy","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/copy.html","searchKeys":["copy","fun copy(validator: OptionValidator<T> = this.validator, names: Set<String> = this.names, secondaryNames: Set<String> = this.secondaryNames, help: String = this.optionHelp, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, valueSourceKey: String? = this.valueSourceKey, envvar: String? = this.envvar): FlagOption<T>","com.github.ajalt.clikt.parameters.options.FlagOption.copy"]},{"name":"fun editFile(filename: String, editor: String? = null, env: Map<String, String> = emptyMap(), requireSave: Boolean = false, extension: String = \".txt\")","description":"com.github.ajalt.clikt.output.TermUi.editFile","location":"clikt/com.github.ajalt.clikt.output/-term-ui/edit-file.html","searchKeys":["editFile","fun editFile(filename: String, editor: String? = null, env: Map<String, String> = emptyMap(), requireSave: Boolean = false, extension: String = \".txt\")","com.github.ajalt.clikt.output.TermUi.editFile"]},{"name":"fun editText(text: String, editor: String? = null, env: Map<String, String> = emptyMap(), requireSave: Boolean = false, extension: String = \".txt\"): String?","description":"com.github.ajalt.clikt.output.TermUi.editText","location":"clikt/com.github.ajalt.clikt.output/-term-ui/edit-text.html","searchKeys":["editText","fun editText(text: String, editor: String? = null, env: Map<String, String> = emptyMap(), requireSave: Boolean = false, extension: String = \".txt\"): String?","com.github.ajalt.clikt.output.TermUi.editText"]},{"name":"fun envvarKey(): (Context, Option) -> String","description":"com.github.ajalt.clikt.sources.ValueSource.Companion.envvarKey","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-companion/envvar-key.html","searchKeys":["envvarKey","fun envvarKey(): (Context, Option) -> String","com.github.ajalt.clikt.sources.ValueSource.Companion.envvarKey"]},{"name":"fun fail(message: String = \"\"): Nothing","description":"com.github.ajalt.clikt.core.Context.fail","location":"clikt/com.github.ajalt.clikt.core/-context/fail.html","searchKeys":["fail","fun fail(message: String = \"\"): Nothing","com.github.ajalt.clikt.core.Context.fail"]},{"name":"fun fail(message: String): Nothing","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.fail","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/fail.html","searchKeys":["fail","fun fail(message: String): Nothing","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.fail"]},{"name":"fun fail(message: String): Nothing","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.fail","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/fail.html","searchKeys":["fail","fun fail(message: String): Nothing","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.fail"]},{"name":"fun fail(message: String): Nothing","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.fail","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/fail.html","searchKeys":["fail","fun fail(message: String): Nothing","com.github.ajalt.clikt.parameters.options.OptionTransformContext.fail"]},{"name":"fun findRoot(): Context","description":"com.github.ajalt.clikt.core.Context.findRoot","location":"clikt/com.github.ajalt.clikt.core/-context/find-root.html","searchKeys":["findRoot","fun findRoot(): Context","com.github.ajalt.clikt.core.Context.findRoot"]},{"name":"fun from(file: File, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource.from","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/from.html","searchKeys":["from","fun from(file: File, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource.from"]},{"name":"fun from(file: Path, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource.from","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/from.html","searchKeys":["from","fun from(file: Path, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource.from"]},{"name":"fun from(file: String, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource.from","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/from.html","searchKeys":["from","fun from(file: String, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource.from"]},{"name":"fun from(properties: Properties, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource.from","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/from.html","searchKeys":["from","fun from(properties: Properties, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource.from"]},{"name":"fun fromStdout(command: String): CompletionCandidates.Custom","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Companion.fromStdout","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-companion/from-stdout.html","searchKeys":["fromStdout","fun fromStdout(command: String): CompletionCandidates.Custom","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Companion.fromStdout"]},{"name":"fun getKey(prefix: String = \"\", joinSubcommands: String? = null, uppercase: Boolean = false, replaceDashes: String = \"-\"): (Context, Option) -> String","description":"com.github.ajalt.clikt.sources.ValueSource.Companion.getKey","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-companion/get-key.html","searchKeys":["getKey","fun getKey(prefix: String = \"\", joinSubcommands: String? = null, uppercase: Boolean = false, replaceDashes: String = \"-\"): (Context, Option) -> String","com.github.ajalt.clikt.sources.ValueSource.Companion.getKey"]},{"name":"fun helpMessage(): String","description":"com.github.ajalt.clikt.core.UsageError.helpMessage","location":"clikt/com.github.ajalt.clikt.core/-usage-error/help-message.html","searchKeys":["helpMessage","fun helpMessage(): String","com.github.ajalt.clikt.core.UsageError.helpMessage"]},{"name":"fun issueMessage(message: String)","description":"com.github.ajalt.clikt.core.CliktCommand.issueMessage","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/issue-message.html","searchKeys":["issueMessage","fun issueMessage(message: String)","com.github.ajalt.clikt.core.CliktCommand.issueMessage"]},{"name":"fun just(value: Any?): List<ValueSource.Invocation>","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion.just","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/-companion/just.html","searchKeys":["just","fun just(value: Any?): List<ValueSource.Invocation>","com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion.just"]},{"name":"fun main(argv: Array<out String>)","description":"com.github.ajalt.clikt.core.CliktCommand.main","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/main.html","searchKeys":["main","fun main(argv: Array<out String>)","com.github.ajalt.clikt.core.CliktCommand.main"]},{"name":"fun main(argv: List<String>)","description":"com.github.ajalt.clikt.core.CliktCommand.main","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/main.html","searchKeys":["main","fun main(argv: List<String>)","com.github.ajalt.clikt.core.CliktCommand.main"]},{"name":"fun message(message: String)","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.message","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/message.html","searchKeys":["message","fun message(message: String)","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.message"]},{"name":"fun message(message: String)","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.message","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/message.html","searchKeys":["message","fun message(message: String)","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.message"]},{"name":"fun message(message: String)","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.message","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/message.html","searchKeys":["message","fun message(message: String)","com.github.ajalt.clikt.parameters.options.OptionTransformContext.message"]},{"name":"fun name(option: Option): String","description":"com.github.ajalt.clikt.sources.ValueSource.Companion.name","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-companion/name.html","searchKeys":["name","fun name(option: Option): String","com.github.ajalt.clikt.sources.ValueSource.Companion.name"]},{"name":"fun parentNames(): List<String>","description":"com.github.ajalt.clikt.core.Context.parentNames","location":"clikt/com.github.ajalt.clikt.core/-context/parent-names.html","searchKeys":["parentNames","fun parentNames(): List<String>","com.github.ajalt.clikt.core.Context.parentNames"]},{"name":"fun parse(argv: Array<String>, parentContext: Context? = null)","description":"com.github.ajalt.clikt.core.CliktCommand.parse","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/parse.html","searchKeys":["parse","fun parse(argv: Array<String>, parentContext: Context? = null)","com.github.ajalt.clikt.core.CliktCommand.parse"]},{"name":"fun parse(argv: List<String>, parentContext: Context? = null)","description":"com.github.ajalt.clikt.core.CliktCommand.parse","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/parse.html","searchKeys":["parse","fun parse(argv: List<String>, parentContext: Context? = null)","com.github.ajalt.clikt.core.CliktCommand.parse"]},{"name":"fun registerArgument(argument: Argument)","description":"com.github.ajalt.clikt.core.CliktCommand.registerArgument","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/register-argument.html","searchKeys":["registerArgument","fun registerArgument(argument: Argument)","com.github.ajalt.clikt.core.CliktCommand.registerArgument"]},{"name":"fun registerOption(option: Option)","description":"com.github.ajalt.clikt.core.CliktCommand.registerOption","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/register-option.html","searchKeys":["registerOption","fun registerOption(option: Option)","com.github.ajalt.clikt.core.CliktCommand.registerOption"]},{"name":"fun registerOptionGroup(group: ParameterGroup)","description":"com.github.ajalt.clikt.core.CliktCommand.registerOptionGroup","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/register-option-group.html","searchKeys":["registerOptionGroup","fun registerOptionGroup(group: ParameterGroup)","com.github.ajalt.clikt.core.CliktCommand.registerOptionGroup"]},{"name":"fun registeredArguments(): List<Argument>","description":"com.github.ajalt.clikt.core.CliktCommand.registeredArguments","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/registered-arguments.html","searchKeys":["registeredArguments","fun registeredArguments(): List<Argument>","com.github.ajalt.clikt.core.CliktCommand.registeredArguments"]},{"name":"fun registeredOptions(): List<Option>","description":"com.github.ajalt.clikt.core.CliktCommand.registeredOptions","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/registered-options.html","searchKeys":["registeredOptions","fun registeredOptions(): List<Option>","com.github.ajalt.clikt.core.CliktCommand.registeredOptions"]},{"name":"fun registeredParameterGroups(): List<ParameterGroup>","description":"com.github.ajalt.clikt.core.CliktCommand.registeredParameterGroups","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/registered-parameter-groups.html","searchKeys":["registeredParameterGroups","fun registeredParameterGroups(): List<ParameterGroup>","com.github.ajalt.clikt.core.CliktCommand.registeredParameterGroups"]},{"name":"fun registeredSubcommandNames(): List<String>","description":"com.github.ajalt.clikt.core.CliktCommand.registeredSubcommandNames","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/registered-subcommand-names.html","searchKeys":["registeredSubcommandNames","fun registeredSubcommandNames(): List<String>","com.github.ajalt.clikt.core.CliktCommand.registeredSubcommandNames"]},{"name":"fun registeredSubcommands(): List<CliktCommand>","description":"com.github.ajalt.clikt.core.CliktCommand.registeredSubcommands","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/registered-subcommands.html","searchKeys":["registeredSubcommands","fun registeredSubcommands(): List<CliktCommand>","com.github.ajalt.clikt.core.CliktCommand.registeredSubcommands"]},{"name":"fun value(value: Any?): ValueSource.Invocation","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion.value","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/-companion/value.html","searchKeys":["value","fun value(value: Any?): ValueSource.Invocation","com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion.value"]},{"name":"fun valueOf(value: String): CompletionCandidates.Custom.ShellType","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.valueOf","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CompletionCandidates.Custom.ShellType","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.valueOf"]},{"name":"fun valueSources(vararg sources: ValueSource)","description":"com.github.ajalt.clikt.core.Context.Builder.valueSources","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/value-sources.html","searchKeys":["valueSources","fun valueSources(vararg sources: ValueSource)","com.github.ajalt.clikt.core.Context.Builder.valueSources"]},{"name":"fun values(): Array<CompletionCandidates.Custom.ShellType>","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.values","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/values.html","searchKeys":["values","fun values(): Array<CompletionCandidates.Custom.ShellType>","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.values"]},{"name":"inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.check(crossinline lazyMessage: (AllT) -> String = { it.toString() }, crossinline validator: (AllT) -> Boolean): OptionDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.options.check","location":"clikt/com.github.ajalt.clikt.parameters.options/check.html","searchKeys":["check","inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.check(crossinline lazyMessage: (AllT) -> String = { it.toString() }, crossinline validator: (AllT) -> Boolean): OptionDelegate<AllT>","com.github.ajalt.clikt.parameters.options.check"]},{"name":"inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.check(message: String, crossinline validator: (AllT) -> Boolean): OptionDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.options.check","location":"clikt/com.github.ajalt.clikt.parameters.options/check.html","searchKeys":["check","inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.check(message: String, crossinline validator: (AllT) -> Boolean): OptionDelegate<AllT>","com.github.ajalt.clikt.parameters.options.check"]},{"name":"inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT?, EachT, ValueT>.check(crossinline lazyMessage: (AllT) -> String = { it.toString() }, crossinline validator: (AllT) -> Boolean): OptionDelegate<AllT?>","description":"com.github.ajalt.clikt.parameters.options.check","location":"clikt/com.github.ajalt.clikt.parameters.options/check.html","searchKeys":["check","inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT?, EachT, ValueT>.check(crossinline lazyMessage: (AllT) -> String = { it.toString() }, crossinline validator: (AllT) -> Boolean): OptionDelegate<AllT?>","com.github.ajalt.clikt.parameters.options.check"]},{"name":"inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT?, EachT, ValueT>.check(message: String, crossinline validator: (AllT) -> Boolean): OptionDelegate<AllT?>","description":"com.github.ajalt.clikt.parameters.options.check","location":"clikt/com.github.ajalt.clikt.parameters.options/check.html","searchKeys":["check","inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT?, EachT, ValueT>.check(message: String, crossinline validator: (AllT) -> Boolean): OptionDelegate<AllT?>","com.github.ajalt.clikt.parameters.options.check"]},{"name":"inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT?, EachT, ValueT>.validate(crossinline validator: OptionValidator<AllT>): OptionDelegate<AllT?>","description":"com.github.ajalt.clikt.parameters.options.validate","location":"clikt/com.github.ajalt.clikt.parameters.options/validate.html","searchKeys":["validate","inline fun <AllT : Any, EachT, ValueT> OptionWithValues<AllT?, EachT, ValueT>.validate(crossinline validator: OptionValidator<AllT>): OptionDelegate<AllT?>","com.github.ajalt.clikt.parameters.options.validate"]},{"name":"inline fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.check(crossinline lazyMessage: (AllT) -> String = { it.toString() }, crossinline validator: (AllT) -> Boolean): ArgumentDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.arguments.check","location":"clikt/com.github.ajalt.clikt.parameters.arguments/check.html","searchKeys":["check","inline fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.check(crossinline lazyMessage: (AllT) -> String = { it.toString() }, crossinline validator: (AllT) -> Boolean): ArgumentDelegate<AllT>","com.github.ajalt.clikt.parameters.arguments.check"]},{"name":"inline fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.check(message: String, crossinline validator: (AllT) -> Boolean): ArgumentDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.arguments.check","location":"clikt/com.github.ajalt.clikt.parameters.arguments/check.html","searchKeys":["check","inline fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.check(message: String, crossinline validator: (AllT) -> Boolean): ArgumentDelegate<AllT>","com.github.ajalt.clikt.parameters.arguments.check"]},{"name":"inline fun <AllT : Any, ValueT> ProcessedArgument<AllT?, ValueT>.check(crossinline lazyMessage: (AllT) -> String = { it.toString() }, crossinline validator: (AllT) -> Boolean): ArgumentDelegate<AllT?>","description":"com.github.ajalt.clikt.parameters.arguments.check","location":"clikt/com.github.ajalt.clikt.parameters.arguments/check.html","searchKeys":["check","inline fun <AllT : Any, ValueT> ProcessedArgument<AllT?, ValueT>.check(crossinline lazyMessage: (AllT) -> String = { it.toString() }, crossinline validator: (AllT) -> Boolean): ArgumentDelegate<AllT?>","com.github.ajalt.clikt.parameters.arguments.check"]},{"name":"inline fun <AllT : Any, ValueT> ProcessedArgument<AllT?, ValueT>.check(message: String, crossinline validator: (AllT) -> Boolean): ArgumentDelegate<AllT?>","description":"com.github.ajalt.clikt.parameters.arguments.check","location":"clikt/com.github.ajalt.clikt.parameters.arguments/check.html","searchKeys":["check","inline fun <AllT : Any, ValueT> ProcessedArgument<AllT?, ValueT>.check(message: String, crossinline validator: (AllT) -> Boolean): ArgumentDelegate<AllT?>","com.github.ajalt.clikt.parameters.arguments.check"]},{"name":"inline fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.defaultLazy(defaultForHelp: String = \"\", crossinline value: () -> EachT): OptionWithValues<EachT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.defaultLazy","location":"clikt/com.github.ajalt.clikt.parameters.options/default-lazy.html","searchKeys":["defaultLazy","inline fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.defaultLazy(defaultForHelp: String = \"\", crossinline value: () -> EachT): OptionWithValues<EachT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.defaultLazy"]},{"name":"inline fun <InT : Any, ValueT : Any> NullableOption<InT, InT>.convert(metavar: String, completionCandidates: CompletionCandidates = completionCandidatesWithDefault.default, crossinline conversion: ValueConverter<InT, ValueT>): NullableOption<ValueT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.convert","location":"clikt/com.github.ajalt.clikt.parameters.options/convert.html","searchKeys":["convert","inline fun <InT : Any, ValueT : Any> NullableOption<InT, InT>.convert(metavar: String, completionCandidates: CompletionCandidates = completionCandidatesWithDefault.default, crossinline conversion: ValueConverter<InT, ValueT>): NullableOption<ValueT, ValueT>","com.github.ajalt.clikt.parameters.options.convert"]},{"name":"inline fun <InT : Any, ValueT : Any> NullableOption<InT, InT>.convert(noinline metavar: Context.() -> String = { localization.defaultMetavar() }, completionCandidates: CompletionCandidates = completionCandidatesWithDefault.default, crossinline conversion: ValueConverter<InT, ValueT>): NullableOption<ValueT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.convert","location":"clikt/com.github.ajalt.clikt.parameters.options/convert.html","searchKeys":["convert","inline fun <InT : Any, ValueT : Any> NullableOption<InT, InT>.convert(noinline metavar: Context.() -> String = { localization.defaultMetavar() }, completionCandidates: CompletionCandidates = completionCandidatesWithDefault.default, crossinline conversion: ValueConverter<InT, ValueT>): NullableOption<ValueT, ValueT>","com.github.ajalt.clikt.parameters.options.convert"]},{"name":"inline fun <InT : Any, ValueT : Any> ProcessedArgument<InT, InT>.convert(completionCandidates: CompletionCandidates = completionCandidatesWithDefault.default, crossinline conversion: ArgValueConverter<InT, ValueT>): ProcessedArgument<ValueT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.convert","location":"clikt/com.github.ajalt.clikt.parameters.arguments/convert.html","searchKeys":["convert","inline fun <InT : Any, ValueT : Any> ProcessedArgument<InT, InT>.convert(completionCandidates: CompletionCandidates = completionCandidatesWithDefault.default, crossinline conversion: ArgValueConverter<InT, ValueT>): ProcessedArgument<ValueT, ValueT>","com.github.ajalt.clikt.parameters.arguments.convert"]},{"name":"inline fun <InT, OutT> FlagOption<InT>.convert(crossinline conversion: FlagConverter<InT, OutT>): FlagOption<OutT>","description":"com.github.ajalt.clikt.parameters.options.convert","location":"clikt/com.github.ajalt.clikt.parameters.options/convert.html","searchKeys":["convert","inline fun <InT, OutT> FlagOption<InT>.convert(crossinline conversion: FlagConverter<InT, OutT>): FlagOption<OutT>","com.github.ajalt.clikt.parameters.options.convert"]},{"name":"inline fun <T : Any> CliktCommand.findObject(): ReadOnlyProperty<CliktCommand, T?>","description":"com.github.ajalt.clikt.core.findObject","location":"clikt/com.github.ajalt.clikt.core/find-object.html","searchKeys":["findObject","inline fun <T : Any> CliktCommand.findObject(): ReadOnlyProperty<CliktCommand, T?>","com.github.ajalt.clikt.core.findObject"]},{"name":"inline fun <T : Any> CliktCommand.findOrSetObject(crossinline default: () -> T): ReadOnlyProperty<CliktCommand, T>","description":"com.github.ajalt.clikt.core.findOrSetObject","location":"clikt/com.github.ajalt.clikt.core/find-or-set-object.html","searchKeys":["findOrSetObject","inline fun <T : Any> CliktCommand.findOrSetObject(crossinline default: () -> T): ReadOnlyProperty<CliktCommand, T>","com.github.ajalt.clikt.core.findOrSetObject"]},{"name":"inline fun <T : Any> CliktCommand.requireObject(): ReadOnlyProperty<CliktCommand, T>","description":"com.github.ajalt.clikt.core.requireObject","location":"clikt/com.github.ajalt.clikt.core/require-object.html","searchKeys":["requireObject","inline fun <T : Any> CliktCommand.requireObject(): ReadOnlyProperty<CliktCommand, T>","com.github.ajalt.clikt.core.requireObject"]},{"name":"inline fun <T : Any> FlagOption<T?>.defaultLazy(defaultForHelp: String = \"\", crossinline value: () -> T): FlagOption<T>","description":"com.github.ajalt.clikt.parameters.options.defaultLazy","location":"clikt/com.github.ajalt.clikt.parameters.options/default-lazy.html","searchKeys":["defaultLazy","inline fun <T : Any> FlagOption<T?>.defaultLazy(defaultForHelp: String = \"\", crossinline value: () -> T): FlagOption<T>","com.github.ajalt.clikt.parameters.options.defaultLazy"]},{"name":"inline fun <T : Any> ProcessedArgument<T, T>.defaultLazy(crossinline value: () -> T): ArgumentDelegate<T>","description":"com.github.ajalt.clikt.parameters.arguments.defaultLazy","location":"clikt/com.github.ajalt.clikt.parameters.arguments/default-lazy.html","searchKeys":["defaultLazy","inline fun <T : Any> ProcessedArgument<T, T>.defaultLazy(crossinline value: () -> T): ArgumentDelegate<T>","com.github.ajalt.clikt.parameters.arguments.defaultLazy"]},{"name":"inline fun <T : Any> ProcessedArgument<T, T>.defaultLazy(defaultForHelp: String, crossinline value: () -> T): ArgumentDelegate<T>","description":"com.github.ajalt.clikt.parameters.arguments.defaultLazy","location":"clikt/com.github.ajalt.clikt.parameters.arguments/default-lazy.html","searchKeys":["defaultLazy","inline fun <T : Any> ProcessedArgument<T, T>.defaultLazy(defaultForHelp: String, crossinline value: () -> T): ArgumentDelegate<T>","com.github.ajalt.clikt.parameters.arguments.defaultLazy"]},{"name":"inline fun <T : Any> findObject(): T?","description":"com.github.ajalt.clikt.core.Context.findObject","location":"clikt/com.github.ajalt.clikt.core/-context/find-object.html","searchKeys":["findObject","inline fun <T : Any> findObject(): T?","com.github.ajalt.clikt.core.Context.findObject"]},{"name":"inline fun <T : Any> findOrSetObject(defaultValue: () -> T): T","description":"com.github.ajalt.clikt.core.Context.findOrSetObject","location":"clikt/com.github.ajalt.clikt.core/-context/find-or-set-object.html","searchKeys":["findOrSetObject","inline fun <T : Any> findOrSetObject(defaultValue: () -> T): T","com.github.ajalt.clikt.core.Context.findOrSetObject"]},{"name":"inline fun <T : CliktCommand> T.versionOption(version: String, help: String = \"Show the version and exit\", names: Set<String> = setOf(\"--version\"), crossinline message: (String) -> String = { \"$commandName version $it\" }): T","description":"com.github.ajalt.clikt.parameters.options.versionOption","location":"clikt/com.github.ajalt.clikt.parameters.options/version-option.html","searchKeys":["versionOption","inline fun <T : CliktCommand> T.versionOption(version: String, help: String = \"Show the version and exit\", names: Set<String> = setOf(\"--version\"), crossinline message: (String) -> String = { \"$commandName version $it\" }): T","com.github.ajalt.clikt.parameters.options.versionOption"]},{"name":"inline fun <T : Enum<T>> RawArgument.enum(ignoreCase: Boolean = true, key: (T) -> String = { it.name }): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.enum","location":"clikt/com.github.ajalt.clikt.parameters.types/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> RawArgument.enum(ignoreCase: Boolean = true, key: (T) -> String = { it.name }): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.enum"]},{"name":"inline fun <T : Enum<T>> RawOption.enum(ignoreCase: Boolean = true, key: (T) -> String = { it.name }): NullableOption<T, T>","description":"com.github.ajalt.clikt.parameters.types.enum","location":"clikt/com.github.ajalt.clikt.parameters.types/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> RawOption.enum(ignoreCase: Boolean = true, key: (T) -> String = { it.name }): NullableOption<T, T>","com.github.ajalt.clikt.parameters.types.enum"]},{"name":"inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.require","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/require.html","searchKeys":["require","inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.require"]},{"name":"inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.require","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/require.html","searchKeys":["require","inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.require"]},{"name":"inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.require","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/require.html","searchKeys":["require","inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","com.github.ajalt.clikt.parameters.options.OptionTransformContext.require"]},{"name":"interface Argument","description":"com.github.ajalt.clikt.parameters.arguments.Argument","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/index.html","searchKeys":["Argument","interface Argument","com.github.ajalt.clikt.parameters.arguments.Argument"]},{"name":"interface ArgumentDelegate<out T> : Argument, ReadOnlyProperty<CliktCommand, T> ","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-delegate/index.html","searchKeys":["ArgumentDelegate","interface ArgumentDelegate<out T> : Argument, ReadOnlyProperty<CliktCommand, T> ","com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate"]},{"name":"interface CliktConsole","description":"com.github.ajalt.clikt.output.CliktConsole","location":"clikt/com.github.ajalt.clikt.output/-clikt-console/index.html","searchKeys":["CliktConsole","interface CliktConsole","com.github.ajalt.clikt.output.CliktConsole"]},{"name":"interface GroupableOption : StaticallyGroupedOption","description":"com.github.ajalt.clikt.core.GroupableOption","location":"clikt/com.github.ajalt.clikt.core/-groupable-option/index.html","searchKeys":["GroupableOption","interface GroupableOption : StaticallyGroupedOption","com.github.ajalt.clikt.core.GroupableOption"]},{"name":"interface HelpFormatter","description":"com.github.ajalt.clikt.output.HelpFormatter","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/index.html","searchKeys":["HelpFormatter","interface HelpFormatter","com.github.ajalt.clikt.output.HelpFormatter"]},{"name":"interface ICliktCommand : ParameterHolder","description":"com.github.ajalt.clikt.core.ICliktCommand","location":"clikt/com.github.ajalt.clikt.core/-i-clikt-command/index.html","searchKeys":["ICliktCommand","interface ICliktCommand : ParameterHolder","com.github.ajalt.clikt.core.ICliktCommand"]},{"name":"interface Localization","description":"com.github.ajalt.clikt.output.Localization","location":"clikt/com.github.ajalt.clikt.output/-localization/index.html","searchKeys":["Localization","interface Localization","com.github.ajalt.clikt.output.Localization"]},{"name":"interface Option","description":"com.github.ajalt.clikt.parameters.options.Option","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/index.html","searchKeys":["Option","interface Option","com.github.ajalt.clikt.parameters.options.Option"]},{"name":"interface OptionDelegate<T> : GroupableOption, ReadOnlyProperty<ParameterHolder, T> ","description":"com.github.ajalt.clikt.parameters.options.OptionDelegate","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-delegate/index.html","searchKeys":["OptionDelegate","interface OptionDelegate<T> : GroupableOption, ReadOnlyProperty<ParameterHolder, T> ","com.github.ajalt.clikt.parameters.options.OptionDelegate"]},{"name":"interface OptionParser","description":"com.github.ajalt.clikt.parsers.OptionParser","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/index.html","searchKeys":["OptionParser","interface OptionParser","com.github.ajalt.clikt.parsers.OptionParser"]},{"name":"interface ParameterGroup","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/index.html","searchKeys":["ParameterGroup","interface ParameterGroup","com.github.ajalt.clikt.parameters.groups.ParameterGroup"]},{"name":"interface ParameterGroupDelegate<out T> : ParameterGroup, ReadOnlyProperty<CliktCommand, T> ","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroupDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group-delegate/index.html","searchKeys":["ParameterGroupDelegate","interface ParameterGroupDelegate<out T> : ParameterGroup, ReadOnlyProperty<CliktCommand, T> ","com.github.ajalt.clikt.parameters.groups.ParameterGroupDelegate"]},{"name":"interface ParameterHolder","description":"com.github.ajalt.clikt.core.ParameterHolder","location":"clikt/com.github.ajalt.clikt.core/-parameter-holder/index.html","searchKeys":["ParameterHolder","interface ParameterHolder","com.github.ajalt.clikt.core.ParameterHolder"]},{"name":"interface StaticallyGroupedOption : Option","description":"com.github.ajalt.clikt.core.StaticallyGroupedOption","location":"clikt/com.github.ajalt.clikt.core/-statically-grouped-option/index.html","searchKeys":["StaticallyGroupedOption","interface StaticallyGroupedOption : Option","com.github.ajalt.clikt.core.StaticallyGroupedOption"]},{"name":"interface ValueSource","description":"com.github.ajalt.clikt.sources.ValueSource","location":"clikt/com.github.ajalt.clikt.sources/-value-source/index.html","searchKeys":["ValueSource","interface ValueSource","com.github.ajalt.clikt.sources.ValueSource"]},{"name":"object Companion","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Companion","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-companion/index.html","searchKeys":["Companion","object Companion","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Companion"]},{"name":"object Companion","description":"com.github.ajalt.clikt.core.Context.Companion","location":"clikt/com.github.ajalt.clikt.core/-context/-companion/index.html","searchKeys":["Companion","object Companion","com.github.ajalt.clikt.core.Context.Companion"]},{"name":"object Companion","description":"com.github.ajalt.clikt.sources.ValueSource.Companion","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-companion/index.html","searchKeys":["Companion","object Companion","com.github.ajalt.clikt.sources.ValueSource.Companion"]},{"name":"object Companion","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/-companion/index.html","searchKeys":["Companion","object Companion","com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion"]},{"name":"object FlagOptionParser : OptionParser","description":"com.github.ajalt.clikt.parsers.FlagOptionParser","location":"clikt/com.github.ajalt.clikt.parsers/-flag-option-parser/index.html","searchKeys":["FlagOptionParser","object FlagOptionParser : OptionParser","com.github.ajalt.clikt.parsers.FlagOptionParser"]},{"name":"object Hostname : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Hostname","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-hostname/index.html","searchKeys":["Hostname","object Hostname : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Hostname"]},{"name":"object None : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.None","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-none/index.html","searchKeys":["None","object None : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.None"]},{"name":"object OptionWithValuesParser : OptionParser","description":"com.github.ajalt.clikt.parsers.OptionWithValuesParser","location":"clikt/com.github.ajalt.clikt.parsers/-option-with-values-parser/index.html","searchKeys":["OptionWithValuesParser","object OptionWithValuesParser : OptionParser","com.github.ajalt.clikt.parsers.OptionWithValuesParser"]},{"name":"object Path : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Path","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-path/index.html","searchKeys":["Path","object Path : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Path"]},{"name":"object PropertiesValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/index.html","searchKeys":["PropertiesValueSource","object PropertiesValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource"]},{"name":"object Tags","description":"com.github.ajalt.clikt.output.HelpFormatter.Tags","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-tags/index.html","searchKeys":["Tags","object Tags","com.github.ajalt.clikt.output.HelpFormatter.Tags"]},{"name":"object TermUi","description":"com.github.ajalt.clikt.output.TermUi","location":"clikt/com.github.ajalt.clikt.output/-term-ui/index.html","searchKeys":["TermUi","object TermUi","com.github.ajalt.clikt.output.TermUi"]},{"name":"object Username : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Username","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-username/index.html","searchKeys":["Username","object Username : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Username"]},{"name":"open class CliktError(message: String? = null, cause: Exception? = null) : RuntimeException","description":"com.github.ajalt.clikt.core.CliktError","location":"clikt/com.github.ajalt.clikt.core/-clikt-error/index.html","searchKeys":["CliktError","open class CliktError(message: String? = null, cause: Exception? = null) : RuntimeException","com.github.ajalt.clikt.core.CliktError"]},{"name":"open class CliktHelpFormatter(localization: Localization = defaultLocalization, indent: String = \"  \", width: Int? = null, maxWidth: Int = 78, maxColWidth: Int? = null, colSpacing: Int = 2, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : HelpFormatter","description":"com.github.ajalt.clikt.output.CliktHelpFormatter","location":"clikt/com.github.ajalt.clikt.output/-clikt-help-formatter/index.html","searchKeys":["CliktHelpFormatter","open class CliktHelpFormatter(localization: Localization = defaultLocalization, indent: String = \"  \", width: Int? = null, maxWidth: Int = 78, maxColWidth: Int? = null, colSpacing: Int = 2, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : HelpFormatter","com.github.ajalt.clikt.output.CliktHelpFormatter"]},{"name":"open class NoOpCliktCommand(help: String = \"\", epilog: String = \"\", name: String? = null, val invokeWithoutSubcommand: Boolean = false, val printHelpOnEmptyArgs: Boolean = false, val helpTags: Map<String, String> = emptyMap(), autoCompleteEnvvar: String? = \"\", allowMultipleSubcommands: Boolean = false, hidden: Boolean = false) : CliktCommand","description":"com.github.ajalt.clikt.core.NoOpCliktCommand","location":"clikt/com.github.ajalt.clikt.core/-no-op-clikt-command/index.html","searchKeys":["NoOpCliktCommand","open class NoOpCliktCommand(help: String = \"\", epilog: String = \"\", name: String? = null, val invokeWithoutSubcommand: Boolean = false, val printHelpOnEmptyArgs: Boolean = false, val helpTags: Map<String, String> = emptyMap(), autoCompleteEnvvar: String? = \"\", allowMultipleSubcommands: Boolean = false, hidden: Boolean = false) : CliktCommand","com.github.ajalt.clikt.core.NoOpCliktCommand"]},{"name":"open class NoSuchParameter : UsageError","description":"com.github.ajalt.clikt.core.NoSuchParameter","location":"clikt/com.github.ajalt.clikt.core/-no-such-parameter/index.html","searchKeys":["NoSuchParameter","open class NoSuchParameter : UsageError","com.github.ajalt.clikt.core.NoSuchParameter"]},{"name":"open class OptionGroup(name: String? = null, help: String? = null) : ParameterGroup, ParameterHolder","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/index.html","searchKeys":["OptionGroup","open class OptionGroup(name: String? = null, help: String? = null) : ParameterGroup, ParameterHolder","com.github.ajalt.clikt.parameters.groups.OptionGroup"]},{"name":"open class PrintMessage(message: String, val error: Boolean = false) : CliktError","description":"com.github.ajalt.clikt.core.PrintMessage","location":"clikt/com.github.ajalt.clikt.core/-print-message/index.html","searchKeys":["PrintMessage","open class PrintMessage(message: String, val error: Boolean = false) : CliktError","com.github.ajalt.clikt.core.PrintMessage"]},{"name":"open class UsageError : CliktError","description":"com.github.ajalt.clikt.core.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/index.html","searchKeys":["UsageError","open class UsageError : CliktError","com.github.ajalt.clikt.core.UsageError"]},{"name":"open fun aborted(): String","description":"com.github.ajalt.clikt.output.Localization.aborted","location":"clikt/com.github.ajalt.clikt.output/-localization/aborted.html","searchKeys":["aborted","open fun aborted(): String","com.github.ajalt.clikt.output.Localization.aborted"]},{"name":"open fun aliases(): Map<String, List<String>>","description":"com.github.ajalt.clikt.core.CliktCommand.aliases","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/aliases.html","searchKeys":["aliases","open fun aliases(): Map<String, List<String>>","com.github.ajalt.clikt.core.CliktCommand.aliases"]},{"name":"open fun argumentsTitle(): String","description":"com.github.ajalt.clikt.output.Localization.argumentsTitle","location":"clikt/com.github.ajalt.clikt.output/-localization/arguments-title.html","searchKeys":["argumentsTitle","open fun argumentsTitle(): String","com.github.ajalt.clikt.output.Localization.argumentsTitle"]},{"name":"open fun badParameter(): String","description":"com.github.ajalt.clikt.output.Localization.badParameter","location":"clikt/com.github.ajalt.clikt.output/-localization/bad-parameter.html","searchKeys":["badParameter","open fun badParameter(): String","com.github.ajalt.clikt.output.Localization.badParameter"]},{"name":"open fun badParameterWithMessage(message: String): String","description":"com.github.ajalt.clikt.output.Localization.badParameterWithMessage","location":"clikt/com.github.ajalt.clikt.output/-localization/bad-parameter-with-message.html","searchKeys":["badParameterWithMessage","open fun badParameterWithMessage(message: String): String","com.github.ajalt.clikt.output.Localization.badParameterWithMessage"]},{"name":"open fun badParameterWithMessageAndParam(paramName: String, message: String): String","description":"com.github.ajalt.clikt.output.Localization.badParameterWithMessageAndParam","location":"clikt/com.github.ajalt.clikt.output/-localization/bad-parameter-with-message-and-param.html","searchKeys":["badParameterWithMessageAndParam","open fun badParameterWithMessageAndParam(paramName: String, message: String): String","com.github.ajalt.clikt.output.Localization.badParameterWithMessageAndParam"]},{"name":"open fun badParameterWithParam(paramName: String): String","description":"com.github.ajalt.clikt.output.Localization.badParameterWithParam","location":"clikt/com.github.ajalt.clikt.output/-localization/bad-parameter-with-param.html","searchKeys":["badParameterWithParam","open fun badParameterWithParam(paramName: String): String","com.github.ajalt.clikt.output.Localization.badParameterWithParam"]},{"name":"open fun boolConversionError(value: String): String","description":"com.github.ajalt.clikt.output.Localization.boolConversionError","location":"clikt/com.github.ajalt.clikt.output/-localization/bool-conversion-error.html","searchKeys":["boolConversionError","open fun boolConversionError(value: String): String","com.github.ajalt.clikt.output.Localization.boolConversionError"]},{"name":"open fun commandMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.commandMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/command-metavar.html","searchKeys":["commandMetavar","open fun commandMetavar(): String","com.github.ajalt.clikt.output.Localization.commandMetavar"]},{"name":"open fun commandsTitle(): String","description":"com.github.ajalt.clikt.output.Localization.commandsTitle","location":"clikt/com.github.ajalt.clikt.output/-localization/commands-title.html","searchKeys":["commandsTitle","open fun commandsTitle(): String","com.github.ajalt.clikt.output.Localization.commandsTitle"]},{"name":"open fun defaultMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.defaultMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/default-metavar.html","searchKeys":["defaultMetavar","open fun defaultMetavar(): String","com.github.ajalt.clikt.output.Localization.defaultMetavar"]},{"name":"open fun extraArgumentMany(name: String, count: Int): String","description":"com.github.ajalt.clikt.output.Localization.extraArgumentMany","location":"clikt/com.github.ajalt.clikt.output/-localization/extra-argument-many.html","searchKeys":["extraArgumentMany","open fun extraArgumentMany(name: String, count: Int): String","com.github.ajalt.clikt.output.Localization.extraArgumentMany"]},{"name":"open fun extraArgumentOne(name: String): String","description":"com.github.ajalt.clikt.output.Localization.extraArgumentOne","location":"clikt/com.github.ajalt.clikt.output/-localization/extra-argument-one.html","searchKeys":["extraArgumentOne","open fun extraArgumentOne(name: String): String","com.github.ajalt.clikt.output.Localization.extraArgumentOne"]},{"name":"open fun fileEndsWithSlash(): String","description":"com.github.ajalt.clikt.output.Localization.fileEndsWithSlash","location":"clikt/com.github.ajalt.clikt.output/-localization/file-ends-with-slash.html","searchKeys":["fileEndsWithSlash","open fun fileEndsWithSlash(): String","com.github.ajalt.clikt.output.Localization.fileEndsWithSlash"]},{"name":"open fun fileMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.fileMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/file-metavar.html","searchKeys":["fileMetavar","open fun fileMetavar(): String","com.github.ajalt.clikt.output.Localization.fileMetavar"]},{"name":"open fun fileNotFound(filename: String): String","description":"com.github.ajalt.clikt.output.Localization.fileNotFound","location":"clikt/com.github.ajalt.clikt.output/-localization/file-not-found.html","searchKeys":["fileNotFound","open fun fileNotFound(filename: String): String","com.github.ajalt.clikt.output.Localization.fileNotFound"]},{"name":"open fun floatConversionError(value: String): String","description":"com.github.ajalt.clikt.output.Localization.floatConversionError","location":"clikt/com.github.ajalt.clikt.output/-localization/float-conversion-error.html","searchKeys":["floatConversionError","open fun floatConversionError(value: String): String","com.github.ajalt.clikt.output.Localization.floatConversionError"]},{"name":"open fun floatMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.floatMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/float-metavar.html","searchKeys":["floatMetavar","open fun floatMetavar(): String","com.github.ajalt.clikt.output.Localization.floatMetavar"]},{"name":"open fun getFormattedHelp(): String","description":"com.github.ajalt.clikt.core.CliktCommand.getFormattedHelp","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/get-formatted-help.html","searchKeys":["getFormattedHelp","open fun getFormattedHelp(): String","com.github.ajalt.clikt.core.CliktCommand.getFormattedHelp"]},{"name":"open fun getFormattedUsage(): String","description":"com.github.ajalt.clikt.core.CliktCommand.getFormattedUsage","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/get-formatted-usage.html","searchKeys":["getFormattedUsage","open fun getFormattedUsage(): String","com.github.ajalt.clikt.core.CliktCommand.getFormattedUsage"]},{"name":"open fun helpOptionMessage(): String","description":"com.github.ajalt.clikt.output.Localization.helpOptionMessage","location":"clikt/com.github.ajalt.clikt.output/-localization/help-option-message.html","searchKeys":["helpOptionMessage","open fun helpOptionMessage(): String","com.github.ajalt.clikt.output.Localization.helpOptionMessage"]},{"name":"open fun helpTagDefault(): String","description":"com.github.ajalt.clikt.output.Localization.helpTagDefault","location":"clikt/com.github.ajalt.clikt.output/-localization/help-tag-default.html","searchKeys":["helpTagDefault","open fun helpTagDefault(): String","com.github.ajalt.clikt.output.Localization.helpTagDefault"]},{"name":"open fun helpTagRequired(): String","description":"com.github.ajalt.clikt.output.Localization.helpTagRequired","location":"clikt/com.github.ajalt.clikt.output/-localization/help-tag-required.html","searchKeys":["helpTagRequired","open fun helpTagRequired(): String","com.github.ajalt.clikt.output.Localization.helpTagRequired"]},{"name":"open fun incorrectArgumentValueCount(name: String, count: Int): String","description":"com.github.ajalt.clikt.output.Localization.incorrectArgumentValueCount","location":"clikt/com.github.ajalt.clikt.output/-localization/incorrect-argument-value-count.html","searchKeys":["incorrectArgumentValueCount","open fun incorrectArgumentValueCount(name: String, count: Int): String","com.github.ajalt.clikt.output.Localization.incorrectArgumentValueCount"]},{"name":"open fun incorrectOptionValueCount(name: String, count: Int): String","description":"com.github.ajalt.clikt.output.Localization.incorrectOptionValueCount","location":"clikt/com.github.ajalt.clikt.output/-localization/incorrect-option-value-count.html","searchKeys":["incorrectOptionValueCount","open fun incorrectOptionValueCount(name: String, count: Int): String","com.github.ajalt.clikt.output.Localization.incorrectOptionValueCount"]},{"name":"open fun intConversionError(value: String): String","description":"com.github.ajalt.clikt.output.Localization.intConversionError","location":"clikt/com.github.ajalt.clikt.output/-localization/int-conversion-error.html","searchKeys":["intConversionError","open fun intConversionError(value: String): String","com.github.ajalt.clikt.output.Localization.intConversionError"]},{"name":"open fun intMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.intMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/int-metavar.html","searchKeys":["intMetavar","open fun intMetavar(): String","com.github.ajalt.clikt.output.Localization.intMetavar"]},{"name":"open fun invalidChoice(choice: String, choices: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.invalidChoice","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-choice.html","searchKeys":["invalidChoice","open fun invalidChoice(choice: String, choices: List<String>): String","com.github.ajalt.clikt.output.Localization.invalidChoice"]},{"name":"open fun invalidFileFormat(filename: String, lineNumber: Int, message: String): String","description":"com.github.ajalt.clikt.output.Localization.invalidFileFormat","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-file-format.html","searchKeys":["invalidFileFormat","open fun invalidFileFormat(filename: String, lineNumber: Int, message: String): String","com.github.ajalt.clikt.output.Localization.invalidFileFormat"]},{"name":"open fun invalidFileFormat(filename: String, message: String): String","description":"com.github.ajalt.clikt.output.Localization.invalidFileFormat","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-file-format.html","searchKeys":["invalidFileFormat","open fun invalidFileFormat(filename: String, message: String): String","com.github.ajalt.clikt.output.Localization.invalidFileFormat"]},{"name":"open fun invalidFlagValueInFile(name: String): String","description":"com.github.ajalt.clikt.output.Localization.invalidFlagValueInFile","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-flag-value-in-file.html","searchKeys":["invalidFlagValueInFile","open fun invalidFlagValueInFile(name: String): String","com.github.ajalt.clikt.output.Localization.invalidFlagValueInFile"]},{"name":"open fun invalidGroupChoice(value: String, choices: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.invalidGroupChoice","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-group-choice.html","searchKeys":["invalidGroupChoice","open fun invalidGroupChoice(value: String, choices: List<String>): String","com.github.ajalt.clikt.output.Localization.invalidGroupChoice"]},{"name":"open fun missingArgument(paramName: String): String","description":"com.github.ajalt.clikt.output.Localization.missingArgument","location":"clikt/com.github.ajalt.clikt.output/-localization/missing-argument.html","searchKeys":["missingArgument","open fun missingArgument(paramName: String): String","com.github.ajalt.clikt.output.Localization.missingArgument"]},{"name":"open fun missingOption(paramName: String): String","description":"com.github.ajalt.clikt.output.Localization.missingOption","location":"clikt/com.github.ajalt.clikt.output/-localization/missing-option.html","searchKeys":["missingOption","open fun missingOption(paramName: String): String","com.github.ajalt.clikt.output.Localization.missingOption"]},{"name":"open fun mutexGroupException(name: String, others: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.mutexGroupException","location":"clikt/com.github.ajalt.clikt.output/-localization/mutex-group-exception.html","searchKeys":["mutexGroupException","open fun mutexGroupException(name: String, others: List<String>): String","com.github.ajalt.clikt.output.Localization.mutexGroupException"]},{"name":"open fun noSuchOption(name: String, possibilities: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.noSuchOption","location":"clikt/com.github.ajalt.clikt.output/-localization/no-such-option.html","searchKeys":["noSuchOption","open fun noSuchOption(name: String, possibilities: List<String>): String","com.github.ajalt.clikt.output.Localization.noSuchOption"]},{"name":"open fun noSuchSubcommand(name: String, possibilities: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.noSuchSubcommand","location":"clikt/com.github.ajalt.clikt.output/-localization/no-such-subcommand.html","searchKeys":["noSuchSubcommand","open fun noSuchSubcommand(name: String, possibilities: List<String>): String","com.github.ajalt.clikt.output.Localization.noSuchSubcommand"]},{"name":"open fun optionsMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.optionsMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/options-metavar.html","searchKeys":["optionsMetavar","open fun optionsMetavar(): String","com.github.ajalt.clikt.output.Localization.optionsMetavar"]},{"name":"open fun optionsTitle(): String","description":"com.github.ajalt.clikt.output.Localization.optionsTitle","location":"clikt/com.github.ajalt.clikt.output/-localization/options-title.html","searchKeys":["optionsTitle","open fun optionsTitle(): String","com.github.ajalt.clikt.output.Localization.optionsTitle"]},{"name":"open fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Group?","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.parameterHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/parameter-help.html","searchKeys":["parameterHelp","open fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Group?","com.github.ajalt.clikt.parameters.groups.ParameterGroup.parameterHelp"]},{"name":"open fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Option?","description":"com.github.ajalt.clikt.parameters.options.Option.parameterHelp","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/parameter-help.html","searchKeys":["parameterHelp","open fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Option?","com.github.ajalt.clikt.parameters.options.Option.parameterHelp"]},{"name":"open fun pathDoesNotExist(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathDoesNotExist","location":"clikt/com.github.ajalt.clikt.output/-localization/path-does-not-exist.html","searchKeys":["pathDoesNotExist","open fun pathDoesNotExist(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathDoesNotExist"]},{"name":"open fun pathIsDirectory(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsDirectory","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-directory.html","searchKeys":["pathIsDirectory","open fun pathIsDirectory(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsDirectory"]},{"name":"open fun pathIsFile(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsFile","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-file.html","searchKeys":["pathIsFile","open fun pathIsFile(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsFile"]},{"name":"open fun pathIsNotReadable(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsNotReadable","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-not-readable.html","searchKeys":["pathIsNotReadable","open fun pathIsNotReadable(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsNotReadable"]},{"name":"open fun pathIsNotWritable(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsNotWritable","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-not-writable.html","searchKeys":["pathIsNotWritable","open fun pathIsNotWritable(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsNotWritable"]},{"name":"open fun pathIsSymlink(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsSymlink","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-symlink.html","searchKeys":["pathIsSymlink","open fun pathIsSymlink(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsSymlink"]},{"name":"open fun pathMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.pathMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/path-metavar.html","searchKeys":["pathMetavar","open fun pathMetavar(): String","com.github.ajalt.clikt.output.Localization.pathMetavar"]},{"name":"open fun pathTypeDirectory(): String","description":"com.github.ajalt.clikt.output.Localization.pathTypeDirectory","location":"clikt/com.github.ajalt.clikt.output/-localization/path-type-directory.html","searchKeys":["pathTypeDirectory","open fun pathTypeDirectory(): String","com.github.ajalt.clikt.output.Localization.pathTypeDirectory"]},{"name":"open fun pathTypeFile(): String","description":"com.github.ajalt.clikt.output.Localization.pathTypeFile","location":"clikt/com.github.ajalt.clikt.output/-localization/path-type-file.html","searchKeys":["pathTypeFile","open fun pathTypeFile(): String","com.github.ajalt.clikt.output.Localization.pathTypeFile"]},{"name":"open fun pathTypeOther(): String","description":"com.github.ajalt.clikt.output.Localization.pathTypeOther","location":"clikt/com.github.ajalt.clikt.output/-localization/path-type-other.html","searchKeys":["pathTypeOther","open fun pathTypeOther(): String","com.github.ajalt.clikt.output.Localization.pathTypeOther"]},{"name":"open fun rangeExceededBoth(value: String, min: String, max: String): String","description":"com.github.ajalt.clikt.output.Localization.rangeExceededBoth","location":"clikt/com.github.ajalt.clikt.output/-localization/range-exceeded-both.html","searchKeys":["rangeExceededBoth","open fun rangeExceededBoth(value: String, min: String, max: String): String","com.github.ajalt.clikt.output.Localization.rangeExceededBoth"]},{"name":"open fun rangeExceededMax(value: String, limit: String): String","description":"com.github.ajalt.clikt.output.Localization.rangeExceededMax","location":"clikt/com.github.ajalt.clikt.output/-localization/range-exceeded-max.html","searchKeys":["rangeExceededMax","open fun rangeExceededMax(value: String, limit: String): String","com.github.ajalt.clikt.output.Localization.rangeExceededMax"]},{"name":"open fun rangeExceededMin(value: String, limit: String): String","description":"com.github.ajalt.clikt.output.Localization.rangeExceededMin","location":"clikt/com.github.ajalt.clikt.output/-localization/range-exceeded-min.html","searchKeys":["rangeExceededMin","open fun rangeExceededMin(value: String, limit: String): String","com.github.ajalt.clikt.output.Localization.rangeExceededMin"]},{"name":"open fun requiredMutexOption(options: String): String","description":"com.github.ajalt.clikt.output.Localization.requiredMutexOption","location":"clikt/com.github.ajalt.clikt.output/-localization/required-mutex-option.html","searchKeys":["requiredMutexOption","open fun requiredMutexOption(options: String): String","com.github.ajalt.clikt.output.Localization.requiredMutexOption"]},{"name":"open fun stringMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.stringMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/string-metavar.html","searchKeys":["stringMetavar","open fun stringMetavar(): String","com.github.ajalt.clikt.output.Localization.stringMetavar"]},{"name":"open fun switchOptionEnvvar(): String","description":"com.github.ajalt.clikt.output.Localization.switchOptionEnvvar","location":"clikt/com.github.ajalt.clikt.output/-localization/switch-option-envvar.html","searchKeys":["switchOptionEnvvar","open fun switchOptionEnvvar(): String","com.github.ajalt.clikt.output.Localization.switchOptionEnvvar"]},{"name":"open fun unclosedQuote(): String","description":"com.github.ajalt.clikt.output.Localization.unclosedQuote","location":"clikt/com.github.ajalt.clikt.output/-localization/unclosed-quote.html","searchKeys":["unclosedQuote","open fun unclosedQuote(): String","com.github.ajalt.clikt.output.Localization.unclosedQuote"]},{"name":"open fun usageError(message: String): String","description":"com.github.ajalt.clikt.output.Localization.usageError","location":"clikt/com.github.ajalt.clikt.output/-localization/usage-error.html","searchKeys":["usageError","open fun usageError(message: String): String","com.github.ajalt.clikt.output.Localization.usageError"]},{"name":"open fun usageTitle(): String","description":"com.github.ajalt.clikt.output.Localization.usageTitle","location":"clikt/com.github.ajalt.clikt.output/-localization/usage-title.html","searchKeys":["usageTitle","open fun usageTitle(): String","com.github.ajalt.clikt.output.Localization.usageTitle"]},{"name":"open operator override fun getValue(thisRef: CliktCommand, property: KProperty<*>): AllT","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.getValue","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: CliktCommand, property: KProperty<*>): AllT","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.getValue"]},{"name":"open operator override fun getValue(thisRef: CliktCommand, property: KProperty<*>): OutT","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.getValue","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: CliktCommand, property: KProperty<*>): OutT","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.getValue"]},{"name":"open operator override fun getValue(thisRef: CliktCommand, property: KProperty<*>): OutT","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.getValue","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: CliktCommand, property: KProperty<*>): OutT","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.getValue"]},{"name":"open operator override fun getValue(thisRef: CliktCommand, property: KProperty<*>): OutT","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.getValue","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: CliktCommand, property: KProperty<*>): OutT","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.getValue"]},{"name":"open operator override fun getValue(thisRef: ParameterHolder, property: KProperty<*>): T","description":"com.github.ajalt.clikt.parameters.options.OptionDelegate.getValue","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-delegate/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: ParameterHolder, property: KProperty<*>): T","com.github.ajalt.clikt.parameters.options.OptionDelegate.getValue"]},{"name":"open operator override fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, AllT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, AllT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.provideDelegate"]},{"name":"open operator override fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, OutT>","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, OutT>","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.provideDelegate"]},{"name":"open operator override fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, OutT>","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, OutT>","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.provideDelegate"]},{"name":"open operator override fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, OutT>","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, OutT>","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.provideDelegate"]},{"name":"open operator override fun provideDelegate(thisRef: ParameterHolder, prop: KProperty<*>): ReadOnlyProperty<ParameterHolder, AllT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: ParameterHolder, prop: KProperty<*>): ReadOnlyProperty<ParameterHolder, AllT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.provideDelegate"]},{"name":"open operator override fun provideDelegate(thisRef: ParameterHolder, prop: KProperty<*>): ReadOnlyProperty<ParameterHolder, T>","description":"com.github.ajalt.clikt.parameters.options.FlagOption.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: ParameterHolder, prop: KProperty<*>): ReadOnlyProperty<ParameterHolder, T>","com.github.ajalt.clikt.parameters.options.FlagOption.provideDelegate"]},{"name":"open override fun finalize(context: Context, invocations: List<OptionParser.Invocation>)","description":"com.github.ajalt.clikt.parameters.options.EagerOption.finalize","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocations: List<OptionParser.Invocation>)","com.github.ajalt.clikt.parameters.options.EagerOption.finalize"]},{"name":"open override fun finalize(context: Context, invocations: List<OptionParser.Invocation>)","description":"com.github.ajalt.clikt.parameters.options.FlagOption.finalize","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocations: List<OptionParser.Invocation>)","com.github.ajalt.clikt.parameters.options.FlagOption.finalize"]},{"name":"open override fun finalize(context: Context, invocations: List<OptionParser.Invocation>)","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.finalize","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocations: List<OptionParser.Invocation>)","com.github.ajalt.clikt.parameters.options.OptionWithValues.finalize"]},{"name":"open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.finalize"]},{"name":"open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.finalize"]},{"name":"open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.finalize"]},{"name":"open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionParser.Invocation>>)","com.github.ajalt.clikt.parameters.groups.OptionGroup.finalize"]},{"name":"open override fun finalize(context: Context, values: List<String>)","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.finalize","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, values: List<String>)","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.finalize"]},{"name":"open override fun formatHelp(prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String): String","description":"com.github.ajalt.clikt.output.CliktHelpFormatter.formatHelp","location":"clikt/com.github.ajalt.clikt.output/-clikt-help-formatter/format-help.html","searchKeys":["formatHelp","open override fun formatHelp(prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String): String","com.github.ajalt.clikt.output.CliktHelpFormatter.formatHelp"]},{"name":"open override fun formatUsage(parameters: List<HelpFormatter.ParameterHelp>, programName: String): String","description":"com.github.ajalt.clikt.output.CliktHelpFormatter.formatUsage","location":"clikt/com.github.ajalt.clikt.output/-clikt-help-formatter/format-usage.html","searchKeys":["formatUsage","open override fun formatUsage(parameters: List<HelpFormatter.ParameterHelp>, programName: String): String","com.github.ajalt.clikt.output.CliktHelpFormatter.formatUsage"]},{"name":"open override fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","description":"com.github.ajalt.clikt.sources.ChainedValueSource.getValues","location":"clikt/com.github.ajalt.clikt.sources/-chained-value-source/get-values.html","searchKeys":["getValues","open override fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","com.github.ajalt.clikt.sources.ChainedValueSource.getValues"]},{"name":"open override fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","description":"com.github.ajalt.clikt.sources.MapValueSource.getValues","location":"clikt/com.github.ajalt.clikt.sources/-map-value-source/get-values.html","searchKeys":["getValues","open override fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","com.github.ajalt.clikt.sources.MapValueSource.getValues"]},{"name":"open override fun metavar(context: Context): String?","description":"com.github.ajalt.clikt.parameters.options.EagerOption.metavar","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/metavar.html","searchKeys":["metavar","open override fun metavar(context: Context): String?","com.github.ajalt.clikt.parameters.options.EagerOption.metavar"]},{"name":"open override fun metavar(context: Context): String?","description":"com.github.ajalt.clikt.parameters.options.FlagOption.metavar","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/metavar.html","searchKeys":["metavar","open override fun metavar(context: Context): String?","com.github.ajalt.clikt.parameters.options.FlagOption.metavar"]},{"name":"open override fun metavar(context: Context): String?","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.metavar","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/metavar.html","searchKeys":["metavar","open override fun metavar(context: Context): String?","com.github.ajalt.clikt.parameters.options.OptionWithValues.metavar"]},{"name":"open override fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Argument","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.parameterHelp","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/parameter-help.html","searchKeys":["parameterHelp","open override fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Argument","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.parameterHelp"]},{"name":"open override fun parseLongOpt(option: Option, name: String, argv: List<String>, index: Int, explicitValue: String?): OptionParser.ParseResult","description":"com.github.ajalt.clikt.parsers.FlagOptionParser.parseLongOpt","location":"clikt/com.github.ajalt.clikt.parsers/-flag-option-parser/parse-long-opt.html","searchKeys":["parseLongOpt","open override fun parseLongOpt(option: Option, name: String, argv: List<String>, index: Int, explicitValue: String?): OptionParser.ParseResult","com.github.ajalt.clikt.parsers.FlagOptionParser.parseLongOpt"]},{"name":"open override fun parseLongOpt(option: Option, name: String, argv: List<String>, index: Int, explicitValue: String?): OptionParser.ParseResult","description":"com.github.ajalt.clikt.parsers.OptionWithValuesParser.parseLongOpt","location":"clikt/com.github.ajalt.clikt.parsers/-option-with-values-parser/parse-long-opt.html","searchKeys":["parseLongOpt","open override fun parseLongOpt(option: Option, name: String, argv: List<String>, index: Int, explicitValue: String?): OptionParser.ParseResult","com.github.ajalt.clikt.parsers.OptionWithValuesParser.parseLongOpt"]},{"name":"open override fun parseShortOpt(option: Option, name: String, argv: List<String>, index: Int, optionIndex: Int): OptionParser.ParseResult","description":"com.github.ajalt.clikt.parsers.FlagOptionParser.parseShortOpt","location":"clikt/com.github.ajalt.clikt.parsers/-flag-option-parser/parse-short-opt.html","searchKeys":["parseShortOpt","open override fun parseShortOpt(option: Option, name: String, argv: List<String>, index: Int, optionIndex: Int): OptionParser.ParseResult","com.github.ajalt.clikt.parsers.FlagOptionParser.parseShortOpt"]},{"name":"open override fun parseShortOpt(option: Option, name: String, argv: List<String>, index: Int, optionIndex: Int): OptionParser.ParseResult","description":"com.github.ajalt.clikt.parsers.OptionWithValuesParser.parseShortOpt","location":"clikt/com.github.ajalt.clikt.parsers/-option-with-values-parser/parse-short-opt.html","searchKeys":["parseShortOpt","open override fun parseShortOpt(option: Option, name: String, argv: List<String>, index: Int, optionIndex: Int): OptionParser.ParseResult","com.github.ajalt.clikt.parsers.OptionWithValuesParser.parseShortOpt"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.OptionGroup.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.options.EagerOption.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.options.EagerOption.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.options.FlagOption.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.options.FlagOption.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.options.OptionWithValues.postValidate"]},{"name":"open override fun print(text: String, error: Boolean)","description":"com.github.ajalt.clikt.output.InteractiveCliktConsole.print","location":"clikt/com.github.ajalt.clikt.output/-interactive-clikt-console/print.html","searchKeys":["print","open override fun print(text: String, error: Boolean)","com.github.ajalt.clikt.output.InteractiveCliktConsole.print"]},{"name":"open override fun print(text: String, error: Boolean)","description":"com.github.ajalt.clikt.output.NonInteractiveCliktConsole.print","location":"clikt/com.github.ajalt.clikt.output/-non-interactive-clikt-console/print.html","searchKeys":["print","open override fun print(text: String, error: Boolean)","com.github.ajalt.clikt.output.NonInteractiveCliktConsole.print"]},{"name":"open override fun promptForLine(prompt: String, hideInput: Boolean): String","description":"com.github.ajalt.clikt.output.NonInteractiveCliktConsole.promptForLine","location":"clikt/com.github.ajalt.clikt.output/-non-interactive-clikt-console/prompt-for-line.html","searchKeys":["promptForLine","open override fun promptForLine(prompt: String, hideInput: Boolean): String","com.github.ajalt.clikt.output.NonInteractiveCliktConsole.promptForLine"]},{"name":"open override fun promptForLine(prompt: String, hideInput: Boolean): String?","description":"com.github.ajalt.clikt.output.InteractiveCliktConsole.promptForLine","location":"clikt/com.github.ajalt.clikt.output/-interactive-clikt-console/prompt-for-line.html","searchKeys":["promptForLine","open override fun promptForLine(prompt: String, hideInput: Boolean): String?","com.github.ajalt.clikt.output.InteractiveCliktConsole.promptForLine"]},{"name":"open override fun registerOption(option: GroupableOption)","description":"com.github.ajalt.clikt.core.CliktCommand.registerOption","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/register-option.html","searchKeys":["registerOption","open override fun registerOption(option: GroupableOption)","com.github.ajalt.clikt.core.CliktCommand.registerOption"]},{"name":"open override fun registerOption(option: GroupableOption)","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.registerOption","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/register-option.html","searchKeys":["registerOption","open override fun registerOption(option: GroupableOption)","com.github.ajalt.clikt.parameters.groups.OptionGroup.registerOption"]},{"name":"open override fun run()","description":"com.github.ajalt.clikt.completion.CompletionCommand.run","location":"clikt/com.github.ajalt.clikt.completion/-completion-command/run.html","searchKeys":["run","open override fun run()","com.github.ajalt.clikt.completion.CompletionCommand.run"]},{"name":"open override fun run()","description":"com.github.ajalt.clikt.core.NoOpCliktCommand.run","location":"clikt/com.github.ajalt.clikt.core/-no-op-clikt-command/run.html","searchKeys":["run","open override fun run()","com.github.ajalt.clikt.core.NoOpCliktCommand.run"]},{"name":"open override fun toString(): String","description":"com.github.ajalt.clikt.core.CliktCommand.toString","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.ajalt.clikt.core.CliktCommand.toString"]},{"name":"open override val argumentHelp: String","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.argumentHelp","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/argument-help.html","searchKeys":["argumentHelp","open override val argumentHelp: String","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.argumentHelp"]},{"name":"open override val completionCandidates: CompletionCandidates","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.completionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/completion-candidates.html","searchKeys":["completionCandidates","open override val completionCandidates: CompletionCandidates","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.completionCandidates"]},{"name":"open override val completionCandidates: CompletionCandidates","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.completionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/completion-candidates.html","searchKeys":["completionCandidates","open override val completionCandidates: CompletionCandidates","com.github.ajalt.clikt.parameters.options.OptionWithValues.completionCandidates"]},{"name":"open override val groupHelp: String?","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/group-help.html","searchKeys":["groupHelp","open override val groupHelp: String?","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.groupHelp"]},{"name":"open override val groupHelp: String?","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/group-help.html","searchKeys":["groupHelp","open override val groupHelp: String?","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.groupHelp"]},{"name":"open override val groupHelp: String?","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/group-help.html","searchKeys":["groupHelp","open override val groupHelp: String?","com.github.ajalt.clikt.parameters.groups.OptionGroup.groupHelp"]},{"name":"open override val groupHelp: String? = null","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/group-help.html","searchKeys":["groupHelp","open override val groupHelp: String? = null","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.groupHelp"]},{"name":"open override val groupName: String?","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/group-name.html","searchKeys":["groupName","open override val groupName: String?","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.groupName"]},{"name":"open override val groupName: String?","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/group-name.html","searchKeys":["groupName","open override val groupName: String?","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.groupName"]},{"name":"open override val groupName: String?","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/group-name.html","searchKeys":["groupName","open override val groupName: String?","com.github.ajalt.clikt.parameters.groups.OptionGroup.groupName"]},{"name":"open override val groupName: String?","description":"com.github.ajalt.clikt.parameters.options.EagerOption.groupName","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/group-name.html","searchKeys":["groupName","open override val groupName: String?","com.github.ajalt.clikt.parameters.options.EagerOption.groupName"]},{"name":"open override val groupName: String? = null","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/group-name.html","searchKeys":["groupName","open override val groupName: String? = null","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.groupName"]},{"name":"open override val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.helpTags","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/help-tags.html","searchKeys":["helpTags","open override val helpTags: Map<String, String>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.helpTags"]},{"name":"open override val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.parameters.options.EagerOption.helpTags","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/help-tags.html","searchKeys":["helpTags","open override val helpTags: Map<String, String>","com.github.ajalt.clikt.parameters.options.EagerOption.helpTags"]},{"name":"open override val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.parameters.options.FlagOption.helpTags","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/help-tags.html","searchKeys":["helpTags","open override val helpTags: Map<String, String>","com.github.ajalt.clikt.parameters.options.FlagOption.helpTags"]},{"name":"open override val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.helpTags","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/help-tags.html","searchKeys":["helpTags","open override val helpTags: Map<String, String>","com.github.ajalt.clikt.parameters.options.OptionWithValues.helpTags"]},{"name":"open override val hidden: Boolean","description":"com.github.ajalt.clikt.parameters.options.EagerOption.hidden","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/hidden.html","searchKeys":["hidden","open override val hidden: Boolean","com.github.ajalt.clikt.parameters.options.EagerOption.hidden"]},{"name":"open override val hidden: Boolean","description":"com.github.ajalt.clikt.parameters.options.FlagOption.hidden","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/hidden.html","searchKeys":["hidden","open override val hidden: Boolean","com.github.ajalt.clikt.parameters.options.FlagOption.hidden"]},{"name":"open override val hidden: Boolean","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.hidden","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/hidden.html","searchKeys":["hidden","open override val hidden: Boolean","com.github.ajalt.clikt.parameters.options.OptionWithValues.hidden"]},{"name":"open override val lineSeparator: String","description":"com.github.ajalt.clikt.output.InteractiveCliktConsole.lineSeparator","location":"clikt/com.github.ajalt.clikt.output/-interactive-clikt-console/line-separator.html","searchKeys":["lineSeparator","open override val lineSeparator: String","com.github.ajalt.clikt.output.InteractiveCliktConsole.lineSeparator"]},{"name":"open override val lineSeparator: String","description":"com.github.ajalt.clikt.output.NonInteractiveCliktConsole.lineSeparator","location":"clikt/com.github.ajalt.clikt.output/-non-interactive-clikt-console/line-separator.html","searchKeys":["lineSeparator","open override val lineSeparator: String","com.github.ajalt.clikt.output.NonInteractiveCliktConsole.lineSeparator"]},{"name":"open override val message: String?","description":"com.github.ajalt.clikt.core.UsageError.message","location":"clikt/com.github.ajalt.clikt.core/-usage-error/message.html","searchKeys":["message","open override val message: String?","com.github.ajalt.clikt.core.UsageError.message"]},{"name":"open override val names: Set<String>","description":"com.github.ajalt.clikt.parameters.options.EagerOption.names","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/names.html","searchKeys":["names","open override val names: Set<String>","com.github.ajalt.clikt.parameters.options.EagerOption.names"]},{"name":"open override val nvalues: Int","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.nvalues","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/nvalues.html","searchKeys":["nvalues","open override val nvalues: Int","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.nvalues"]},{"name":"open override val nvalues: Int","description":"com.github.ajalt.clikt.parameters.options.EagerOption.nvalues","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/nvalues.html","searchKeys":["nvalues","open override val nvalues: Int","com.github.ajalt.clikt.parameters.options.EagerOption.nvalues"]},{"name":"open override val nvalues: Int","description":"com.github.ajalt.clikt.parameters.options.FlagOption.nvalues","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/nvalues.html","searchKeys":["nvalues","open override val nvalues: Int","com.github.ajalt.clikt.parameters.options.FlagOption.nvalues"]},{"name":"open override val nvalues: Int","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.nvalues","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/nvalues.html","searchKeys":["nvalues","open override val nvalues: Int","com.github.ajalt.clikt.parameters.options.OptionWithValues.nvalues"]},{"name":"open override val optionHelp: String","description":"com.github.ajalt.clikt.parameters.options.EagerOption.optionHelp","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/option-help.html","searchKeys":["optionHelp","open override val optionHelp: String","com.github.ajalt.clikt.parameters.options.EagerOption.optionHelp"]},{"name":"open override val optionHelp: String","description":"com.github.ajalt.clikt.parameters.options.FlagOption.optionHelp","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/option-help.html","searchKeys":["optionHelp","open override val optionHelp: String","com.github.ajalt.clikt.parameters.options.FlagOption.optionHelp"]},{"name":"open override val optionHelp: String","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.optionHelp","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/option-help.html","searchKeys":["optionHelp","open override val optionHelp: String","com.github.ajalt.clikt.parameters.options.OptionWithValues.optionHelp"]},{"name":"open override val parser: FlagOptionParser","description":"com.github.ajalt.clikt.parameters.options.FlagOption.parser","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/parser.html","searchKeys":["parser","open override val parser: FlagOptionParser","com.github.ajalt.clikt.parameters.options.FlagOption.parser"]},{"name":"open override val parser: OptionParser","description":"com.github.ajalt.clikt.parameters.options.EagerOption.parser","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/parser.html","searchKeys":["parser","open override val parser: OptionParser","com.github.ajalt.clikt.parameters.options.EagerOption.parser"]},{"name":"open override val parser: OptionWithValuesParser","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.parser","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/parser.html","searchKeys":["parser","open override val parser: OptionWithValuesParser","com.github.ajalt.clikt.parameters.options.OptionWithValues.parser"]},{"name":"open override val required: Boolean","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.required","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/required.html","searchKeys":["required","open override val required: Boolean","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.required"]},{"name":"open override val secondaryNames: Set<String>","description":"com.github.ajalt.clikt.parameters.options.EagerOption.secondaryNames","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/secondary-names.html","searchKeys":["secondaryNames","open override val secondaryNames: Set<String>","com.github.ajalt.clikt.parameters.options.EagerOption.secondaryNames"]},{"name":"open override val secondaryNames: Set<String>","description":"com.github.ajalt.clikt.parameters.options.FlagOption.secondaryNames","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/secondary-names.html","searchKeys":["secondaryNames","open override val secondaryNames: Set<String>","com.github.ajalt.clikt.parameters.options.FlagOption.secondaryNames"]},{"name":"open override val secondaryNames: Set<String>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.secondaryNames","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/secondary-names.html","searchKeys":["secondaryNames","open override val secondaryNames: Set<String>","com.github.ajalt.clikt.parameters.options.OptionWithValues.secondaryNames"]},{"name":"open override val valueSourceKey: String?","description":"com.github.ajalt.clikt.parameters.options.EagerOption.valueSourceKey","location":"clikt/com.github.ajalt.clikt.parameters.options/-eager-option/value-source-key.html","searchKeys":["valueSourceKey","open override val valueSourceKey: String?","com.github.ajalt.clikt.parameters.options.EagerOption.valueSourceKey"]},{"name":"open override val valueSourceKey: String?","description":"com.github.ajalt.clikt.parameters.options.FlagOption.valueSourceKey","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/value-source-key.html","searchKeys":["valueSourceKey","open override val valueSourceKey: String?","com.github.ajalt.clikt.parameters.options.FlagOption.valueSourceKey"]},{"name":"open override val valueSourceKey: String?","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.valueSourceKey","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/value-source-key.html","searchKeys":["valueSourceKey","open override val valueSourceKey: String?","com.github.ajalt.clikt.parameters.options.OptionWithValues.valueSourceKey"]},{"name":"open override var groupName: String? = null","description":"com.github.ajalt.clikt.parameters.options.FlagOption.groupName","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/group-name.html","searchKeys":["groupName","open override var groupName: String? = null","com.github.ajalt.clikt.parameters.options.FlagOption.groupName"]},{"name":"open override var groupName: String? = null","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.groupName","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/group-name.html","searchKeys":["groupName","open override var groupName: String? = null","com.github.ajalt.clikt.parameters.options.OptionWithValues.groupName"]},{"name":"open override var name: String","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.name","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/name.html","searchKeys":["name","open override var name: String","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.name"]},{"name":"open override var names: Set<String>","description":"com.github.ajalt.clikt.parameters.options.FlagOption.names","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/names.html","searchKeys":["names","open override var names: Set<String>","com.github.ajalt.clikt.parameters.options.FlagOption.names"]},{"name":"open override var names: Set<String>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.names","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/names.html","searchKeys":["names","open override var names: Set<String>","com.github.ajalt.clikt.parameters.options.OptionWithValues.names"]},{"name":"open override var parameterGroup: ParameterGroup? = null","description":"com.github.ajalt.clikt.parameters.options.FlagOption.parameterGroup","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/parameter-group.html","searchKeys":["parameterGroup","open override var parameterGroup: ParameterGroup? = null","com.github.ajalt.clikt.parameters.options.FlagOption.parameterGroup"]},{"name":"open override var parameterGroup: ParameterGroup? = null","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.parameterGroup","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/parameter-group.html","searchKeys":["parameterGroup","open override var parameterGroup: ParameterGroup? = null","com.github.ajalt.clikt.parameters.options.OptionWithValues.parameterGroup"]},{"name":"open override var value: AllT","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.value","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/value.html","searchKeys":["value","open override var value: AllT","com.github.ajalt.clikt.parameters.options.OptionWithValues.value"]},{"name":"open override var value: T","description":"com.github.ajalt.clikt.parameters.options.FlagOption.value","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/value.html","searchKeys":["value","open override var value: T","com.github.ajalt.clikt.parameters.options.FlagOption.value"]},{"name":"open val commandHelp: String","description":"com.github.ajalt.clikt.core.CliktCommand.commandHelp","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/command-help.html","searchKeys":["commandHelp","open val commandHelp: String","com.github.ajalt.clikt.core.CliktCommand.commandHelp"]},{"name":"open val commandHelpEpilog: String","description":"com.github.ajalt.clikt.core.CliktCommand.commandHelpEpilog","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/command-help-epilog.html","searchKeys":["commandHelpEpilog","open val commandHelpEpilog: String","com.github.ajalt.clikt.core.CliktCommand.commandHelpEpilog"]},{"name":"open val completionCandidates: CompletionCandidates","description":"com.github.ajalt.clikt.parameters.arguments.Argument.completionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/completion-candidates.html","searchKeys":["completionCandidates","open val completionCandidates: CompletionCandidates","com.github.ajalt.clikt.parameters.arguments.Argument.completionCandidates"]},{"name":"open val completionCandidates: CompletionCandidates","description":"com.github.ajalt.clikt.parameters.options.Option.completionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/completion-candidates.html","searchKeys":["completionCandidates","open val completionCandidates: CompletionCandidates","com.github.ajalt.clikt.parameters.options.Option.completionCandidates"]},{"name":"operator fun <T : OptionGroup> T.provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, T>","description":"com.github.ajalt.clikt.parameters.groups.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/provide-delegate.html","searchKeys":["provideDelegate","operator fun <T : OptionGroup> T.provideDelegate(thisRef: CliktCommand, prop: KProperty<*>): ReadOnlyProperty<CliktCommand, T>","com.github.ajalt.clikt.parameters.groups.provideDelegate"]},{"name":"sealed class CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/index.html","searchKeys":["CompletionCandidates","sealed class CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates"]},{"name":"sealed class ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/index.html","searchKeys":["ParameterHelp","sealed class ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp"]},{"name":"val InputStream.isCliktParameterDefaultStdin: Boolean","description":"com.github.ajalt.clikt.parameters.types.isCliktParameterDefaultStdin","location":"clikt/com.github.ajalt.clikt.parameters.types/is-clikt-parameter-default-stdin.html","searchKeys":["isCliktParameterDefaultStdin","val InputStream.isCliktParameterDefaultStdin: Boolean","com.github.ajalt.clikt.parameters.types.isCliktParameterDefaultStdin"]},{"name":"val OutputStream.isCliktParameterDefaultStdout: Boolean","description":"com.github.ajalt.clikt.parameters.types.isCliktParameterDefaultStdout","location":"clikt/com.github.ajalt.clikt.parameters.types/is-clikt-parameter-default-stdout.html","searchKeys":["isCliktParameterDefaultStdout","val OutputStream.isCliktParameterDefaultStdout: Boolean","com.github.ajalt.clikt.parameters.types.isCliktParameterDefaultStdout"]},{"name":"val allowInterspersedArgs: Boolean","description":"com.github.ajalt.clikt.core.Context.allowInterspersedArgs","location":"clikt/com.github.ajalt.clikt.core/-context/allow-interspersed-args.html","searchKeys":["allowInterspersedArgs","val allowInterspersedArgs: Boolean","com.github.ajalt.clikt.core.Context.allowInterspersedArgs"]},{"name":"val argument: Argument","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.argument","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/argument.html","searchKeys":["argument","val argument: Argument","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.argument"]},{"name":"val autoEnvvarPrefix: String?","description":"com.github.ajalt.clikt.core.Context.autoEnvvarPrefix","location":"clikt/com.github.ajalt.clikt.core/-context/auto-envvar-prefix.html","searchKeys":["autoEnvvarPrefix","val autoEnvvarPrefix: String?","com.github.ajalt.clikt.core.Context.autoEnvvarPrefix"]},{"name":"val candidates: Set<String>","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.candidates","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-fixed/candidates.html","searchKeys":["candidates","val candidates: Set<String>","com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.candidates"]},{"name":"val command: CliktCommand","description":"com.github.ajalt.clikt.core.Context.command","location":"clikt/com.github.ajalt.clikt.core/-context/command.html","searchKeys":["command","val command: CliktCommand","com.github.ajalt.clikt.core.Context.command"]},{"name":"val command: CliktCommand","description":"com.github.ajalt.clikt.core.PrintHelpMessage.command","location":"clikt/com.github.ajalt.clikt.core/-print-help-message/command.html","searchKeys":["command","val command: CliktCommand","com.github.ajalt.clikt.core.PrintHelpMessage.command"]},{"name":"val commandName: String","description":"com.github.ajalt.clikt.core.CliktCommand.commandName","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/command-name.html","searchKeys":["commandName","val commandName: String","com.github.ajalt.clikt.core.CliktCommand.commandName"]},{"name":"val completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.completionCandidatesWithDefault","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/completion-candidates-with-default.html","searchKeys":["completionCandidatesWithDefault","val completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.completionCandidatesWithDefault"]},{"name":"val completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.completionCandidatesWithDefault","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/completion-candidates-with-default.html","searchKeys":["completionCandidatesWithDefault","val completionCandidatesWithDefault: ValueWithDefault<CompletionCandidates>","com.github.ajalt.clikt.parameters.options.OptionWithValues.completionCandidatesWithDefault"]},{"name":"val console: CliktConsole","description":"com.github.ajalt.clikt.core.Context.console","location":"clikt/com.github.ajalt.clikt.core/-context/console.html","searchKeys":["console","val console: CliktConsole","com.github.ajalt.clikt.core.Context.console"]},{"name":"val consumedCount: Int","description":"com.github.ajalt.clikt.parsers.OptionParser.ParseResult.consumedCount","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/-parse-result/consumed-count.html","searchKeys":["consumedCount","val consumedCount: Int","com.github.ajalt.clikt.parsers.OptionParser.ParseResult.consumedCount"]},{"name":"val context: Context","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/context.html","searchKeys":["context","val context: Context","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.context"]},{"name":"val context: Context","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-option-transform-context/context.html","searchKeys":["context","val context: Context","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext.context"]},{"name":"val context: Context","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/context.html","searchKeys":["context","val context: Context","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.context"]},{"name":"val context: Context","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/context.html","searchKeys":["context","val context: Context","com.github.ajalt.clikt.parameters.options.OptionTransformContext.context"]},{"name":"val correctionSuggestor: TypoSuggestor","description":"com.github.ajalt.clikt.core.Context.correctionSuggestor","location":"clikt/com.github.ajalt.clikt.core/-context/correction-suggestor.html","searchKeys":["correctionSuggestor","val correctionSuggestor: TypoSuggestor","com.github.ajalt.clikt.core.Context.correctionSuggestor"]},{"name":"val currentContext: Context","description":"com.github.ajalt.clikt.core.CliktCommand.currentContext","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/current-context.html","searchKeys":["currentContext","val currentContext: Context","com.github.ajalt.clikt.core.CliktCommand.currentContext"]},{"name":"val default: T","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault.default","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/default.html","searchKeys":["default","val default: T","com.github.ajalt.clikt.parameters.options.ValueWithDefault.default"]},{"name":"val envvar: String?","description":"com.github.ajalt.clikt.parameters.options.FlagOption.envvar","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/envvar.html","searchKeys":["envvar","val envvar: String?","com.github.ajalt.clikt.parameters.options.FlagOption.envvar"]},{"name":"val envvar: String?","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.envvar","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/envvar.html","searchKeys":["envvar","val envvar: String?","com.github.ajalt.clikt.parameters.options.OptionWithValues.envvar"]},{"name":"val error: Boolean = false","description":"com.github.ajalt.clikt.core.PrintHelpMessage.error","location":"clikt/com.github.ajalt.clikt.core/-print-help-message/error.html","searchKeys":["error","val error: Boolean = false","com.github.ajalt.clikt.core.PrintHelpMessage.error"]},{"name":"val error: Boolean = false","description":"com.github.ajalt.clikt.core.PrintMessage.error","location":"clikt/com.github.ajalt.clikt.core/-print-message/error.html","searchKeys":["error","val error: Boolean = false","com.github.ajalt.clikt.core.PrintMessage.error"]},{"name":"val error: Boolean = true","description":"com.github.ajalt.clikt.core.Abort.error","location":"clikt/com.github.ajalt.clikt.core/-abort/error.html","searchKeys":["error","val error: Boolean = true","com.github.ajalt.clikt.core.Abort.error"]},{"name":"val expandArgumentFiles: Boolean","description":"com.github.ajalt.clikt.core.Context.expandArgumentFiles","location":"clikt/com.github.ajalt.clikt.core/-context/expand-argument-files.html","searchKeys":["expandArgumentFiles","val expandArgumentFiles: Boolean","com.github.ajalt.clikt.core.Context.expandArgumentFiles"]},{"name":"val explicit: T?","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault.explicit","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/explicit.html","searchKeys":["explicit","val explicit: T?","com.github.ajalt.clikt.parameters.options.ValueWithDefault.explicit"]},{"name":"val forceUnixLineEndings: Boolean","description":"com.github.ajalt.clikt.core.PrintCompletionMessage.forceUnixLineEndings","location":"clikt/com.github.ajalt.clikt.core/-print-completion-message/force-unix-line-endings.html","searchKeys":["forceUnixLineEndings","val forceUnixLineEndings: Boolean","com.github.ajalt.clikt.core.PrintCompletionMessage.forceUnixLineEndings"]},{"name":"val generator: (CompletionCandidates.Custom.ShellType) -> String?","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.generator","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/generator.html","searchKeys":["generator","val generator: (CompletionCandidates.Custom.ShellType) -> String?","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.generator"]},{"name":"val groupName: String?","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.groupName","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/group-name.html","searchKeys":["groupName","val groupName: String?","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.groupName"]},{"name":"val help: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.help","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/help.html","searchKeys":["help","val help: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.help"]},{"name":"val help: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.help","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-group/help.html","searchKeys":["help","val help: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.help"]},{"name":"val help: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.help","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/help.html","searchKeys":["help","val help: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.help"]},{"name":"val help: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.help","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/help.html","searchKeys":["help","val help: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.help"]},{"name":"val helpFormatter: HelpFormatter","description":"com.github.ajalt.clikt.core.Context.helpFormatter","location":"clikt/com.github.ajalt.clikt.core/-context/help-formatter.html","searchKeys":["helpFormatter","val helpFormatter: HelpFormatter","com.github.ajalt.clikt.core.Context.helpFormatter"]},{"name":"val helpOptionNames: Set<String>","description":"com.github.ajalt.clikt.core.Context.helpOptionNames","location":"clikt/com.github.ajalt.clikt.core/-context/help-option-names.html","searchKeys":["helpOptionNames","val helpOptionNames: Set<String>","com.github.ajalt.clikt.core.Context.helpOptionNames"]},{"name":"val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.core.CliktCommand.helpTags","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/help-tags.html","searchKeys":["helpTags","val helpTags: Map<String, String>","com.github.ajalt.clikt.core.CliktCommand.helpTags"]},{"name":"val invocation: OptionParser.Invocation","description":"com.github.ajalt.clikt.parsers.OptionParser.ParseResult.invocation","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/-parse-result/invocation.html","searchKeys":["invocation","val invocation: OptionParser.Invocation","com.github.ajalt.clikt.parsers.OptionParser.ParseResult.invocation"]},{"name":"val invokeWithoutSubcommand: Boolean = false","description":"com.github.ajalt.clikt.core.CliktCommand.invokeWithoutSubcommand","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/invoke-without-subcommand.html","searchKeys":["invokeWithoutSubcommand","val invokeWithoutSubcommand: Boolean = false","com.github.ajalt.clikt.core.CliktCommand.invokeWithoutSubcommand"]},{"name":"val isWindows: Boolean","description":"com.github.ajalt.clikt.output.TermUi.isWindows","location":"clikt/com.github.ajalt.clikt.output/-term-ui/is-windows.html","searchKeys":["isWindows","val isWindows: Boolean","com.github.ajalt.clikt.output.TermUi.isWindows"]},{"name":"val localization: Localization","description":"com.github.ajalt.clikt.core.Context.localization","location":"clikt/com.github.ajalt.clikt.core/-context/localization.html","searchKeys":["localization","val localization: Localization","com.github.ajalt.clikt.core.Context.localization"]},{"name":"val messages: List<String>","description":"com.github.ajalt.clikt.core.CliktCommand.messages","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/messages.html","searchKeys":["messages","val messages: List<String>","com.github.ajalt.clikt.core.CliktCommand.messages"]},{"name":"val metavar: String?","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.metavar","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/metavar.html","searchKeys":["metavar","val metavar: String?","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.metavar"]},{"name":"val metavarWithDefault: ValueWithDefault<Context.() -> String?>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.metavarWithDefault","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/metavar-with-default.html","searchKeys":["metavarWithDefault","val metavarWithDefault: ValueWithDefault<Context.() -> String?>","com.github.ajalt.clikt.parameters.options.OptionWithValues.metavarWithDefault"]},{"name":"val name: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.name","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.name"]},{"name":"val name: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.name","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-group/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.name"]},{"name":"val name: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.name","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.name"]},{"name":"val name: String","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.name","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.name"]},{"name":"val name: String","description":"com.github.ajalt.clikt.parsers.OptionParser.Invocation.name","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/-invocation/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.parsers.OptionParser.Invocation.name"]},{"name":"val names: Set<String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.names","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/names.html","searchKeys":["names","val names: Set<String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.names"]},{"name":"val nvalues: Int","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.nvalues","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/nvalues.html","searchKeys":["nvalues","val nvalues: Int","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.nvalues"]},{"name":"val option: Option","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.option","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/option.html","searchKeys":["option","val option: Option","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.option"]},{"name":"val option: Option","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.option","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/option.html","searchKeys":["option","val option: Option","com.github.ajalt.clikt.parameters.options.OptionTransformContext.option"]},{"name":"val originalArgv: List<String>","description":"com.github.ajalt.clikt.core.Context.originalArgv","location":"clikt/com.github.ajalt.clikt.core/-context/original-argv.html","searchKeys":["originalArgv","val originalArgv: List<String>","com.github.ajalt.clikt.core.Context.originalArgv"]},{"name":"val parent: Context?","description":"com.github.ajalt.clikt.core.Context.parent","location":"clikt/com.github.ajalt.clikt.core/-context/parent.html","searchKeys":["parent","val parent: Context?","com.github.ajalt.clikt.core.Context.parent"]},{"name":"val printExtraMessages: Boolean","description":"com.github.ajalt.clikt.core.Context.printExtraMessages","location":"clikt/com.github.ajalt.clikt.core/-context/print-extra-messages.html","searchKeys":["printExtraMessages","val printExtraMessages: Boolean","com.github.ajalt.clikt.core.Context.printExtraMessages"]},{"name":"val printHelpOnEmptyArgs: Boolean = false","description":"com.github.ajalt.clikt.core.CliktCommand.printHelpOnEmptyArgs","location":"clikt/com.github.ajalt.clikt.core/-clikt-command/print-help-on-empty-args.html","searchKeys":["printHelpOnEmptyArgs","val printHelpOnEmptyArgs: Boolean = false","com.github.ajalt.clikt.core.CliktCommand.printHelpOnEmptyArgs"]},{"name":"val readEnvvar: (String) -> String?","description":"com.github.ajalt.clikt.core.Context.readEnvvar","location":"clikt/com.github.ajalt.clikt.core/-context/read-envvar.html","searchKeys":["readEnvvar","val readEnvvar: (String) -> String?","com.github.ajalt.clikt.core.Context.readEnvvar"]},{"name":"val readEnvvarBeforeValueSource: Boolean","description":"com.github.ajalt.clikt.core.Context.readEnvvarBeforeValueSource","location":"clikt/com.github.ajalt.clikt.core/-context/read-envvar-before-value-source.html","searchKeys":["readEnvvarBeforeValueSource","val readEnvvarBeforeValueSource: Boolean","com.github.ajalt.clikt.core.Context.readEnvvarBeforeValueSource"]},{"name":"val repeatable: Boolean","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.repeatable","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/repeatable.html","searchKeys":["repeatable","val repeatable: Boolean","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.repeatable"]},{"name":"val required: Boolean","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.required","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/required.html","searchKeys":["required","val required: Boolean","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.required"]},{"name":"val secondaryNames: Set<String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.secondaryNames","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/secondary-names.html","searchKeys":["secondaryNames","val secondaryNames: Set<String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.secondaryNames"]},{"name":"val sources: List<ValueSource>","description":"com.github.ajalt.clikt.sources.ChainedValueSource.sources","location":"clikt/com.github.ajalt.clikt.sources/-chained-value-source/sources.html","searchKeys":["sources","val sources: List<ValueSource>","com.github.ajalt.clikt.sources.ChainedValueSource.sources"]},{"name":"val statusCode: Int","description":"com.github.ajalt.clikt.core.ProgramResult.statusCode","location":"clikt/com.github.ajalt.clikt.core/-program-result/status-code.html","searchKeys":["statusCode","val statusCode: Int","com.github.ajalt.clikt.core.ProgramResult.statusCode"]},{"name":"val statusCode: Int = 1","description":"com.github.ajalt.clikt.core.UsageError.statusCode","location":"clikt/com.github.ajalt.clikt.core/-usage-error/status-code.html","searchKeys":["statusCode","val statusCode: Int = 1","com.github.ajalt.clikt.core.UsageError.statusCode"]},{"name":"val tags: Map<String, String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.tags","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/tags.html","searchKeys":["tags","val tags: Map<String, String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.tags"]},{"name":"val tags: Map<String, String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.tags","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/tags.html","searchKeys":["tags","val tags: Map<String, String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.tags"]},{"name":"val tags: Map<String, String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.tags","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/tags.html","searchKeys":["tags","val tags: Map<String, String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.tags"]},{"name":"val text: String? = null","description":"com.github.ajalt.clikt.core.UsageError.text","location":"clikt/com.github.ajalt.clikt.core/-usage-error/text.html","searchKeys":["text","val text: String? = null","com.github.ajalt.clikt.core.UsageError.text"]},{"name":"val tokenTransformer: Context.(String) -> String","description":"com.github.ajalt.clikt.core.Context.tokenTransformer","location":"clikt/com.github.ajalt.clikt.core/-context/token-transformer.html","searchKeys":["tokenTransformer","val tokenTransformer: Context.(String) -> String","com.github.ajalt.clikt.core.Context.tokenTransformer"]},{"name":"val transformAll: ArgCallsTransformer<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/transform-all.html","searchKeys":["transformAll","val transformAll: ArgCallsTransformer<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformAll"]},{"name":"val transformAll: CallsTransformer<EachT, AllT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/transform-all.html","searchKeys":["transformAll","val transformAll: CallsTransformer<EachT, AllT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.transformAll"]},{"name":"val transformAll: CallsTransformer<String, T>","description":"com.github.ajalt.clikt.parameters.options.FlagOption.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/transform-all.html","searchKeys":["transformAll","val transformAll: CallsTransformer<String, T>","com.github.ajalt.clikt.parameters.options.FlagOption.transformAll"]},{"name":"val transformEach: ArgsTransformer<ValueT, EachT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.transformEach","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/transform-each.html","searchKeys":["transformEach","val transformEach: ArgsTransformer<ValueT, EachT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.transformEach"]},{"name":"val transformEnvvar: OptionTransformContext.(String) -> T","description":"com.github.ajalt.clikt.parameters.options.FlagOption.transformEnvvar","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/transform-envvar.html","searchKeys":["transformEnvvar","val transformEnvvar: OptionTransformContext.(String) -> T","com.github.ajalt.clikt.parameters.options.FlagOption.transformEnvvar"]},{"name":"val transformValidator: ArgValidator<AllT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformValidator","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/transform-validator.html","searchKeys":["transformValidator","val transformValidator: ArgValidator<AllT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformValidator"]},{"name":"val transformValidator: OptionValidator<AllT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.transformValidator","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/transform-validator.html","searchKeys":["transformValidator","val transformValidator: OptionValidator<AllT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.transformValidator"]},{"name":"val transformValue: ArgValueTransformer<ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformValue","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/transform-value.html","searchKeys":["transformValue","val transformValue: ArgValueTransformer<ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformValue"]},{"name":"val transformValue: ValueTransformer<ValueT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.transformValue","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/transform-value.html","searchKeys":["transformValue","val transformValue: ValueTransformer<ValueT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.transformValue"]},{"name":"val validator: OptionValidator<T>","description":"com.github.ajalt.clikt.parameters.options.FlagOption.validator","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-option/validator.html","searchKeys":["validator","val validator: OptionValidator<T>","com.github.ajalt.clikt.parameters.options.FlagOption.validator"]},{"name":"val value: T","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault.value","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/value.html","searchKeys":["value","val value: T","com.github.ajalt.clikt.parameters.options.ValueWithDefault.value"]},{"name":"val valueSource: ValueSource?","description":"com.github.ajalt.clikt.core.Context.valueSource","location":"clikt/com.github.ajalt.clikt.core/-context/value-source.html","searchKeys":["valueSource","val valueSource: ValueSource?","com.github.ajalt.clikt.core.Context.valueSource"]},{"name":"val valueSplit: Regex?","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.valueSplit","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/value-split.html","searchKeys":["valueSplit","val valueSplit: Regex?","com.github.ajalt.clikt.parameters.options.OptionWithValues.valueSplit"]},{"name":"val values: List<String>","description":"com.github.ajalt.clikt.parsers.OptionParser.Invocation.values","location":"clikt/com.github.ajalt.clikt.parsers/-option-parser/-invocation/values.html","searchKeys":["values","val values: List<String>","com.github.ajalt.clikt.parsers.OptionParser.Invocation.values"]},{"name":"val values: List<String>","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.values","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/values.html","searchKeys":["values","val values: List<String>","com.github.ajalt.clikt.sources.ValueSource.Invocation.values"]},{"name":"var allowInterspersedArgs: Boolean","description":"com.github.ajalt.clikt.core.Context.Builder.allowInterspersedArgs","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/allow-interspersed-args.html","searchKeys":["allowInterspersedArgs","var allowInterspersedArgs: Boolean","com.github.ajalt.clikt.core.Context.Builder.allowInterspersedArgs"]},{"name":"var argument: Argument? = null","description":"com.github.ajalt.clikt.core.UsageError.argument","location":"clikt/com.github.ajalt.clikt.core/-usage-error/argument.html","searchKeys":["argument","var argument: Argument? = null","com.github.ajalt.clikt.core.UsageError.argument"]},{"name":"var autoEnvvarPrefix: String?","description":"com.github.ajalt.clikt.core.Context.Builder.autoEnvvarPrefix","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/auto-envvar-prefix.html","searchKeys":["autoEnvvarPrefix","var autoEnvvarPrefix: String?","com.github.ajalt.clikt.core.Context.Builder.autoEnvvarPrefix"]},{"name":"var console: CliktConsole","description":"com.github.ajalt.clikt.core.Context.Builder.console","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/console.html","searchKeys":["console","var console: CliktConsole","com.github.ajalt.clikt.core.Context.Builder.console"]},{"name":"var context: Context? = null","description":"com.github.ajalt.clikt.core.UsageError.context","location":"clikt/com.github.ajalt.clikt.core/-usage-error/context.html","searchKeys":["context","var context: Context? = null","com.github.ajalt.clikt.core.UsageError.context"]},{"name":"var correctionSuggestor: TypoSuggestor","description":"com.github.ajalt.clikt.core.Context.Builder.correctionSuggestor","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/correction-suggestor.html","searchKeys":["correctionSuggestor","var correctionSuggestor: TypoSuggestor","com.github.ajalt.clikt.core.Context.Builder.correctionSuggestor"]},{"name":"var envvarReader: (key: String) -> String?","description":"com.github.ajalt.clikt.core.Context.Builder.envvarReader","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/envvar-reader.html","searchKeys":["envvarReader","var envvarReader: (key: String) -> String?","com.github.ajalt.clikt.core.Context.Builder.envvarReader"]},{"name":"var expandArgumentFiles: Boolean","description":"com.github.ajalt.clikt.core.Context.Builder.expandArgumentFiles","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/expand-argument-files.html","searchKeys":["expandArgumentFiles","var expandArgumentFiles: Boolean","com.github.ajalt.clikt.core.Context.Builder.expandArgumentFiles"]},{"name":"var helpFormatter: HelpFormatter?","description":"com.github.ajalt.clikt.core.Context.Builder.helpFormatter","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/help-formatter.html","searchKeys":["helpFormatter","var helpFormatter: HelpFormatter?","com.github.ajalt.clikt.core.Context.Builder.helpFormatter"]},{"name":"var helpOptionNames: Set<String>","description":"com.github.ajalt.clikt.core.Context.Builder.helpOptionNames","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/help-option-names.html","searchKeys":["helpOptionNames","var helpOptionNames: Set<String>","com.github.ajalt.clikt.core.Context.Builder.helpOptionNames"]},{"name":"var invokedSubcommand: CliktCommand? = null","description":"com.github.ajalt.clikt.core.Context.invokedSubcommand","location":"clikt/com.github.ajalt.clikt.core/-context/invoked-subcommand.html","searchKeys":["invokedSubcommand","var invokedSubcommand: CliktCommand? = null","com.github.ajalt.clikt.core.Context.invokedSubcommand"]},{"name":"var localization: Localization","description":"com.github.ajalt.clikt.core.Context.Builder.localization","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/localization.html","searchKeys":["localization","var localization: Localization","com.github.ajalt.clikt.core.Context.Builder.localization"]},{"name":"var obj: Any? = null","description":"com.github.ajalt.clikt.core.Context.obj","location":"clikt/com.github.ajalt.clikt.core/-context/obj.html","searchKeys":["obj","var obj: Any? = null","com.github.ajalt.clikt.core.Context.obj"]},{"name":"var option: Option? = null","description":"com.github.ajalt.clikt.core.UsageError.option","location":"clikt/com.github.ajalt.clikt.core/-usage-error/option.html","searchKeys":["option","var option: Option? = null","com.github.ajalt.clikt.core.UsageError.option"]},{"name":"var paramName: String? = null","description":"com.github.ajalt.clikt.core.UsageError.paramName","location":"clikt/com.github.ajalt.clikt.core/-usage-error/param-name.html","searchKeys":["paramName","var paramName: String? = null","com.github.ajalt.clikt.core.UsageError.paramName"]},{"name":"var printExtraMessages: Boolean","description":"com.github.ajalt.clikt.core.Context.Builder.printExtraMessages","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/print-extra-messages.html","searchKeys":["printExtraMessages","var printExtraMessages: Boolean","com.github.ajalt.clikt.core.Context.Builder.printExtraMessages"]},{"name":"var readEnvvarBeforeValueSource: Boolean","description":"com.github.ajalt.clikt.core.Context.Builder.readEnvvarBeforeValueSource","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/read-envvar-before-value-source.html","searchKeys":["readEnvvarBeforeValueSource","var readEnvvarBeforeValueSource: Boolean","com.github.ajalt.clikt.core.Context.Builder.readEnvvarBeforeValueSource"]},{"name":"var tokenTransformer: Context.(String) -> String","description":"com.github.ajalt.clikt.core.Context.Builder.tokenTransformer","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/token-transformer.html","searchKeys":["tokenTransformer","var tokenTransformer: Context.(String) -> String","com.github.ajalt.clikt.core.Context.Builder.tokenTransformer"]},{"name":"var valueSource: ValueSource?","description":"com.github.ajalt.clikt.core.Context.Builder.valueSource","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/value-source.html","searchKeys":["valueSource","var valueSource: ValueSource?","com.github.ajalt.clikt.core.Context.Builder.valueSource"]}]
